syntax = "proto3";

package api;

option go_package = "github.com/brocaar/chirpstack-api/go/v3/as/external/api";
option java_package = "io.chirpstack.api.as.external.api";
option java_multiple_files = true;
option java_outer_classname = "smsTemplateProto";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";


// UserService is the service managing the user access.
service SmsTemplateService {
  // Create a new smsTemplate.
  rpc Create(CreateSmsTemplateRequest) returns (CreateSmsTemplateResponse) {
    option(google.api.http) = {
      post: "/api/sms-template"
      body: "*"
    };
  }
  // list data for a smsTemplate.
  rpc List(ListSmsTemplateRequest) returns (ListSmsTemplateResponse) {
    option(google.api.http) = {
      get: "/api/sms-template"
    };
  }

  // Get data for a ListSmsTemplate.
  rpc Get(GetSmsTemplateRequest) returns (GetSmsTemplateResponse) {
    option(google.api.http) = {
      get: "/api/sms-template/{id}"
    };
  }

  // Update an existing user.PUT /api/sms-template/{id}
  rpc Update(UpdateSmsTemplateRequest) returns (google.protobuf.Empty) {
    option(google.api.http) = {
      put: "/api/sms-template/{smsTemplate.id}"
      body: "*"
    };
  }

  // Delete a user.
  rpc Delete(DeleteSmsTemplateRequest) returns (google.protobuf.Empty) {
    option(google.api.http) = {
      delete: "/api/sms-template/{id}"
    };
  }
}

message SmsTemplate{
  // SmsTemplate ID (UUID string).
  // This will be automatically set on create.
  string id               = 1;
  //  模板编码:字符串，模板规则标识，可表示余额模板、密码模板等
  string template_mark    = 2;
  // 模板名称
  string template_name    = 3;
  // 编码生成算法1、随机2、其它
  int32 algorithm         = 4;
  // 编码位数,默认6
  int32 num               = 5;
  // 同一码发送次数0、不限;大于0为允许发送次数，
  int32 send_count        = 6;
  // 给短信平台发完验证码后，同一用户下次发送间隔时长.0、未间隔倒计时;大于0为发送后下次可发送的倒计秒数
  int32 countdown         = 7;
  //过期时长大于0为秒数
  int64 expires           = 8;
  //试错阈值expire_count（验证码错误次数达到阈值后更新状态
  int32 expire_count      = 9;
  //消息内容标题
  string  title           = 10;
  //内容模板：验证码{code},有效期{second}分钟。您正在找回Lora登录密码，请勿泄漏！如非您本人操作，请忽略。
  string  content         = 11;
  //状态0、未启用1、已启用2、已停用
  int32  status           = 12;
  //创建人
  string  author          = 13;
  google.protobuf.Timestamp created_at = 14;
  // Last update timestamp.
  google.protobuf.Timestamp updated_at = 15;
  //备注
  string  remark          = 16;
}
message CreateSmsTemplateRequest {
  // User object to create.
  SmsTemplate smsTemplate = 1;
}
message CreateSmsTemplateResponse {
  string id             = 1;
}

message ListSmsTemplateRequest {
  // count per page
  int64 limit = 1;

  // pageIndex
  int64 offset = 2;
}

message ListSmsTemplateResponse {
  // Total number of SmsTemplate.
  int64 total_count = 1;
  // Result-set.数组
  repeated SmsTemplate result = 2;
}

message GetSmsTemplateRequest {
  // SmsTemplate ID.
  string id =     1;
}

message GetSmsTemplateResponse {
  // SmsTemplate object.
  SmsTemplate smsTemplate = 1;
  // Created at timestamp.
  google.protobuf.Timestamp createdAt = 2;
  // Last update timestamp.
  google.protobuf.Timestamp updatedAt = 3;
}

message UpdateSmsTemplateRequest {
  // SmsTemplate object to update.
  SmsTemplate smsTemplate = 1;
}

message DeleteSmsTemplateRequest {
  // SmsTemplate ID.
  string id = 1;
}
