// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/reportCheckDay.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportCheckDay struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReportDayIds         string   `protobuf:"bytes,2,opt,name=report_day_ids,json=reportDayIds,proto3" json:"report_day_ids,omitempty"`
	DevId                string   `protobuf:"bytes,4,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	MasterAmount         float64  `protobuf:"fixed64,5,opt,name=master_amount,json=masterAmount,proto3" json:"master_amount,omitempty"`
	SlaveAmount          float64  `protobuf:"fixed64,6,opt,name=slave_amount,json=slaveAmount,proto3" json:"slave_amount,omitempty"`
	LossAmount           float64  `protobuf:"fixed64,7,opt,name=loss_amount,json=lossAmount,proto3" json:"loss_amount,omitempty"`
	LossRate             float64  `protobuf:"fixed64,8,opt,name=loss_rate,json=lossRate,proto3" json:"loss_rate,omitempty"`
	SlaveNumber          int32    `protobuf:"varint,9,opt,name=slave_number,json=slaveNumber,proto3" json:"slave_number,omitempty"`
	StatisticalTime      int64    `protobuf:"varint,10,opt,name=statistical_time,json=statisticalTime,proto3" json:"statistical_time,omitempty"`
	Year                 int32    `protobuf:"varint,11,opt,name=year,proto3" json:"year,omitempty"`
	Month                int32    `protobuf:"varint,12,opt,name=month,proto3" json:"month,omitempty"`
	Day                  int32    `protobuf:"varint,13,opt,name=day,proto3" json:"day,omitempty"`
	ReportMonthId        int64    `protobuf:"varint,14,opt,name=report_month_id,json=reportMonthId,proto3" json:"report_month_id,omitempty"`
	WarningNo            int64    `protobuf:"varint,15,opt,name=warning_no,json=warningNo,proto3" json:"warning_no,omitempty"`
	Status               int32    `protobuf:"varint,21,opt,name=status,proto3" json:"status,omitempty"`
	Author               string   `protobuf:"bytes,22,opt,name=author,proto3" json:"author,omitempty"`
	Remark               string   `protobuf:"bytes,23,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportCheckDay) Reset()         { *m = ReportCheckDay{} }
func (m *ReportCheckDay) String() string { return proto.CompactTextString(m) }
func (*ReportCheckDay) ProtoMessage()    {}
func (*ReportCheckDay) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{0}
}

func (m *ReportCheckDay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportCheckDay.Unmarshal(m, b)
}
func (m *ReportCheckDay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportCheckDay.Marshal(b, m, deterministic)
}
func (m *ReportCheckDay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportCheckDay.Merge(m, src)
}
func (m *ReportCheckDay) XXX_Size() int {
	return xxx_messageInfo_ReportCheckDay.Size(m)
}
func (m *ReportCheckDay) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportCheckDay.DiscardUnknown(m)
}

var xxx_messageInfo_ReportCheckDay proto.InternalMessageInfo

func (m *ReportCheckDay) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReportCheckDay) GetReportDayIds() string {
	if m != nil {
		return m.ReportDayIds
	}
	return ""
}

func (m *ReportCheckDay) GetDevId() string {
	if m != nil {
		return m.DevId
	}
	return ""
}

func (m *ReportCheckDay) GetMasterAmount() float64 {
	if m != nil {
		return m.MasterAmount
	}
	return 0
}

func (m *ReportCheckDay) GetSlaveAmount() float64 {
	if m != nil {
		return m.SlaveAmount
	}
	return 0
}

func (m *ReportCheckDay) GetLossAmount() float64 {
	if m != nil {
		return m.LossAmount
	}
	return 0
}

func (m *ReportCheckDay) GetLossRate() float64 {
	if m != nil {
		return m.LossRate
	}
	return 0
}

func (m *ReportCheckDay) GetSlaveNumber() int32 {
	if m != nil {
		return m.SlaveNumber
	}
	return 0
}

func (m *ReportCheckDay) GetStatisticalTime() int64 {
	if m != nil {
		return m.StatisticalTime
	}
	return 0
}

func (m *ReportCheckDay) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *ReportCheckDay) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *ReportCheckDay) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *ReportCheckDay) GetReportMonthId() int64 {
	if m != nil {
		return m.ReportMonthId
	}
	return 0
}

func (m *ReportCheckDay) GetWarningNo() int64 {
	if m != nil {
		return m.WarningNo
	}
	return 0
}

func (m *ReportCheckDay) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReportCheckDay) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ReportCheckDay) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type CreateReportCheckDayRequest struct {
	// Test object to create.
	ReportCheckDay       *ReportCheckDay `protobuf:"bytes,1,opt,name=reportCheckDay,proto3" json:"reportCheckDay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateReportCheckDayRequest) Reset()         { *m = CreateReportCheckDayRequest{} }
func (m *CreateReportCheckDayRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReportCheckDayRequest) ProtoMessage()    {}
func (*CreateReportCheckDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{1}
}

func (m *CreateReportCheckDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReportCheckDayRequest.Unmarshal(m, b)
}
func (m *CreateReportCheckDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReportCheckDayRequest.Marshal(b, m, deterministic)
}
func (m *CreateReportCheckDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReportCheckDayRequest.Merge(m, src)
}
func (m *CreateReportCheckDayRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReportCheckDayRequest.Size(m)
}
func (m *CreateReportCheckDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReportCheckDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReportCheckDayRequest proto.InternalMessageInfo

func (m *CreateReportCheckDayRequest) GetReportCheckDay() *ReportCheckDay {
	if m != nil {
		return m.ReportCheckDay
	}
	return nil
}

type CreateReportCheckDayResponse struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReportCheckDayResponse) Reset()         { *m = CreateReportCheckDayResponse{} }
func (m *CreateReportCheckDayResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReportCheckDayResponse) ProtoMessage()    {}
func (*CreateReportCheckDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{2}
}

func (m *CreateReportCheckDayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReportCheckDayResponse.Unmarshal(m, b)
}
func (m *CreateReportCheckDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReportCheckDayResponse.Marshal(b, m, deterministic)
}
func (m *CreateReportCheckDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReportCheckDayResponse.Merge(m, src)
}
func (m *CreateReportCheckDayResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReportCheckDayResponse.Size(m)
}
func (m *CreateReportCheckDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReportCheckDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReportCheckDayResponse proto.InternalMessageInfo

func (m *CreateReportCheckDayResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetReportCheckDayRequest struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReportCheckDayRequest) Reset()         { *m = GetReportCheckDayRequest{} }
func (m *GetReportCheckDayRequest) String() string { return proto.CompactTextString(m) }
func (*GetReportCheckDayRequest) ProtoMessage()    {}
func (*GetReportCheckDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{3}
}

func (m *GetReportCheckDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportCheckDayRequest.Unmarshal(m, b)
}
func (m *GetReportCheckDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportCheckDayRequest.Marshal(b, m, deterministic)
}
func (m *GetReportCheckDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportCheckDayRequest.Merge(m, src)
}
func (m *GetReportCheckDayRequest) XXX_Size() int {
	return xxx_messageInfo_GetReportCheckDayRequest.Size(m)
}
func (m *GetReportCheckDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportCheckDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportCheckDayRequest proto.InternalMessageInfo

func (m *GetReportCheckDayRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetReportCheckDayResponse struct {
	// Test object.
	ReportCheckDay *ReportCheckDay `protobuf:"bytes,1,opt,name=reportCheckDay,proto3" json:"reportCheckDay,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetReportCheckDayResponse) Reset()         { *m = GetReportCheckDayResponse{} }
func (m *GetReportCheckDayResponse) String() string { return proto.CompactTextString(m) }
func (*GetReportCheckDayResponse) ProtoMessage()    {}
func (*GetReportCheckDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{4}
}

func (m *GetReportCheckDayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportCheckDayResponse.Unmarshal(m, b)
}
func (m *GetReportCheckDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportCheckDayResponse.Marshal(b, m, deterministic)
}
func (m *GetReportCheckDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportCheckDayResponse.Merge(m, src)
}
func (m *GetReportCheckDayResponse) XXX_Size() int {
	return xxx_messageInfo_GetReportCheckDayResponse.Size(m)
}
func (m *GetReportCheckDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportCheckDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportCheckDayResponse proto.InternalMessageInfo

func (m *GetReportCheckDayResponse) GetReportCheckDay() *ReportCheckDay {
	if m != nil {
		return m.ReportCheckDay
	}
	return nil
}

func (m *GetReportCheckDayResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetReportCheckDayResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type UpdateReportCheckDayRequest struct {
	// Test object to update.
	ReportCheckDay       *ReportCheckDay `protobuf:"bytes,1,opt,name=reportCheckDay,proto3" json:"reportCheckDay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateReportCheckDayRequest) Reset()         { *m = UpdateReportCheckDayRequest{} }
func (m *UpdateReportCheckDayRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateReportCheckDayRequest) ProtoMessage()    {}
func (*UpdateReportCheckDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{5}
}

func (m *UpdateReportCheckDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReportCheckDayRequest.Unmarshal(m, b)
}
func (m *UpdateReportCheckDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReportCheckDayRequest.Marshal(b, m, deterministic)
}
func (m *UpdateReportCheckDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReportCheckDayRequest.Merge(m, src)
}
func (m *UpdateReportCheckDayRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateReportCheckDayRequest.Size(m)
}
func (m *UpdateReportCheckDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReportCheckDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReportCheckDayRequest proto.InternalMessageInfo

func (m *UpdateReportCheckDayRequest) GetReportCheckDay() *ReportCheckDay {
	if m != nil {
		return m.ReportCheckDay
	}
	return nil
}

type DeleteReportCheckDayRequest struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReportCheckDayRequest) Reset()         { *m = DeleteReportCheckDayRequest{} }
func (m *DeleteReportCheckDayRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReportCheckDayRequest) ProtoMessage()    {}
func (*DeleteReportCheckDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{6}
}

func (m *DeleteReportCheckDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReportCheckDayRequest.Unmarshal(m, b)
}
func (m *DeleteReportCheckDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReportCheckDayRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReportCheckDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReportCheckDayRequest.Merge(m, src)
}
func (m *DeleteReportCheckDayRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReportCheckDayRequest.Size(m)
}
func (m *DeleteReportCheckDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReportCheckDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReportCheckDayRequest proto.InternalMessageInfo

func (m *DeleteReportCheckDayRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListReportCheckDayRequest struct {
	// Max number of items to return.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReportCheckDayRequest) Reset()         { *m = ListReportCheckDayRequest{} }
func (m *ListReportCheckDayRequest) String() string { return proto.CompactTextString(m) }
func (*ListReportCheckDayRequest) ProtoMessage()    {}
func (*ListReportCheckDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{7}
}

func (m *ListReportCheckDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReportCheckDayRequest.Unmarshal(m, b)
}
func (m *ListReportCheckDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReportCheckDayRequest.Marshal(b, m, deterministic)
}
func (m *ListReportCheckDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReportCheckDayRequest.Merge(m, src)
}
func (m *ListReportCheckDayRequest) XXX_Size() int {
	return xxx_messageInfo_ListReportCheckDayRequest.Size(m)
}
func (m *ListReportCheckDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReportCheckDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReportCheckDayRequest proto.InternalMessageInfo

func (m *ListReportCheckDayRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListReportCheckDayRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListReportCheckDayResponse struct {
	// Total number of test.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Test within the result-set.
	Result               []*ReportCheckDayListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListReportCheckDayResponse) Reset()         { *m = ListReportCheckDayResponse{} }
func (m *ListReportCheckDayResponse) String() string { return proto.CompactTextString(m) }
func (*ListReportCheckDayResponse) ProtoMessage()    {}
func (*ListReportCheckDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{8}
}

func (m *ListReportCheckDayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReportCheckDayResponse.Unmarshal(m, b)
}
func (m *ListReportCheckDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReportCheckDayResponse.Marshal(b, m, deterministic)
}
func (m *ListReportCheckDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReportCheckDayResponse.Merge(m, src)
}
func (m *ListReportCheckDayResponse) XXX_Size() int {
	return xxx_messageInfo_ListReportCheckDayResponse.Size(m)
}
func (m *ListReportCheckDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReportCheckDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReportCheckDayResponse proto.InternalMessageInfo

func (m *ListReportCheckDayResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListReportCheckDayResponse) GetResult() []*ReportCheckDayListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetDetailListReportCheckDayRequest struct {
	// Test ID.
	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDetailListReportCheckDayRequest) Reset()         { *m = GetDetailListReportCheckDayRequest{} }
func (m *GetDetailListReportCheckDayRequest) String() string { return proto.CompactTextString(m) }
func (*GetDetailListReportCheckDayRequest) ProtoMessage()    {}
func (*GetDetailListReportCheckDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{9}
}

func (m *GetDetailListReportCheckDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetailListReportCheckDayRequest.Unmarshal(m, b)
}
func (m *GetDetailListReportCheckDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetailListReportCheckDayRequest.Marshal(b, m, deterministic)
}
func (m *GetDetailListReportCheckDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailListReportCheckDayRequest.Merge(m, src)
}
func (m *GetDetailListReportCheckDayRequest) XXX_Size() int {
	return xxx_messageInfo_GetDetailListReportCheckDayRequest.Size(m)
}
func (m *GetDetailListReportCheckDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailListReportCheckDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailListReportCheckDayRequest proto.InternalMessageInfo

func (m *GetDetailListReportCheckDayRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetDetailListReportCheckDayRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetDetailListReportCheckDayRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetDetailListReportCheckDayResponse struct {
	// Total number of test.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Test within the result-set.
	Result               []*ReportDayListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetDetailListReportCheckDayResponse) Reset()         { *m = GetDetailListReportCheckDayResponse{} }
func (m *GetDetailListReportCheckDayResponse) String() string { return proto.CompactTextString(m) }
func (*GetDetailListReportCheckDayResponse) ProtoMessage()    {}
func (*GetDetailListReportCheckDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5ff58855b343406, []int{10}
}

func (m *GetDetailListReportCheckDayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetailListReportCheckDayResponse.Unmarshal(m, b)
}
func (m *GetDetailListReportCheckDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetailListReportCheckDayResponse.Marshal(b, m, deterministic)
}
func (m *GetDetailListReportCheckDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailListReportCheckDayResponse.Merge(m, src)
}
func (m *GetDetailListReportCheckDayResponse) XXX_Size() int {
	return xxx_messageInfo_GetDetailListReportCheckDayResponse.Size(m)
}
func (m *GetDetailListReportCheckDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailListReportCheckDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailListReportCheckDayResponse proto.InternalMessageInfo

func (m *GetDetailListReportCheckDayResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetDetailListReportCheckDayResponse) GetResult() []*ReportDayListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*ReportCheckDay)(nil), "api.ReportCheckDay")
	proto.RegisterType((*CreateReportCheckDayRequest)(nil), "api.CreateReportCheckDayRequest")
	proto.RegisterType((*CreateReportCheckDayResponse)(nil), "api.CreateReportCheckDayResponse")
	proto.RegisterType((*GetReportCheckDayRequest)(nil), "api.GetReportCheckDayRequest")
	proto.RegisterType((*GetReportCheckDayResponse)(nil), "api.GetReportCheckDayResponse")
	proto.RegisterType((*UpdateReportCheckDayRequest)(nil), "api.UpdateReportCheckDayRequest")
	proto.RegisterType((*DeleteReportCheckDayRequest)(nil), "api.DeleteReportCheckDayRequest")
	proto.RegisterType((*ListReportCheckDayRequest)(nil), "api.ListReportCheckDayRequest")
	proto.RegisterType((*ListReportCheckDayResponse)(nil), "api.ListReportCheckDayResponse")
	proto.RegisterType((*GetDetailListReportCheckDayRequest)(nil), "api.GetDetailListReportCheckDayRequest")
	proto.RegisterType((*GetDetailListReportCheckDayResponse)(nil), "api.GetDetailListReportCheckDayResponse")
}

func init() {
	proto.RegisterFile("as/external/api/reportCheckDay.proto", fileDescriptor_d5ff58855b343406)
}

var fileDescriptor_d5ff58855b343406 = []byte{
	// 928 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xd6, 0xda, 0xb5, 0xa9, 0x8f, 0xf3, 0x53, 0x4d, 0x9b, 0x74, 0xbb, 0x4e, 0x88, 0xb3, 0xa9,
	0x8a, 0x1b, 0xc9, 0xbb, 0x52, 0x82, 0x84, 0x80, 0xab, 0x34, 0x41, 0x91, 0x25, 0xa8, 0x22, 0x53,
	0x6e, 0x7a, 0x63, 0x8d, 0x77, 0xc7, 0xf6, 0x28, 0xbb, 0x3b, 0xcb, 0xcc, 0xd8, 0xd4, 0x42, 0xbd,
	0xe1, 0x11, 0xe0, 0xbd, 0x90, 0x10, 0xaf, 0xc0, 0x63, 0x70, 0x81, 0xe6, 0xc7, 0x34, 0x5e, 0x76,
	0x1d, 0x24, 0xc4, 0x9d, 0xcf, 0x37, 0xdf, 0x9c, 0xef, 0xfc, 0x7a, 0x16, 0x9e, 0x63, 0x11, 0x92,
	0x77, 0x92, 0xf0, 0x0c, 0x27, 0x21, 0xce, 0x69, 0xc8, 0x49, 0xce, 0xb8, 0xbc, 0x9c, 0x91, 0xe8,
	0xf6, 0x0a, 0x2f, 0x83, 0x9c, 0x33, 0xc9, 0x50, 0x1d, 0xe7, 0xd4, 0x3b, 0x98, 0x32, 0x36, 0x4d,
	0x88, 0x66, 0xe1, 0x2c, 0x63, 0x12, 0x4b, 0xca, 0x32, 0x61, 0x28, 0xde, 0x91, 0x3d, 0xd5, 0xd6,
	0x78, 0x3e, 0x09, 0x25, 0x4d, 0x89, 0x90, 0x38, 0xcd, 0x2d, 0xa1, 0x53, 0x24, 0x90, 0x34, 0x97,
	0x56, 0xc0, 0x3b, 0x29, 0x0f, 0xe3, 0x86, 0xb3, 0x09, 0x4d, 0x88, 0x21, 0xf9, 0x7f, 0xd6, 0x61,
	0x67, 0xb8, 0x16, 0x1e, 0xda, 0x81, 0x1a, 0x8d, 0x5d, 0xa7, 0xeb, 0xf4, 0xea, 0xc3, 0x1a, 0x8d,
	0xd1, 0x73, 0xd8, 0x31, 0x37, 0x47, 0x31, 0x5e, 0x8e, 0x68, 0x2c, 0xdc, 0x5a, 0xd7, 0xe9, 0xb5,
	0x86, 0x5b, 0x06, 0xbd, 0xc2, 0xcb, 0x41, 0x2c, 0xd0, 0x1e, 0x34, 0x63, 0xb2, 0x18, 0xd1, 0xd8,
	0x7d, 0xa0, 0x4f, 0x1b, 0x31, 0x59, 0x0c, 0x62, 0x74, 0x02, 0xdb, 0x29, 0x16, 0x92, 0xf0, 0x11,
	0x4e, 0xd9, 0x3c, 0x93, 0x6e, 0xa3, 0xeb, 0xf4, 0x9c, 0xe1, 0x96, 0x01, 0x2f, 0x34, 0x86, 0x8e,
	0x61, 0x4b, 0x24, 0x78, 0x41, 0x56, 0x9c, 0xa6, 0xe6, 0xb4, 0x35, 0x66, 0x29, 0x47, 0xd0, 0x4e,
	0x98, 0x10, 0x2b, 0xc6, 0x47, 0x9a, 0x01, 0x0a, 0xb2, 0x84, 0x0e, 0xb4, 0x34, 0x81, 0x63, 0x49,
	0xdc, 0x87, 0xfa, 0xf8, 0xa1, 0x02, 0x86, 0x58, 0x92, 0x0f, 0x02, 0xd9, 0x3c, 0x1d, 0x13, 0xee,
	0xb6, 0xba, 0x4e, 0xaf, 0x61, 0x05, 0x5e, 0x6b, 0x08, 0xbd, 0x84, 0x47, 0x42, 0x55, 0x5f, 0x48,
	0x1a, 0xe1, 0x64, 0xa4, 0x2a, 0xed, 0x82, 0xae, 0xc1, 0xee, 0x1d, 0xfc, 0x0d, 0x4d, 0x09, 0x42,
	0xf0, 0x60, 0x49, 0x30, 0x77, 0xdb, 0xda, 0x8b, 0xfe, 0x8d, 0x9e, 0x40, 0x23, 0x65, 0x99, 0x9c,
	0xb9, 0x5b, 0x1a, 0x34, 0x06, 0x7a, 0x04, 0xf5, 0x18, 0x2f, 0xdd, 0x6d, 0x8d, 0xa9, 0x9f, 0xe8,
	0x05, 0xec, 0xda, 0x62, 0x6a, 0x86, 0xaa, 0xd7, 0x8e, 0x56, 0xd9, 0x36, 0xf0, 0x37, 0x0a, 0x1d,
	0xc4, 0xe8, 0x10, 0xe0, 0x07, 0xcc, 0x33, 0x9a, 0x4d, 0x47, 0x19, 0x73, 0x77, 0x35, 0xa5, 0x65,
	0x91, 0xd7, 0x0c, 0xed, 0x43, 0x53, 0x45, 0x35, 0x17, 0xee, 0x9e, 0xf6, 0x6d, 0x2d, 0x85, 0xe3,
	0xb9, 0x9c, 0x31, 0xee, 0xee, 0xeb, 0x2e, 0x58, 0x4b, 0xe1, 0x9c, 0xa4, 0x98, 0xdf, 0xba, 0x4f,
	0x0d, 0x6e, 0x2c, 0xff, 0x2d, 0x74, 0x2e, 0x39, 0xc1, 0x92, 0xac, 0xcf, 0xc0, 0x90, 0x7c, 0x3f,
	0x27, 0x42, 0xa2, 0x2f, 0x57, 0xad, 0x5f, 0x1d, 0xe8, 0xb1, 0x68, 0x9f, 0x3d, 0x0e, 0x70, 0x4e,
	0x83, 0xc2, 0x9d, 0x02, 0xd5, 0x0f, 0xe0, 0xa0, 0xdc, 0xb7, 0xc8, 0x59, 0x26, 0x48, 0x71, 0xce,
	0xfc, 0x53, 0x70, 0xaf, 0x89, 0x2c, 0x0f, 0xa4, 0xc8, 0xfd, 0xd5, 0x81, 0x67, 0x25, 0x64, 0xeb,
	0xf9, 0xbf, 0x84, 0x8d, 0x3e, 0x07, 0x88, 0x74, 0xd8, 0xf1, 0x08, 0x4b, 0x3d, 0xea, 0xed, 0x33,
	0x2f, 0x30, 0x8b, 0x16, 0xac, 0x16, 0x2d, 0x78, 0xb3, 0xda, 0xc4, 0x61, 0xcb, 0xb2, 0x2f, 0xa4,
	0xba, 0x3a, 0xcf, 0xe3, 0xd5, 0xd5, 0xfa, 0xfd, 0x57, 0x2d, 0xfb, 0x42, 0xaa, 0x46, 0x7c, 0xa7,
	0x8d, 0xff, 0xa1, 0x11, 0x7d, 0xe8, 0x5c, 0x91, 0x84, 0x54, 0xf9, 0x2e, 0xd6, 0x76, 0x00, 0xcf,
	0xbe, 0xa6, 0xa2, 0xa2, 0x11, 0x4f, 0xa0, 0x91, 0xd0, 0x94, 0x4a, 0xcb, 0x37, 0x86, 0x1a, 0x2f,
	0x36, 0x99, 0x08, 0x62, 0xea, 0x55, 0x1f, 0x5a, 0xcb, 0xe7, 0xe0, 0x95, 0xb9, 0xb2, 0x6d, 0x3a,
	0x82, 0xb6, 0x64, 0x12, 0x27, 0xa3, 0x48, 0xef, 0xb4, 0xf1, 0x08, 0x1a, 0xba, 0xd4, 0x3b, 0x7d,
	0xae, 0xa6, 0x56, 0xcc, 0x13, 0xe5, 0xb6, 0xde, 0x6b, 0x9f, 0x75, 0x4a, 0xb2, 0x55, 0xfe, 0x07,
	0x92, 0xa4, 0x43, 0x4b, 0xf5, 0xc7, 0xe0, 0x5f, 0x13, 0x79, 0x45, 0x24, 0xa6, 0x49, 0x75, 0x1e,
	0xc5, 0x3f, 0xb9, 0xbf, 0xf3, 0xaa, 0x95, 0xe7, 0x55, 0x5f, 0xcb, 0x6b, 0x01, 0x27, 0x1b, 0x35,
	0xfe, 0x6d, 0x82, 0x41, 0x21, 0xc1, 0xfd, 0x3b, 0x09, 0x96, 0xe4, 0x76, 0xf6, 0x5b, 0x03, 0xf6,
	0xd6, 0xb5, 0xbe, 0x25, 0x7c, 0x41, 0x23, 0x82, 0x18, 0x34, 0xcd, 0xb2, 0xa1, 0xae, 0xf6, 0xb1,
	0x61, 0xab, 0xbd, 0xe3, 0x0d, 0x0c, 0x13, 0xb9, 0xdf, 0xfd, 0xe9, 0xf7, 0x3f, 0x7e, 0xa9, 0x79,
	0xfe, 0xde, 0x9d, 0x87, 0xa3, 0x1f, 0x29, 0x56, 0x3f, 0xc6, 0xcb, 0x2f, 0x9c, 0x53, 0x34, 0x83,
	0xfa, 0x35, 0x91, 0xe8, 0x50, 0xfb, 0xaa, 0xda, 0x5b, 0xef, 0xe3, 0xaa, 0x63, 0xab, 0xe3, 0x6b,
	0x9d, 0x03, 0xe4, 0x95, 0xea, 0x84, 0x3f, 0xd2, 0xf8, 0x3d, 0x7a, 0x07, 0x4d, 0xb3, 0x1a, 0x36,
	0xb5, 0x0d, 0x7b, 0xe2, 0xed, 0xff, 0x63, 0xdb, 0xbe, 0x52, 0x2f, 0xa2, 0xff, 0xa9, 0xd6, 0x09,
	0xbc, 0x97, 0x15, 0x3a, 0x85, 0x17, 0x9a, 0xc6, 0xef, 0x55, 0x8e, 0x13, 0x68, 0x9a, 0xc5, 0xb1,
	0xca, 0x1b, 0xb6, 0xa8, 0x52, 0xd9, 0x66, 0x78, 0xba, 0x29, 0xc3, 0x09, 0x3c, 0x50, 0xad, 0x46,
	0xa6, 0x5a, 0x95, 0x43, 0xeb, 0x1d, 0x55, 0x9e, 0xdb, 0x72, 0x1e, 0x6a, 0xb1, 0xa7, 0xa8, 0xbc,
	0x6d, 0xe8, 0x67, 0x07, 0xb6, 0xd7, 0xe6, 0x16, 0x7d, 0xb2, 0xea, 0xcf, 0x3d, 0xfb, 0xe2, 0xf5,
	0xee, 0x27, 0xda, 0x18, 0x02, 0x1d, 0x43, 0x0f, 0xbd, 0xa8, 0x4e, 0x38, 0x8c, 0xb5, 0x93, 0x7e,
	0x42, 0x85, 0x7c, 0x25, 0xe0, 0x98, 0xb2, 0x20, 0x9a, 0x51, 0x9e, 0x0b, 0x89, 0xa3, 0x5b, 0x2d,
	0x84, 0x45, 0xb0, 0xfa, 0x74, 0x51, 0xf6, 0xab, 0xc7, 0xeb, 0x62, 0x37, 0xaa, 0xc6, 0x37, 0xce,
	0xdb, 0xcf, 0xa6, 0x54, 0xce, 0xe6, 0xe3, 0x20, 0x62, 0x69, 0x38, 0xe6, 0x2c, 0xc2, 0x98, 0x87,
	0x1f, 0x3c, 0xf5, 0x55, 0x00, 0x53, 0x16, 0x2e, 0xce, 0xc3, 0xc2, 0xa7, 0xd0, 0xb8, 0xa9, 0xbb,
	0x74, 0xfe, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x22, 0x84, 0x7b, 0x7d, 0xab, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReportCheckDayServiceClient is the client API for ReportCheckDayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportCheckDayServiceClient interface {
	// Create creates report-day.
	Create(ctx context.Context, in *CreateReportCheckDayRequest, opts ...grpc.CallOption) (*CreateReportCheckDayResponse, error)
	// Get returns the report-day matching the given id.
	Get(ctx context.Context, in *GetReportCheckDayRequest, opts ...grpc.CallOption) (*GetReportCheckDayResponse, error)
	// Update updates the given report-day.
	Update(ctx context.Context, in *UpdateReportCheckDayRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete deletes the report-day matching the given id.
	Delete(ctx context.Context, in *DeleteReportCheckDayRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List lists the available report-Day.
	List(ctx context.Context, in *ListReportCheckDayRequest, opts ...grpc.CallOption) (*ListReportCheckDayResponse, error)
	// GetDetailList returns the detail-list of the report-check-day  matching the given id.
	GetDetailList(ctx context.Context, in *GetDetailListReportCheckDayRequest, opts ...grpc.CallOption) (*GetDetailListReportCheckDayResponse, error)
}

type reportCheckDayServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewReportCheckDayServiceClient(cc grpc.ClientConnInterface) ReportCheckDayServiceClient {
	return &reportCheckDayServiceClient{cc}
}

func (c *reportCheckDayServiceClient) Create(ctx context.Context, in *CreateReportCheckDayRequest, opts ...grpc.CallOption) (*CreateReportCheckDayResponse, error) {
	out := new(CreateReportCheckDayResponse)
	err := c.cc.Invoke(ctx, "/api.ReportCheckDayService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportCheckDayServiceClient) Get(ctx context.Context, in *GetReportCheckDayRequest, opts ...grpc.CallOption) (*GetReportCheckDayResponse, error) {
	out := new(GetReportCheckDayResponse)
	err := c.cc.Invoke(ctx, "/api.ReportCheckDayService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportCheckDayServiceClient) Update(ctx context.Context, in *UpdateReportCheckDayRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.ReportCheckDayService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportCheckDayServiceClient) Delete(ctx context.Context, in *DeleteReportCheckDayRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.ReportCheckDayService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportCheckDayServiceClient) List(ctx context.Context, in *ListReportCheckDayRequest, opts ...grpc.CallOption) (*ListReportCheckDayResponse, error) {
	out := new(ListReportCheckDayResponse)
	err := c.cc.Invoke(ctx, "/api.ReportCheckDayService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportCheckDayServiceClient) GetDetailList(ctx context.Context, in *GetDetailListReportCheckDayRequest, opts ...grpc.CallOption) (*GetDetailListReportCheckDayResponse, error) {
	out := new(GetDetailListReportCheckDayResponse)
	err := c.cc.Invoke(ctx, "/api.ReportCheckDayService/GetDetailList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportCheckDayServiceServer is the server API for ReportCheckDayService service.
type ReportCheckDayServiceServer interface {
	// Create creates report-day.
	Create(context.Context, *CreateReportCheckDayRequest) (*CreateReportCheckDayResponse, error)
	// Get returns the report-day matching the given id.
	Get(context.Context, *GetReportCheckDayRequest) (*GetReportCheckDayResponse, error)
	// Update updates the given report-day.
	Update(context.Context, *UpdateReportCheckDayRequest) (*empty.Empty, error)
	// Delete deletes the report-day matching the given id.
	Delete(context.Context, *DeleteReportCheckDayRequest) (*empty.Empty, error)
	// List lists the available report-Day.
	List(context.Context, *ListReportCheckDayRequest) (*ListReportCheckDayResponse, error)
	// GetDetailList returns the detail-list of the report-check-day  matching the given id.
	GetDetailList(context.Context, *GetDetailListReportCheckDayRequest) (*GetDetailListReportCheckDayResponse, error)
}

// UnimplementedReportCheckDayServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReportCheckDayServiceServer struct {
}

func (*UnimplementedReportCheckDayServiceServer) Create(ctx context.Context, req *CreateReportCheckDayRequest) (*CreateReportCheckDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedReportCheckDayServiceServer) Get(ctx context.Context, req *GetReportCheckDayRequest) (*GetReportCheckDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedReportCheckDayServiceServer) Update(ctx context.Context, req *UpdateReportCheckDayRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedReportCheckDayServiceServer) Delete(ctx context.Context, req *DeleteReportCheckDayRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedReportCheckDayServiceServer) List(ctx context.Context, req *ListReportCheckDayRequest) (*ListReportCheckDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedReportCheckDayServiceServer) GetDetailList(ctx context.Context, req *GetDetailListReportCheckDayRequest) (*GetDetailListReportCheckDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetailList not implemented")
}

func RegisterReportCheckDayServiceServer(s *grpc.Server, srv ReportCheckDayServiceServer) {
	s.RegisterService(&_ReportCheckDayService_serviceDesc, srv)
}

func _ReportCheckDayService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReportCheckDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportCheckDayServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportCheckDayService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportCheckDayServiceServer).Create(ctx, req.(*CreateReportCheckDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportCheckDayService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportCheckDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportCheckDayServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportCheckDayService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportCheckDayServiceServer).Get(ctx, req.(*GetReportCheckDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportCheckDayService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReportCheckDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportCheckDayServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportCheckDayService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportCheckDayServiceServer).Update(ctx, req.(*UpdateReportCheckDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportCheckDayService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReportCheckDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportCheckDayServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportCheckDayService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportCheckDayServiceServer).Delete(ctx, req.(*DeleteReportCheckDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportCheckDayService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReportCheckDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportCheckDayServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportCheckDayService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportCheckDayServiceServer).List(ctx, req.(*ListReportCheckDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportCheckDayService_GetDetailList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDetailListReportCheckDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportCheckDayServiceServer).GetDetailList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportCheckDayService/GetDetailList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportCheckDayServiceServer).GetDetailList(ctx, req.(*GetDetailListReportCheckDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReportCheckDayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ReportCheckDayService",
	HandlerType: (*ReportCheckDayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ReportCheckDayService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ReportCheckDayService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ReportCheckDayService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ReportCheckDayService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ReportCheckDayService_List_Handler,
		},
		{
			MethodName: "GetDetailList",
			Handler:    _ReportCheckDayService_GetDetailList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/reportCheckDay.proto",
}
