// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/device.proto

package api

import (
	context "context"
	fmt "fmt"
	common "github.com/brocaar/chirpstack-api/go/v3/common"
	_ "github.com/brocaar/chirpstack-api/go/v3/gw"
<<<<<<< HEAD
	ns "github.com/brocaar/chirpstack-api/ns"
=======
	ns "github.com/brocaar/chirpstack-api/go/v3/ns"
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Device struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Name of the device (if left blank, it will be set to the DevEUI).
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the application to which the device must be added.
	// It is possible to move a device to a different application on update,
	// given that both the old and the new application share the same
	// service-profile.
	ApplicationId int64 `protobuf:"varint,3,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// DeviceProfileID attached to the device.
	DeviceProfileId string `protobuf:"bytes,5,opt,name=device_profile_id,json=deviceProfileID,proto3" json:"device_profile_id,omitempty"`
	OrganizationId  int64  `protobuf:"varint,6,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId          int64  `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scene           int32  `protobuf:"varint,8,opt,name=scene,proto3" json:"scene,omitempty"`
	Parent          int64  `protobuf:"varint,9,opt,name=parent,proto3" json:"parent,omitempty"`
	Status          int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Author          string `protobuf:"bytes,11,opt,name=author,proto3" json:"author,omitempty"`
	Remark          string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	Id              int64  `protobuf:"varint,13,opt,name=id,proto3" json:"id,omitempty"`
	// Variables (user defined).
	// These variables can be used together with integrations to store tokens /
	// secrets that must be configured per device. These variables are not
	// exposed in the event payloads.
	Variables map[string]string `protobuf:"bytes,14,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Tags (user defined).
	// These tags are exposed in the event payloads or to integration. Tags are
	// intended for aggregation and filtering.
	Tags map[string]string `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Skip frame-counter checks (this is insecure, but could be helpful for debugging).
	SkipFCntCheck bool `protobuf:"varint,16,opt,name=skip_f_cnt_check,json=skipFCntCheck,proto3" json:"skip_f_cnt_check,omitempty"`
	// Reference altitude.
	// When using geolocation, this altitude will be used as a reference
	// (when supported by the geolocation-server) to increase geolocation
	// accuracy.
	ReferenceAltitude float64 `protobuf:"fixed64,17,opt,name=reference_altitude,json=referenceAltitude,proto3" json:"reference_altitude,omitempty"`
	// Device is disabled.
	IsDisabled           bool     `protobuf:"varint,18,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{0}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *Device) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Device) GetDeviceProfileId() string {
	if m != nil {
		return m.DeviceProfileId
	}
	return ""
}

func (m *Device) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *Device) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Device) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

func (m *Device) GetParent() int64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *Device) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Device) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Device) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Device) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Device) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *Device) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Device) GetSkipFCntCheck() bool {
	if m != nil {
		return m.SkipFCntCheck
	}
	return false
}

func (m *Device) GetReferenceAltitude() float64 {
	if m != nil {
		return m.ReferenceAltitude
	}
	return 0
}

func (m *Device) GetIsDisabled() bool {
	if m != nil {
		return m.IsDisabled
	}
	return false
}

type DeviceListItem struct {
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Name of the device.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Application ID.
	ApplicationId int64 `protobuf:"varint,4,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Description of the device.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Device-profile ID attached to the device.
	DeviceProfileId string `protobuf:"bytes,6,opt,name=device_profile_id,json=deviceProfileID,proto3" json:"device_profile_id,omitempty"`
	// Device-profile name.
	DeviceProfileName string `protobuf:"bytes,7,opt,name=device_profile_name,json=deviceProfileName,proto3" json:"device_profile_name,omitempty"`
	// The device battery status (deprecated, use device_status_battery_level).
	// 0:      The end-device is connected to an external power source
	// 1..254: The battery level, 1 being at minimum and 254 being at maximum
	// 255:    The end-device was not able to measure the battery level
	// 256:    The device-status is not available.
	DeviceStatusBattery uint32 `protobuf:"varint,8,opt,name=device_status_battery,json=deviceStatusBattery,proto3" json:"device_status_battery,omitempty"`
	// The device margin status
	// -32..32: The demodulation SNR ration in dB
	// 256:     The device-status is not available.
	DeviceStatusMargin int32 `protobuf:"varint,9,opt,name=device_status_margin,json=deviceStatusMargin,proto3" json:"device_status_margin,omitempty"`
	// Device is connected to an external power source.
	DeviceStatusExternalPowerSource bool `protobuf:"varint,10,opt,name=device_status_external_power_source,json=deviceStatusExternalPowerSource,proto3" json:"device_status_external_power_source,omitempty"`
	// Device battery status is unavailable.
	DeviceStatusBatteryLevelUnavailable bool `protobuf:"varint,11,opt,name=device_status_battery_level_unavailable,json=deviceStatusBatteryLevelUnavailable,proto3" json:"device_status_battery_level_unavailable,omitempty"`
	// Device battery level as a percentage.
	DeviceStatusBatteryLevel float32 `protobuf:"fixed32,12,opt,name=device_status_battery_level,json=deviceStatusBatteryLevel,proto3" json:"device_status_battery_level,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	LastSeenAt           *timestamp.Timestamp `protobuf:"bytes,13,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	OrganizationId       int64                `protobuf:"varint,14,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId               int64                `protobuf:"varint,15,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scene                int32                `protobuf:"varint,16,opt,name=scene,proto3" json:"scene,omitempty"`
	Parent               int64                `protobuf:"varint,17,opt,name=parent,proto3" json:"parent,omitempty"`
	Status               int32                `protobuf:"varint,18,opt,name=status,proto3" json:"status,omitempty"`
	Author               string               `protobuf:"bytes,19,opt,name=author,proto3" json:"author,omitempty"`
	Remark               string               `protobuf:"bytes,20,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DeviceListItem) Reset()         { *m = DeviceListItem{} }
func (m *DeviceListItem) String() string { return proto.CompactTextString(m) }
func (*DeviceListItem) ProtoMessage()    {}
func (*DeviceListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{1}
}

func (m *DeviceListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceListItem.Unmarshal(m, b)
}
func (m *DeviceListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceListItem.Marshal(b, m, deterministic)
}
func (m *DeviceListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceListItem.Merge(m, src)
}
func (m *DeviceListItem) XXX_Size() int {
	return xxx_messageInfo_DeviceListItem.Size(m)
}
func (m *DeviceListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceListItem.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceListItem proto.InternalMessageInfo

func (m *DeviceListItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeviceListItem) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DeviceListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceListItem) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *DeviceListItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DeviceListItem) GetDeviceProfileId() string {
	if m != nil {
		return m.DeviceProfileId
	}
	return ""
}

func (m *DeviceListItem) GetDeviceProfileName() string {
	if m != nil {
		return m.DeviceProfileName
	}
	return ""
}

func (m *DeviceListItem) GetDeviceStatusBattery() uint32 {
	if m != nil {
		return m.DeviceStatusBattery
	}
	return 0
}

func (m *DeviceListItem) GetDeviceStatusMargin() int32 {
	if m != nil {
		return m.DeviceStatusMargin
	}
	return 0
}

func (m *DeviceListItem) GetDeviceStatusExternalPowerSource() bool {
	if m != nil {
		return m.DeviceStatusExternalPowerSource
	}
	return false
}

func (m *DeviceListItem) GetDeviceStatusBatteryLevelUnavailable() bool {
	if m != nil {
		return m.DeviceStatusBatteryLevelUnavailable
	}
	return false
}

func (m *DeviceListItem) GetDeviceStatusBatteryLevel() float32 {
	if m != nil {
		return m.DeviceStatusBatteryLevel
	}
	return 0
}

func (m *DeviceListItem) GetLastSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

func (m *DeviceListItem) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *DeviceListItem) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DeviceListItem) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

func (m *DeviceListItem) GetParent() int64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *DeviceListItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DeviceListItem) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *DeviceListItem) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type DeviceKeys struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Network root key (HEX encoded).
	// Note: For LoRaWAN 1.0.x, use this field for the LoRaWAN 1.0.x 'AppKey`!
	NwkKey string `protobuf:"bytes,2,opt,name=nwk_key,json=nwkKey,proto3" json:"nwk_key,omitempty"`
	// Application root key (HEX encoded).
	// Note: This field only needs to be set for LoRaWAN 1.1.x devices!
	AppKey string `protobuf:"bytes,3,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	// Gen application key (HEX encoded).
	// This is an optional key that only must be set for LORaWAN 1.0.x devices
	// that implement the remote multicast setup specification.
	GenAppKey            string   `protobuf:"bytes,4,opt,name=gen_app_key,json=genAppKey,proto3" json:"gen_app_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceKeys) Reset()         { *m = DeviceKeys{} }
func (m *DeviceKeys) String() string { return proto.CompactTextString(m) }
func (*DeviceKeys) ProtoMessage()    {}
func (*DeviceKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{2}
}

func (m *DeviceKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceKeys.Unmarshal(m, b)
}
func (m *DeviceKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceKeys.Marshal(b, m, deterministic)
}
func (m *DeviceKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceKeys.Merge(m, src)
}
func (m *DeviceKeys) XXX_Size() int {
	return xxx_messageInfo_DeviceKeys.Size(m)
}
func (m *DeviceKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceKeys.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceKeys proto.InternalMessageInfo

func (m *DeviceKeys) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DeviceKeys) GetNwkKey() string {
	if m != nil {
		return m.NwkKey
	}
	return ""
}

func (m *DeviceKeys) GetAppKey() string {
	if m != nil {
		return m.AppKey
	}
	return ""
}

func (m *DeviceKeys) GetGenAppKey() string {
	if m != nil {
		return m.GenAppKey
	}
	return ""
}

type CreateDeviceRequest struct {
	// Device object to create.
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDeviceRequest) Reset()         { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()    {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{3}
}

func (m *CreateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceRequest.Unmarshal(m, b)
}
func (m *CreateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceRequest.Merge(m, src)
}
func (m *CreateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceRequest.Size(m)
}
func (m *CreateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceRequest proto.InternalMessageInfo

func (m *CreateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type GetDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRequest) Reset()         { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()    {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{4}
}

func (m *GetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRequest.Unmarshal(m, b)
}
func (m *GetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRequest.Merge(m, src)
}
func (m *GetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRequest.Size(m)
}
func (m *GetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRequest proto.InternalMessageInfo

func (m *GetDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceResponse struct {
	// Device object.
	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// Last seen timestamp.
	LastSeenAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	// The device battery status
	// 0:      The end-device is connected to an external power source
	// 1..254: The battery level, 1 being at minimum and 254 being at maximum
	// 255:    The end-device was not able to measure the battery level
	// 256:    The device-status is not available.
	DeviceStatusBattery uint32 `protobuf:"varint,6,opt,name=device_status_battery,json=deviceStatusBattery,proto3" json:"device_status_battery,omitempty"`
	// The device margin status
	// -32..32: The demodulation SNR ration in dB
	// 256:     The device-status is not available.
	DeviceStatusMargin int32 `protobuf:"varint,20,opt,name=device_status_margin,json=deviceStatusMargin,proto3" json:"device_status_margin,omitempty"`
	// Device location.
	// This will set when the network-server was able to resolve the location
	// using the geolocation-server.
	Location             *common.Location `protobuf:"bytes,21,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetDeviceResponse) Reset()         { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()    {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{5}
}

func (m *GetDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResponse.Unmarshal(m, b)
}
func (m *GetDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResponse.Merge(m, src)
}
func (m *GetDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResponse.Size(m)
}
func (m *GetDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResponse proto.InternalMessageInfo

func (m *GetDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *GetDeviceResponse) GetLastSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

func (m *GetDeviceResponse) GetDeviceStatusBattery() uint32 {
	if m != nil {
		return m.DeviceStatusBattery
	}
	return 0
}

func (m *GetDeviceResponse) GetDeviceStatusMargin() int32 {
	if m != nil {
		return m.DeviceStatusMargin
	}
	return 0
}

func (m *GetDeviceResponse) GetLocation() *common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type ListDeviceRequest struct {
	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset         int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	OrganizationId int64 `protobuf:"varint,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Scene          int32 `protobuf:"varint,4,opt,name=scene,proto3" json:"scene,omitempty"`
	Parent         int64 `protobuf:"varint,5,opt,name=parent,proto3" json:"parent,omitempty"`
	Status         int32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	// Application ID to filter on.
	ApplicationId int64 `protobuf:"varint,7,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Search on name or DevEUI.
	Search string `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
	// Multicast-group ID to filter on (string formatted UUID).
	MulticastGroupId string `protobuf:"bytes,9,opt,name=multicast_group_id,json=multicastGroupID,proto3" json:"multicast_group_id,omitempty"`
	// Service-profile ID to filter on (string formatted UUID).
<<<<<<< HEAD
	ServiceProfileId     string            `protobuf:"bytes,10,opt,name=service_profile_id,json=serviceProfileID,proto3" json:"service_profile_id,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
=======
	ServiceProfileId string `protobuf:"bytes,6,opt,name=service_profile_id,json=serviceProfileID,proto3" json:"service_profile_id,omitempty"`
	// Tags to filter on.
	Tags                 map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceRequest) Reset()         { *m = ListDeviceRequest{} }
func (m *ListDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeviceRequest) ProtoMessage()    {}
func (*ListDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{6}
}

func (m *ListDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceRequest.Unmarshal(m, b)
<<<<<<< HEAD
}
func (m *ListDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ListDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceRequest.Merge(m, src)
}
func (m *ListDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceRequest.Size(m)
}
func (m *ListDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceRequest proto.InternalMessageInfo

func (m *ListDeviceRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListDeviceRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListDeviceRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ListDeviceRequest) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
=======
}
func (m *ListDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ListDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceRequest.Merge(m, src)
}
func (m *ListDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceRequest.Size(m)
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *ListDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceRequest proto.InternalMessageInfo

<<<<<<< HEAD
func (m *ListDeviceRequest) GetParent() int64 {
	if m != nil {
		return m.Parent
=======
func (m *ListDeviceRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	}
	return 0
}

<<<<<<< HEAD
func (m *ListDeviceRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
=======
func (m *ListDeviceRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	}
	return 0
}

func (m *ListDeviceRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ListDeviceRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ListDeviceRequest) GetMulticastGroupId() string {
	if m != nil {
		return m.MulticastGroupId
	}
	return ""
}

func (m *ListDeviceRequest) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *ListDeviceRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ListDeviceResponse struct {
	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Devices within this result-set.
	Result               []*DeviceListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceResponse) Reset()         { *m = ListDeviceResponse{} }
func (m *ListDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeviceResponse) ProtoMessage()    {}
func (*ListDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{7}
}

func (m *ListDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceResponse.Unmarshal(m, b)
}
func (m *ListDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceResponse.Marshal(b, m, deterministic)
}
func (m *ListDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceResponse.Merge(m, src)
}
func (m *ListDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeviceResponse.Size(m)
}
func (m *ListDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceResponse proto.InternalMessageInfo

func (m *ListDeviceResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListDeviceResponse) GetResult() []*DeviceListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type DeleteDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceRequest) Reset()         { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()    {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{8}
}

func (m *DeleteDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceRequest.Merge(m, src)
}
func (m *DeleteDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceRequest.Size(m)
}
func (m *DeleteDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceRequest proto.InternalMessageInfo

func (m *DeleteDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type UpdateDeviceRequest struct {
	// Device object to update.
	Device               *Device  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceRequest) Reset()         { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()    {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{9}
}

func (m *UpdateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRequest.Merge(m, src)
}
func (m *UpdateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRequest.Size(m)
}
func (m *UpdateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRequest proto.InternalMessageInfo

func (m *UpdateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type SetDeviceOrgRequest struct {
<<<<<<< HEAD
	//    int64 id        =1;
=======
	// int64 id        =1;
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	OrganizationId       int64    `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceOrgRequest) Reset()         { *m = SetDeviceOrgRequest{} }
func (m *SetDeviceOrgRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceOrgRequest) ProtoMessage()    {}
func (*SetDeviceOrgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{10}
}

func (m *SetDeviceOrgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceOrgRequest.Unmarshal(m, b)
}
func (m *SetDeviceOrgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceOrgRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceOrgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceOrgRequest.Merge(m, src)
}
func (m *SetDeviceOrgRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceOrgRequest.Size(m)
}
func (m *SetDeviceOrgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceOrgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceOrgRequest proto.InternalMessageInfo

func (m *SetDeviceOrgRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *SetDeviceOrgRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

type SetDeviceUserRequest struct {
<<<<<<< HEAD
	//    int64 id        =1;
=======
	// int64 id        =1;
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceUserRequest) Reset()         { *m = SetDeviceUserRequest{} }
func (m *SetDeviceUserRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceUserRequest) ProtoMessage()    {}
func (*SetDeviceUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{11}
}

func (m *SetDeviceUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceUserRequest.Unmarshal(m, b)
}
func (m *SetDeviceUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceUserRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceUserRequest.Merge(m, src)
}
func (m *SetDeviceUserRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceUserRequest.Size(m)
}
func (m *SetDeviceUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceUserRequest proto.InternalMessageInfo

func (m *SetDeviceUserRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *SetDeviceUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type SetDeviceSceneRequest struct {
<<<<<<< HEAD
	//    int64 id        =1;
=======
	// int64 id        =1;
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	Scene                int32    `protobuf:"varint,2,opt,name=scene,proto3" json:"scene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceSceneRequest) Reset()         { *m = SetDeviceSceneRequest{} }
func (m *SetDeviceSceneRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceSceneRequest) ProtoMessage()    {}
func (*SetDeviceSceneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{12}
}

func (m *SetDeviceSceneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceSceneRequest.Unmarshal(m, b)
}
func (m *SetDeviceSceneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceSceneRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceSceneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceSceneRequest.Merge(m, src)
}
func (m *SetDeviceSceneRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceSceneRequest.Size(m)
}
func (m *SetDeviceSceneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceSceneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceSceneRequest proto.InternalMessageInfo

func (m *SetDeviceSceneRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *SetDeviceSceneRequest) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

type SetDeviceParentRequest struct {
<<<<<<< HEAD
	//    int64 id        =1;
=======
	// int64 id        =1;
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	Parent               int64    `protobuf:"varint,2,opt,name=parent,json=parentDeviceId,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceParentRequest) Reset()         { *m = SetDeviceParentRequest{} }
func (m *SetDeviceParentRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceParentRequest) ProtoMessage()    {}
func (*SetDeviceParentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{13}
}

func (m *SetDeviceParentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceParentRequest.Unmarshal(m, b)
}
func (m *SetDeviceParentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceParentRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceParentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceParentRequest.Merge(m, src)
}
func (m *SetDeviceParentRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceParentRequest.Size(m)
}
func (m *SetDeviceParentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceParentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceParentRequest proto.InternalMessageInfo

func (m *SetDeviceParentRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *SetDeviceParentRequest) GetParent() int64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

type CreateDeviceKeysRequest struct {
	// Device-keys object to create.
	DeviceKeys           *DeviceKeys `protobuf:"bytes,1,opt,name=device_keys,json=deviceKeys,proto3" json:"device_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateDeviceKeysRequest) Reset()         { *m = CreateDeviceKeysRequest{} }
func (m *CreateDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeviceKeysRequest) ProtoMessage()    {}
func (*CreateDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{14}
}

func (m *CreateDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeviceKeysRequest.Unmarshal(m, b)
}
func (m *CreateDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeviceKeysRequest.Merge(m, src)
<<<<<<< HEAD
}
func (m *CreateDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceKeysRequest.Size(m)
}
=======
}
func (m *CreateDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeviceKeysRequest.Size(m)
}
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *CreateDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeviceKeysRequest proto.InternalMessageInfo

func (m *CreateDeviceKeysRequest) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type GetDeviceKeysRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceKeysRequest) Reset()         { *m = GetDeviceKeysRequest{} }
func (m *GetDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceKeysRequest) ProtoMessage()    {}
func (*GetDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{15}
}

func (m *GetDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceKeysRequest.Unmarshal(m, b)
<<<<<<< HEAD
}
func (m *GetDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceKeysRequest.Merge(m, src)
}
func (m *GetDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceKeysRequest.Size(m)
}
func (m *GetDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceKeysRequest.DiscardUnknown(m)
}
=======
}
func (m *GetDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceKeysRequest.Merge(m, src)
}
func (m *GetDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceKeysRequest.Size(m)
}
func (m *GetDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceKeysRequest.DiscardUnknown(m)
}
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280

var xxx_messageInfo_GetDeviceKeysRequest proto.InternalMessageInfo

func (m *GetDeviceKeysRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceKeysResponse struct {
	// Device-key object.
	DeviceKeys           *DeviceKeys `protobuf:"bytes,1,opt,name=device_keys,json=deviceKeys,proto3" json:"device_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetDeviceKeysResponse) Reset()         { *m = GetDeviceKeysResponse{} }
func (m *GetDeviceKeysResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceKeysResponse) ProtoMessage()    {}
func (*GetDeviceKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{16}
}

func (m *GetDeviceKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceKeysResponse.Unmarshal(m, b)
}
func (m *GetDeviceKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceKeysResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceKeysResponse.Merge(m, src)
}
func (m *GetDeviceKeysResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceKeysResponse.Size(m)
<<<<<<< HEAD
}
func (m *GetDeviceKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceKeysResponse.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetDeviceKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceKeysResponse proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_GetDeviceKeysResponse proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetDeviceKeysResponse) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type UpdateDeviceKeysRequest struct {
	// Device-keys object to update.
	DeviceKeys           *DeviceKeys `protobuf:"bytes,1,opt,name=device_keys,json=deviceKeys,proto3" json:"device_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateDeviceKeysRequest) Reset()         { *m = UpdateDeviceKeysRequest{} }
func (m *UpdateDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceKeysRequest) ProtoMessage()    {}
func (*UpdateDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{17}
}

func (m *UpdateDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceKeysRequest.Merge(m, src)
}
func (m *UpdateDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceKeysRequest.Size(m)
<<<<<<< HEAD
}
func (m *UpdateDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceKeysRequest.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *UpdateDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceKeysRequest proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_UpdateDeviceKeysRequest proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *UpdateDeviceKeysRequest) GetDeviceKeys() *DeviceKeys {
	if m != nil {
		return m.DeviceKeys
	}
	return nil
}

type DeleteDeviceKeysRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceKeysRequest) Reset()         { *m = DeleteDeviceKeysRequest{} }
func (m *DeleteDeviceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceKeysRequest) ProtoMessage()    {}
func (*DeleteDeviceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{18}
}

func (m *DeleteDeviceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDeviceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceKeysRequest.Merge(m, src)
<<<<<<< HEAD
}
func (m *DeleteDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Size(m)
}
=======
}
func (m *DeleteDeviceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceKeysRequest.Size(m)
}
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *DeleteDeviceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceKeysRequest proto.InternalMessageInfo

func (m *DeleteDeviceKeysRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type DeviceActivation struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Device address (HEX encoded).
	DevAddr string `protobuf:"bytes,2,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	// Application session key (HEX encoded).
	AppSKey string `protobuf:"bytes,3,opt,name=app_s_key,json=appSKey,proto3" json:"app_s_key,omitempty"`
	// Network session encryption key (HEX encoded).
	NwkSEncKey string `protobuf:"bytes,4,opt,name=nwk_s_enc_key,json=nwkSEncKey,proto3" json:"nwk_s_enc_key,omitempty"`
	// Serving network session integrity key (HEX encoded).
	SNwkSIntKey string `protobuf:"bytes,8,opt,name=s_nwk_s_int_key,json=sNwkSIntKey,proto3" json:"s_nwk_s_int_key,omitempty"`
	// Forwarding network session integrity key (HEX encoded).
	FNwkSIntKey string `protobuf:"bytes,9,opt,name=f_nwk_s_int_key,json=fNwkSIntKey,proto3" json:"f_nwk_s_int_key,omitempty"`
	// Uplink frame-counter.
	FCntUp uint32 `protobuf:"varint,5,opt,name=f_cnt_up,json=fCntUp,proto3" json:"f_cnt_up,omitempty"`
	// Downlink network frame-counter.
	NFCntDown uint32 `protobuf:"varint,6,opt,name=n_f_cnt_down,json=nFCntDown,proto3" json:"n_f_cnt_down,omitempty"`
	// Downlink application frame-counter.
	AFCntDown            uint32   `protobuf:"varint,10,opt,name=a_f_cnt_down,json=aFCntDown,proto3" json:"a_f_cnt_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceActivation) Reset()         { *m = DeviceActivation{} }
func (m *DeviceActivation) String() string { return proto.CompactTextString(m) }
func (*DeviceActivation) ProtoMessage()    {}
func (*DeviceActivation) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{19}
}

func (m *DeviceActivation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceActivation.Unmarshal(m, b)
}
func (m *DeviceActivation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceActivation.Marshal(b, m, deterministic)
}
func (m *DeviceActivation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceActivation.Merge(m, src)
}
func (m *DeviceActivation) XXX_Size() int {
	return xxx_messageInfo_DeviceActivation.Size(m)
<<<<<<< HEAD
=======
}
func (m *DeviceActivation) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceActivation.DiscardUnknown(m)
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *DeviceActivation) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceActivation.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceActivation proto.InternalMessageInfo

<<<<<<< HEAD
=======
var xxx_messageInfo_DeviceActivation proto.InternalMessageInfo

>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *DeviceActivation) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *DeviceActivation) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

func (m *DeviceActivation) GetAppSKey() string {
	if m != nil {
		return m.AppSKey
	}
	return ""
}

func (m *DeviceActivation) GetNwkSEncKey() string {
	if m != nil {
		return m.NwkSEncKey
	}
	return ""
}

func (m *DeviceActivation) GetSNwkSIntKey() string {
	if m != nil {
		return m.SNwkSIntKey
	}
	return ""
}

func (m *DeviceActivation) GetFNwkSIntKey() string {
	if m != nil {
		return m.FNwkSIntKey
	}
	return ""
}

func (m *DeviceActivation) GetFCntUp() uint32 {
	if m != nil {
		return m.FCntUp
	}
	return 0
}

func (m *DeviceActivation) GetNFCntDown() uint32 {
	if m != nil {
		return m.NFCntDown
	}
	return 0
}

func (m *DeviceActivation) GetAFCntDown() uint32 {
	if m != nil {
		return m.AFCntDown
	}
	return 0
}

type ActivateDeviceRequest struct {
	DeviceActivation     *DeviceActivation `protobuf:"bytes,1,opt,name=device_activation,json=deviceActivation,proto3" json:"device_activation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActivateDeviceRequest) Reset()         { *m = ActivateDeviceRequest{} }
func (m *ActivateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateDeviceRequest) ProtoMessage()    {}
func (*ActivateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{20}
}

func (m *ActivateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateDeviceRequest.Unmarshal(m, b)
}
func (m *ActivateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ActivateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateDeviceRequest.Merge(m, src)
}
func (m *ActivateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateDeviceRequest.Size(m)
}
func (m *ActivateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateDeviceRequest proto.InternalMessageInfo

func (m *ActivateDeviceRequest) GetDeviceActivation() *DeviceActivation {
	if m != nil {
		return m.DeviceActivation
	}
	return nil
}

type DeactivateDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateDeviceRequest) Reset()         { *m = DeactivateDeviceRequest{} }
func (m *DeactivateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateDeviceRequest) ProtoMessage()    {}
func (*DeactivateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{21}
}

func (m *DeactivateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateDeviceRequest.Unmarshal(m, b)
}
func (m *DeactivateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateDeviceRequest.Marshal(b, m, deterministic)
}
func (m *DeactivateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateDeviceRequest.Merge(m, src)
}
func (m *DeactivateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeactivateDeviceRequest.Size(m)
}
func (m *DeactivateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateDeviceRequest proto.InternalMessageInfo

func (m *DeactivateDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceActivationRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceActivationRequest) Reset()         { *m = GetDeviceActivationRequest{} }
func (m *GetDeviceActivationRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceActivationRequest) ProtoMessage()    {}
func (*GetDeviceActivationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{22}
}

func (m *GetDeviceActivationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceActivationRequest.Unmarshal(m, b)
}
func (m *GetDeviceActivationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceActivationRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceActivationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceActivationRequest.Merge(m, src)
<<<<<<< HEAD
=======
}
func (m *GetDeviceActivationRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceActivationRequest.Size(m)
}
func (m *GetDeviceActivationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceActivationRequest.DiscardUnknown(m)
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetDeviceActivationRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceActivationRequest.Size(m)
}
func (m *GetDeviceActivationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceActivationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceActivationRequest proto.InternalMessageInfo

<<<<<<< HEAD
=======
var xxx_messageInfo_GetDeviceActivationRequest proto.InternalMessageInfo

>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetDeviceActivationRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceActivationResponse struct {
	// Device-activation object.
	DeviceActivation     *DeviceActivation `protobuf:"bytes,1,opt,name=device_activation,json=deviceActivation,proto3" json:"device_activation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetDeviceActivationResponse) Reset()         { *m = GetDeviceActivationResponse{} }
func (m *GetDeviceActivationResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceActivationResponse) ProtoMessage()    {}
func (*GetDeviceActivationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{23}
}

func (m *GetDeviceActivationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceActivationResponse.Unmarshal(m, b)
}
func (m *GetDeviceActivationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceActivationResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceActivationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceActivationResponse.Merge(m, src)
<<<<<<< HEAD
=======
}
func (m *GetDeviceActivationResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceActivationResponse.Size(m)
}
func (m *GetDeviceActivationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceActivationResponse.DiscardUnknown(m)
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetDeviceActivationResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceActivationResponse.Size(m)
}
func (m *GetDeviceActivationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceActivationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceActivationResponse proto.InternalMessageInfo

<<<<<<< HEAD
=======
var xxx_messageInfo_GetDeviceActivationResponse proto.InternalMessageInfo

>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetDeviceActivationResponse) GetDeviceActivation() *DeviceActivation {
	if m != nil {
		return m.DeviceActivation
	}
	return nil
}

type GetRandomDevAddrRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandomDevAddrRequest) Reset()         { *m = GetRandomDevAddrRequest{} }
func (m *GetRandomDevAddrRequest) String() string { return proto.CompactTextString(m) }
func (*GetRandomDevAddrRequest) ProtoMessage()    {}
func (*GetRandomDevAddrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{24}
}

func (m *GetRandomDevAddrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomDevAddrRequest.Unmarshal(m, b)
}
func (m *GetRandomDevAddrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomDevAddrRequest.Marshal(b, m, deterministic)
}
func (m *GetRandomDevAddrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomDevAddrRequest.Merge(m, src)
<<<<<<< HEAD
}
func (m *GetRandomDevAddrRequest) XXX_Size() int {
	return xxx_messageInfo_GetRandomDevAddrRequest.Size(m)
}
func (m *GetRandomDevAddrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomDevAddrRequest.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetRandomDevAddrRequest) XXX_Size() int {
	return xxx_messageInfo_GetRandomDevAddrRequest.Size(m)
}
func (m *GetRandomDevAddrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomDevAddrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomDevAddrRequest proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_GetRandomDevAddrRequest proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetRandomDevAddrRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetRandomDevAddrResponse struct {
	// Device address (HEX encoded).
	DevAddr              string   `protobuf:"bytes,1,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRandomDevAddrResponse) Reset()         { *m = GetRandomDevAddrResponse{} }
func (m *GetRandomDevAddrResponse) String() string { return proto.CompactTextString(m) }
func (*GetRandomDevAddrResponse) ProtoMessage()    {}
func (*GetRandomDevAddrResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{25}
}

func (m *GetRandomDevAddrResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRandomDevAddrResponse.Unmarshal(m, b)
}
func (m *GetRandomDevAddrResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRandomDevAddrResponse.Marshal(b, m, deterministic)
}
func (m *GetRandomDevAddrResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRandomDevAddrResponse.Merge(m, src)
<<<<<<< HEAD
}
func (m *GetRandomDevAddrResponse) XXX_Size() int {
	return xxx_messageInfo_GetRandomDevAddrResponse.Size(m)
}
func (m *GetRandomDevAddrResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomDevAddrResponse.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetRandomDevAddrResponse) XXX_Size() int {
	return xxx_messageInfo_GetRandomDevAddrResponse.Size(m)
}
func (m *GetRandomDevAddrResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRandomDevAddrResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRandomDevAddrResponse proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_GetRandomDevAddrResponse proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetRandomDevAddrResponse) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

type DeviceStats struct {
	// Timestamp of the (aggregated) measurement.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Packets received from the device.
	RxPackets uint32 `protobuf:"varint,2,opt,name=rx_packets,json=rxPackets,proto3" json:"rx_packets,omitempty"`
	// Average RSSI (as reported by the gateway(s)).
	GwRssi float32 `protobuf:"fixed32,3,opt,name=gw_rssi,json=gwRssi,proto3" json:"gw_rssi,omitempty"`
	// Average SNR (as reported by the gateway(s)).
	GwSnr float32 `protobuf:"fixed32,4,opt,name=gw_snr,json=gwSnr,proto3" json:"gw_snr,omitempty"`
	// Packets received by frequency.
	RxPacketsPerFrequency map[uint32]uint32 `protobuf:"bytes,5,rep,name=rx_packets_per_frequency,json=rxPacketsPerFrequency,proto3" json:"rx_packets_per_frequency,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Packets received by DR.
	RxPacketsPerDr map[uint32]uint32 `protobuf:"bytes,6,rep,name=rx_packets_per_dr,json=rxPacketsPerDr,proto3" json:"rx_packets_per_dr,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Error count.
	Errors               map[string]uint32 `protobuf:"bytes,7,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeviceStats) Reset()         { *m = DeviceStats{} }
func (m *DeviceStats) String() string { return proto.CompactTextString(m) }
func (*DeviceStats) ProtoMessage()    {}
func (*DeviceStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{26}
}

func (m *DeviceStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceStats.Unmarshal(m, b)
}
func (m *DeviceStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceStats.Marshal(b, m, deterministic)
}
func (m *DeviceStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceStats.Merge(m, src)
}
func (m *DeviceStats) XXX_Size() int {
	return xxx_messageInfo_DeviceStats.Size(m)
}
func (m *DeviceStats) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceStats.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceStats proto.InternalMessageInfo

func (m *DeviceStats) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *DeviceStats) GetRxPackets() uint32 {
	if m != nil {
		return m.RxPackets
	}
	return 0
}

func (m *DeviceStats) GetGwRssi() float32 {
	if m != nil {
		return m.GwRssi
	}
	return 0
}

func (m *DeviceStats) GetGwSnr() float32 {
	if m != nil {
		return m.GwSnr
	}
	return 0
}

func (m *DeviceStats) GetRxPacketsPerFrequency() map[uint32]uint32 {
	if m != nil {
		return m.RxPacketsPerFrequency
	}
	return nil
}

func (m *DeviceStats) GetRxPacketsPerDr() map[uint32]uint32 {
	if m != nil {
		return m.RxPacketsPerDr
	}
	return nil
}

func (m *DeviceStats) GetErrors() map[string]uint32 {
	if m != nil {
		return m.Errors
	}
	return nil
}

type GetDeviceStatsRequest struct {
	// DevEUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Aggregation interval.  One of "second", "minute", "hour", "day", "week",
	// "month", "quarter", "year".  Case insensitive.
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Timestamp to start from.
	StartTimestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	// Timestamp until to get from.
	EndTimestamp         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetDeviceStatsRequest) Reset()         { *m = GetDeviceStatsRequest{} }
func (m *GetDeviceStatsRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceStatsRequest) ProtoMessage()    {}
func (*GetDeviceStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{27}
}

func (m *GetDeviceStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceStatsRequest.Unmarshal(m, b)
}
func (m *GetDeviceStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceStatsRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceStatsRequest.Merge(m, src)
}
func (m *GetDeviceStatsRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceStatsRequest.Size(m)
<<<<<<< HEAD
}
func (m *GetDeviceStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceStatsRequest.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetDeviceStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceStatsRequest proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_GetDeviceStatsRequest proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetDeviceStatsRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *GetDeviceStatsRequest) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

func (m *GetDeviceStatsRequest) GetStartTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.StartTimestamp
	}
	return nil
}

func (m *GetDeviceStatsRequest) GetEndTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.EndTimestamp
	}
	return nil
}

type GetDeviceStatsResponse struct {
	Result               []*DeviceStats `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetDeviceStatsResponse) Reset()         { *m = GetDeviceStatsResponse{} }
func (m *GetDeviceStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceStatsResponse) ProtoMessage()    {}
func (*GetDeviceStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{28}
}

func (m *GetDeviceStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceStatsResponse.Unmarshal(m, b)
}
func (m *GetDeviceStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceStatsResponse.Merge(m, src)
}
func (m *GetDeviceStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceStatsResponse.Size(m)
<<<<<<< HEAD
}
func (m *GetDeviceStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceStatsResponse.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetDeviceStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceStatsResponse proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_GetDeviceStatsResponse proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetDeviceStatsResponse) GetResult() []*DeviceStats {
	if m != nil {
		return m.Result
	}
	return nil
}

type StreamDeviceFrameLogsRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceFrameLogsRequest) Reset()         { *m = StreamDeviceFrameLogsRequest{} }
func (m *StreamDeviceFrameLogsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceFrameLogsRequest) ProtoMessage()    {}
func (*StreamDeviceFrameLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{29}
}

func (m *StreamDeviceFrameLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Unmarshal(m, b)
}
func (m *StreamDeviceFrameLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Marshal(b, m, deterministic)
}
func (m *StreamDeviceFrameLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceFrameLogsRequest.Merge(m, src)
}
func (m *StreamDeviceFrameLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceFrameLogsRequest.Size(m)
<<<<<<< HEAD
=======
}
func (m *StreamDeviceFrameLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceFrameLogsRequest.DiscardUnknown(m)
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *StreamDeviceFrameLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceFrameLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceFrameLogsRequest proto.InternalMessageInfo

<<<<<<< HEAD
=======
var xxx_messageInfo_StreamDeviceFrameLogsRequest proto.InternalMessageInfo

>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *StreamDeviceFrameLogsRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type StreamDeviceFrameLogsResponse struct {
	// Types that are valid to be assigned to Frame:
<<<<<<< HEAD
=======
	//
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
	//	*StreamDeviceFrameLogsResponse_UplinkFrame
	//	*StreamDeviceFrameLogsResponse_DownlinkFrame
	Frame                isStreamDeviceFrameLogsResponse_Frame `protobuf_oneof:"frame"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *StreamDeviceFrameLogsResponse) Reset()         { *m = StreamDeviceFrameLogsResponse{} }
func (m *StreamDeviceFrameLogsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceFrameLogsResponse) ProtoMessage()    {}
func (*StreamDeviceFrameLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{30}
}

func (m *StreamDeviceFrameLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Unmarshal(m, b)
}
func (m *StreamDeviceFrameLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Marshal(b, m, deterministic)
}
func (m *StreamDeviceFrameLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceFrameLogsResponse.Merge(m, src)
}
func (m *StreamDeviceFrameLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceFrameLogsResponse.Size(m)
}
func (m *StreamDeviceFrameLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceFrameLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceFrameLogsResponse proto.InternalMessageInfo

type isStreamDeviceFrameLogsResponse_Frame interface {
	isStreamDeviceFrameLogsResponse_Frame()
}

type StreamDeviceFrameLogsResponse_UplinkFrame struct {
	UplinkFrame *UplinkFrameLog `protobuf:"bytes,1,opt,name=uplink_frame,json=uplinkFrame,proto3,oneof"`
}

type StreamDeviceFrameLogsResponse_DownlinkFrame struct {
	DownlinkFrame *DownlinkFrameLog `protobuf:"bytes,2,opt,name=downlink_frame,json=downlinkFrame,proto3,oneof"`
}

func (*StreamDeviceFrameLogsResponse_UplinkFrame) isStreamDeviceFrameLogsResponse_Frame() {}

func (*StreamDeviceFrameLogsResponse_DownlinkFrame) isStreamDeviceFrameLogsResponse_Frame() {}

func (m *StreamDeviceFrameLogsResponse) GetFrame() isStreamDeviceFrameLogsResponse_Frame {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *StreamDeviceFrameLogsResponse) GetUplinkFrame() *UplinkFrameLog {
	if x, ok := m.GetFrame().(*StreamDeviceFrameLogsResponse_UplinkFrame); ok {
		return x.UplinkFrame
	}
	return nil
}

func (m *StreamDeviceFrameLogsResponse) GetDownlinkFrame() *DownlinkFrameLog {
	if x, ok := m.GetFrame().(*StreamDeviceFrameLogsResponse_DownlinkFrame); ok {
		return x.DownlinkFrame
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamDeviceFrameLogsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamDeviceFrameLogsResponse_UplinkFrame)(nil),
		(*StreamDeviceFrameLogsResponse_DownlinkFrame)(nil),
	}
}

type StreamDeviceEventLogsRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceEventLogsRequest) Reset()         { *m = StreamDeviceEventLogsRequest{} }
func (m *StreamDeviceEventLogsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceEventLogsRequest) ProtoMessage()    {}
func (*StreamDeviceEventLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{31}
<<<<<<< HEAD
}

func (m *StreamDeviceEventLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Unmarshal(m, b)
}
func (m *StreamDeviceEventLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Marshal(b, m, deterministic)
}
func (m *StreamDeviceEventLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceEventLogsRequest.Merge(m, src)
}
func (m *StreamDeviceEventLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Size(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *StreamDeviceEventLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceEventLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceEventLogsRequest proto.InternalMessageInfo

<<<<<<< HEAD
=======
func (m *StreamDeviceEventLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Unmarshal(m, b)
}
func (m *StreamDeviceEventLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Marshal(b, m, deterministic)
}
func (m *StreamDeviceEventLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceEventLogsRequest.Merge(m, src)
}
func (m *StreamDeviceEventLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceEventLogsRequest.Size(m)
}
func (m *StreamDeviceEventLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceEventLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceEventLogsRequest proto.InternalMessageInfo

>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *StreamDeviceEventLogsRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type StreamDeviceEventLogsResponse struct {
	// The event type.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// The event payload in JSON encoding.
	PayloadJson string `protobuf:"bytes,2,opt,name=payload_json,json=payloadJSON,proto3" json:"payload_json,omitempty"`
	// Published at timestamp.
	PublishedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	// Stream ID.
	StreamId             string   `protobuf:"bytes,4,opt,name=stream_id,json=streamID,proto3" json:"stream_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeviceEventLogsResponse) Reset()         { *m = StreamDeviceEventLogsResponse{} }
func (m *StreamDeviceEventLogsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceEventLogsResponse) ProtoMessage()    {}
func (*StreamDeviceEventLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{32}
}

func (m *StreamDeviceEventLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Unmarshal(m, b)
}
func (m *StreamDeviceEventLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Marshal(b, m, deterministic)
}
func (m *StreamDeviceEventLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceEventLogsResponse.Merge(m, src)
<<<<<<< HEAD
}
func (m *StreamDeviceEventLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Size(m)
}
=======
}
func (m *StreamDeviceEventLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceEventLogsResponse.Size(m)
}
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *StreamDeviceEventLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceEventLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceEventLogsResponse proto.InternalMessageInfo

func (m *StreamDeviceEventLogsResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StreamDeviceEventLogsResponse) GetPayloadJson() string {
	if m != nil {
		return m.PayloadJson
	}
	return ""
}

func (m *StreamDeviceEventLogsResponse) GetPublishedAt() *timestamp.Timestamp {
	if m != nil {
		return m.PublishedAt
	}
	return nil
}

func (m *StreamDeviceEventLogsResponse) GetStreamId() string {
	if m != nil {
		return m.StreamId
	}
	return ""
}

type ClearDeviceNoncesRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearDeviceNoncesRequest) Reset()         { *m = ClearDeviceNoncesRequest{} }
func (m *ClearDeviceNoncesRequest) String() string { return proto.CompactTextString(m) }
func (*ClearDeviceNoncesRequest) ProtoMessage()    {}
func (*ClearDeviceNoncesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{33}
}

func (m *ClearDeviceNoncesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearDeviceNoncesRequest.Unmarshal(m, b)
}
func (m *ClearDeviceNoncesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearDeviceNoncesRequest.Marshal(b, m, deterministic)
}
func (m *ClearDeviceNoncesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearDeviceNoncesRequest.Merge(m, src)
<<<<<<< HEAD
=======
}
func (m *ClearDeviceNoncesRequest) XXX_Size() int {
	return xxx_messageInfo_ClearDeviceNoncesRequest.Size(m)
}
func (m *ClearDeviceNoncesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearDeviceNoncesRequest.DiscardUnknown(m)
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *ClearDeviceNoncesRequest) XXX_Size() int {
	return xxx_messageInfo_ClearDeviceNoncesRequest.Size(m)
}
func (m *ClearDeviceNoncesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearDeviceNoncesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearDeviceNoncesRequest proto.InternalMessageInfo

<<<<<<< HEAD
=======
var xxx_messageInfo_ClearDeviceNoncesRequest proto.InternalMessageInfo

>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *ClearDeviceNoncesRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceLastRxInfoRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceLastRxInfoRequest) Reset()         { *m = GetDeviceLastRxInfoRequest{} }
func (m *GetDeviceLastRxInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceLastRxInfoRequest) ProtoMessage()    {}
func (*GetDeviceLastRxInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{34}
}

func (m *GetDeviceLastRxInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceLastRxInfoRequest.Unmarshal(m, b)
}
func (m *GetDeviceLastRxInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceLastRxInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceLastRxInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceLastRxInfoRequest.Merge(m, src)
<<<<<<< HEAD
}
func (m *GetDeviceLastRxInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceLastRxInfoRequest.Size(m)
}
func (m *GetDeviceLastRxInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceLastRxInfoRequest.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetDeviceLastRxInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceLastRxInfoRequest.Size(m)
}
func (m *GetDeviceLastRxInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceLastRxInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceLastRxInfoRequest proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_GetDeviceLastRxInfoRequest proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetDeviceLastRxInfoRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetDeviceLastRxInfoResponse struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// receiving One of the best the last uplink message.
	LastRx *ns.DeviceGatewayRXInfo `protobuf:"bytes,2,opt,name=LastRx,proto3" json:"LastRx,omitempty"`
	// rx2 frequency by MAC.
	Rx2Frequency         uint32   `protobuf:"varint,3,opt,name=rx2Frequency,proto3" json:"rx2Frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceLastRxInfoResponse) Reset()         { *m = GetDeviceLastRxInfoResponse{} }
func (m *GetDeviceLastRxInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceLastRxInfoResponse) ProtoMessage()    {}
func (*GetDeviceLastRxInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{35}
}

func (m *GetDeviceLastRxInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceLastRxInfoResponse.Unmarshal(m, b)
}
func (m *GetDeviceLastRxInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceLastRxInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceLastRxInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceLastRxInfoResponse.Merge(m, src)
<<<<<<< HEAD
}
func (m *GetDeviceLastRxInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceLastRxInfoResponse.Size(m)
}
func (m *GetDeviceLastRxInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceLastRxInfoResponse.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *GetDeviceLastRxInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceLastRxInfoResponse.Size(m)
}
func (m *GetDeviceLastRxInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceLastRxInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceLastRxInfoResponse proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_GetDeviceLastRxInfoResponse proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *GetDeviceLastRxInfoResponse) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *GetDeviceLastRxInfoResponse) GetLastRx() *ns.DeviceGatewayRXInfo {
	if m != nil {
		return m.LastRx
	}
	return nil
}

func (m *GetDeviceLastRxInfoResponse) GetRx2Frequency() uint32 {
	if m != nil {
		return m.Rx2Frequency
	}
	return 0
}

type ListDeviceLastRxRequest struct {
	// Max number of devices to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Application ID to filter on.
	ApplicationId int64 `protobuf:"varint,3,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Search on name or DevEUI.
	Search string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	// Multicast-group ID to filter on (string formatted UUID).
	MulticastGroupId string `protobuf:"bytes,5,opt,name=multicast_group_id,json=multicastGroupID,proto3" json:"multicast_group_id,omitempty"`
	// Service-profile ID to filter on (string formatted UUID).
	ServiceProfileId string `protobuf:"bytes,6,opt,name=service_profile_id,json=serviceProfileID,proto3" json:"service_profile_id,omitempty"`
	// Tags to filter on.
	Tags                 map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListDeviceLastRxRequest) Reset()         { *m = ListDeviceLastRxRequest{} }
func (m *ListDeviceLastRxRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeviceLastRxRequest) ProtoMessage()    {}
func (*ListDeviceLastRxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{36}
}

func (m *ListDeviceLastRxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceLastRxRequest.Unmarshal(m, b)
}
func (m *ListDeviceLastRxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceLastRxRequest.Marshal(b, m, deterministic)
}
func (m *ListDeviceLastRxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceLastRxRequest.Merge(m, src)
}
func (m *ListDeviceLastRxRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceLastRxRequest.Size(m)
}
func (m *ListDeviceLastRxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceLastRxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceLastRxRequest proto.InternalMessageInfo

func (m *ListDeviceLastRxRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListDeviceLastRxRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListDeviceLastRxRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ListDeviceLastRxRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ListDeviceLastRxRequest) GetMulticastGroupId() string {
	if m != nil {
		return m.MulticastGroupId
	}
	return ""
}

func (m *ListDeviceLastRxRequest) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *ListDeviceLastRxRequest) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ListLastRxResponse struct {
	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	// Devices LastRxInfo within this result-set.
	Result               []*GetDeviceLastRxInfoResponse `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListLastRxResponse) Reset()         { *m = ListLastRxResponse{} }
func (m *ListLastRxResponse) String() string { return proto.CompactTextString(m) }
func (*ListLastRxResponse) ProtoMessage()    {}
func (*ListLastRxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{37}
}

func (m *ListLastRxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLastRxResponse.Unmarshal(m, b)
}
func (m *ListLastRxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLastRxResponse.Marshal(b, m, deterministic)
}
func (m *ListLastRxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLastRxResponse.Merge(m, src)
<<<<<<< HEAD
=======
}
func (m *ListLastRxResponse) XXX_Size() int {
	return xxx_messageInfo_ListLastRxResponse.Size(m)
}
func (m *ListLastRxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLastRxResponse.DiscardUnknown(m)
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *ListLastRxResponse) XXX_Size() int {
	return xxx_messageInfo_ListLastRxResponse.Size(m)
}
func (m *ListLastRxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLastRxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLastRxResponse proto.InternalMessageInfo

<<<<<<< HEAD
=======
var xxx_messageInfo_ListLastRxResponse proto.InternalMessageInfo

>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *ListLastRxResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListLastRxResponse) GetResult() []*GetDeviceLastRxInfoResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

type SesionKeyRequest struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// For LoRaWAN 1.0.x, use this field for the LoRaWAN 1.0.x 'AppKey`!
	NwkKey string `protobuf:"bytes,2,opt,name=nwkKey,proto3" json:"nwkKey,omitempty"`
	// Hex encoded netID.
	NetID string `protobuf:"bytes,4,opt,name=netID,proto3" json:"netID,omitempty"`
	// JoinNonce represents the join-nonce，Note that the max value is 2^24 - 1 = 16777215.
	JoinNonce uint32 `protobuf:"varint,5,opt,name=joinNonce,proto3" json:"joinNonce,omitempty"`
	// Hex encoded devNonce.
	DevNonce             uint32   `protobuf:"varint,6,opt,name=devNonce,proto3" json:"devNonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SesionKeyRequest) Reset()         { *m = SesionKeyRequest{} }
func (m *SesionKeyRequest) String() string { return proto.CompactTextString(m) }
func (*SesionKeyRequest) ProtoMessage()    {}
func (*SesionKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{38}
}

func (m *SesionKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SesionKeyRequest.Unmarshal(m, b)
}
func (m *SesionKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SesionKeyRequest.Marshal(b, m, deterministic)
}
func (m *SesionKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SesionKeyRequest.Merge(m, src)
}
func (m *SesionKeyRequest) XXX_Size() int {
	return xxx_messageInfo_SesionKeyRequest.Size(m)
<<<<<<< HEAD
}
func (m *SesionKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SesionKeyRequest.DiscardUnknown(m)
=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *SesionKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SesionKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SesionKeyRequest proto.InternalMessageInfo

<<<<<<< HEAD
var xxx_messageInfo_SesionKeyRequest proto.InternalMessageInfo

=======
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *SesionKeyRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *SesionKeyRequest) GetNwkKey() string {
	if m != nil {
		return m.NwkKey
	}
	return ""
}

func (m *SesionKeyRequest) GetNetID() string {
	if m != nil {
		return m.NetID
	}
	return ""
}

func (m *SesionKeyRequest) GetJoinNonce() uint32 {
	if m != nil {
		return m.JoinNonce
	}
	return 0
}

func (m *SesionKeyRequest) GetDevNonce() uint32 {
	if m != nil {
		return m.DevNonce
	}
	return 0
}

type SesionKeyResponse struct {
	// Application session key (HEX encoded).
	AppSKey string `protobuf:"bytes,1,opt,name=appSKey,proto3" json:"appSKey,omitempty"`
	// Forwarding network session integrity key (HEX encoded).
	FNwkSIntKey string `protobuf:"bytes,2,opt,name=fNwkSIntKey,proto3" json:"fNwkSIntKey,omitempty"`
	// Serving network session integrity key (HEX encoded).
	SNwkSIntKey string `protobuf:"bytes,3,opt,name=sNwkSIntKey,proto3" json:"sNwkSIntKey,omitempty"`
	// Network session encryption key (HEX encoded).
	NwkSEncKey           string   `protobuf:"bytes,4,opt,name=nwkSEncKey,proto3" json:"nwkSEncKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SesionKeyResponse) Reset()         { *m = SesionKeyResponse{} }
func (m *SesionKeyResponse) String() string { return proto.CompactTextString(m) }
func (*SesionKeyResponse) ProtoMessage()    {}
func (*SesionKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57ec3c2ed36f7cf9, []int{39}
}

func (m *SesionKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SesionKeyResponse.Unmarshal(m, b)
}
func (m *SesionKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SesionKeyResponse.Marshal(b, m, deterministic)
}
func (m *SesionKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SesionKeyResponse.Merge(m, src)
}
func (m *SesionKeyResponse) XXX_Size() int {
	return xxx_messageInfo_SesionKeyResponse.Size(m)
<<<<<<< HEAD
=======
}
func (m *SesionKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SesionKeyResponse.DiscardUnknown(m)
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}
func (m *SesionKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SesionKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SesionKeyResponse proto.InternalMessageInfo

<<<<<<< HEAD
=======
var xxx_messageInfo_SesionKeyResponse proto.InternalMessageInfo

>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
func (m *SesionKeyResponse) GetAppSKey() string {
	if m != nil {
		return m.AppSKey
	}
	return ""
}

func (m *SesionKeyResponse) GetFNwkSIntKey() string {
	if m != nil {
		return m.FNwkSIntKey
	}
	return ""
}

func (m *SesionKeyResponse) GetSNwkSIntKey() string {
	if m != nil {
		return m.SNwkSIntKey
	}
	return ""
}

func (m *SesionKeyResponse) GetNwkSEncKey() string {
	if m != nil {
		return m.NwkSEncKey
	}
	return ""
}

func init() {
	proto.RegisterType((*Device)(nil), "api.Device")
	proto.RegisterMapType((map[string]string)(nil), "api.Device.TagsEntry")
	proto.RegisterMapType((map[string]string)(nil), "api.Device.VariablesEntry")
	proto.RegisterType((*DeviceListItem)(nil), "api.DeviceListItem")
	proto.RegisterType((*DeviceKeys)(nil), "api.DeviceKeys")
	proto.RegisterType((*CreateDeviceRequest)(nil), "api.CreateDeviceRequest")
	proto.RegisterType((*GetDeviceRequest)(nil), "api.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "api.GetDeviceResponse")
	proto.RegisterType((*ListDeviceRequest)(nil), "api.ListDeviceRequest")
	proto.RegisterMapType((map[string]string)(nil), "api.ListDeviceRequest.TagsEntry")
	proto.RegisterType((*ListDeviceResponse)(nil), "api.ListDeviceResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "api.DeleteDeviceRequest")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "api.UpdateDeviceRequest")
	proto.RegisterType((*SetDeviceOrgRequest)(nil), "api.SetDeviceOrgRequest")
	proto.RegisterType((*SetDeviceUserRequest)(nil), "api.SetDeviceUserRequest")
	proto.RegisterType((*SetDeviceSceneRequest)(nil), "api.SetDeviceSceneRequest")
	proto.RegisterType((*SetDeviceParentRequest)(nil), "api.SetDeviceParentRequest")
	proto.RegisterType((*CreateDeviceKeysRequest)(nil), "api.CreateDeviceKeysRequest")
	proto.RegisterType((*GetDeviceKeysRequest)(nil), "api.GetDeviceKeysRequest")
	proto.RegisterType((*GetDeviceKeysResponse)(nil), "api.GetDeviceKeysResponse")
	proto.RegisterType((*UpdateDeviceKeysRequest)(nil), "api.UpdateDeviceKeysRequest")
	proto.RegisterType((*DeleteDeviceKeysRequest)(nil), "api.DeleteDeviceKeysRequest")
	proto.RegisterType((*DeviceActivation)(nil), "api.DeviceActivation")
	proto.RegisterType((*ActivateDeviceRequest)(nil), "api.ActivateDeviceRequest")
	proto.RegisterType((*DeactivateDeviceRequest)(nil), "api.DeactivateDeviceRequest")
	proto.RegisterType((*GetDeviceActivationRequest)(nil), "api.GetDeviceActivationRequest")
	proto.RegisterType((*GetDeviceActivationResponse)(nil), "api.GetDeviceActivationResponse")
	proto.RegisterType((*GetRandomDevAddrRequest)(nil), "api.GetRandomDevAddrRequest")
	proto.RegisterType((*GetRandomDevAddrResponse)(nil), "api.GetRandomDevAddrResponse")
	proto.RegisterType((*DeviceStats)(nil), "api.DeviceStats")
	proto.RegisterMapType((map[string]uint32)(nil), "api.DeviceStats.ErrorsEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "api.DeviceStats.RxPacketsPerDrEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "api.DeviceStats.RxPacketsPerFrequencyEntry")
	proto.RegisterType((*GetDeviceStatsRequest)(nil), "api.GetDeviceStatsRequest")
	proto.RegisterType((*GetDeviceStatsResponse)(nil), "api.GetDeviceStatsResponse")
	proto.RegisterType((*StreamDeviceFrameLogsRequest)(nil), "api.StreamDeviceFrameLogsRequest")
	proto.RegisterType((*StreamDeviceFrameLogsResponse)(nil), "api.StreamDeviceFrameLogsResponse")
	proto.RegisterType((*StreamDeviceEventLogsRequest)(nil), "api.StreamDeviceEventLogsRequest")
	proto.RegisterType((*StreamDeviceEventLogsResponse)(nil), "api.StreamDeviceEventLogsResponse")
	proto.RegisterType((*ClearDeviceNoncesRequest)(nil), "api.ClearDeviceNoncesRequest")
	proto.RegisterType((*GetDeviceLastRxInfoRequest)(nil), "api.GetDeviceLastRxInfoRequest")
	proto.RegisterType((*GetDeviceLastRxInfoResponse)(nil), "api.GetDeviceLastRxInfoResponse")
	proto.RegisterType((*ListDeviceLastRxRequest)(nil), "api.ListDeviceLastRxRequest")
	proto.RegisterMapType((map[string]string)(nil), "api.ListDeviceLastRxRequest.TagsEntry")
	proto.RegisterType((*ListLastRxResponse)(nil), "api.ListLastRxResponse")
	proto.RegisterType((*SesionKeyRequest)(nil), "api.SesionKeyRequest")
	proto.RegisterType((*SesionKeyResponse)(nil), "api.SesionKeyResponse")
}

func init() {
	proto.RegisterFile("as/external/api/device.proto", fileDescriptor_57ec3c2ed36f7cf9)
}

var fileDescriptor_57ec3c2ed36f7cf9 = []byte{
<<<<<<< HEAD
	// 2839 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5a, 0xcd, 0x77, 0x23, 0x47,
	0x11, 0x47, 0xb2, 0x25, 0xdb, 0x25, 0xcb, 0x1f, 0x6d, 0x7b, 0x3d, 0x2b, 0x7b, 0x6d, 0xed, 0x6c,
	0x92, 0x75, 0xbc, 0x89, 0x14, 0x9c, 0x84, 0x2c, 0xfb, 0x12, 0x78, 0xfe, 0x5a, 0x47, 0xec, 0x66,
	0x63, 0x46, 0xbb, 0xc0, 0x0b, 0x87, 0x79, 0x6d, 0x4d, 0x5b, 0x3b, 0x91, 0x34, 0x33, 0x4c, 0xb7,
	0xa4, 0x15, 0x21, 0xef, 0x01, 0x37, 0xe0, 0xc4, 0xcb, 0x81, 0x3b, 0x77, 0x0e, 0x70, 0xe4, 0x1f,
	0xe0, 0xc0, 0x0d, 0x0e, 0xfc, 0x03, 0xfc, 0x21, 0xbc, 0xfe, 0xd0, 0xa8, 0x47, 0x9a, 0xb1, 0xec,
	0x25, 0xa7, 0xd5, 0x74, 0x55, 0xd7, 0x47, 0xf7, 0xaf, 0xaa, 0xab, 0xca, 0x0b, 0xdb, 0x98, 0x56,
	0xc9, 0x2b, 0x46, 0x42, 0x0f, 0xb7, 0xab, 0x38, 0x70, 0xab, 0x0e, 0xe9, 0xb9, 0x0d, 0x52, 0x09,
	0x42, 0x9f, 0xf9, 0x68, 0x06, 0x07, 0x6e, 0x69, 0xbb, 0xe9, 0xfb, 0xcd, 0x36, 0x11, 0x54, 0xec,
	0x79, 0x3e, 0xc3, 0xcc, 0xf5, 0x3d, 0x2a, 0x59, 0x4a, 0xbb, 0x8a, 0x2a, 0xbe, 0x2e, 0xba, 0x97,
	0x55, 0xe6, 0x76, 0x08, 0x65, 0xb8, 0x13, 0x28, 0x86, 0xad, 0x71, 0x06, 0xd2, 0x09, 0xd8, 0x40,
	0x11, 0xd7, 0x1a, 0x7e, 0xa7, 0xe3, 0x7b, 0x55, 0xf9, 0x8f, 0x5a, 0xdc, 0x19, 0xb7, 0xe9, 0x32,
	0xc4, 0x1d, 0xf2, 0xd4, 0x6f, 0x2a, 0x7a, 0xa1, 0xd9, 0xaf, 0x36, 0xfb, 0xc3, 0x0f, 0x8f, 0x56,
	0x87, 0xc6, 0x98, 0xff, 0xc8, 0x41, 0xfe, 0x44, 0x38, 0x80, 0x36, 0x61, 0xce, 0x21, 0x3d, 0x9b,
	0x74, 0x5d, 0x23, 0x53, 0xce, 0xec, 0x2d, 0x58, 0x79, 0x87, 0xf4, 0x4e, 0x5f, 0xd4, 0x10, 0x82,
	0x59, 0x0f, 0x77, 0x88, 0x91, 0x15, 0xab, 0xe2, 0x37, 0x7a, 0x13, 0x96, 0x70, 0x10, 0xb4, 0xdd,
	0x86, 0x70, 0xcd, 0x76, 0x1d, 0x63, 0xa6, 0x9c, 0xd9, 0x9b, 0xb1, 0x8a, 0xda, 0x6a, 0xed, 0x04,
	0x95, 0xa1, 0xe0, 0x10, 0xda, 0x08, 0xdd, 0x80, 0x2f, 0x18, 0xb3, 0x42, 0x82, 0xbe, 0x84, 0xf6,
	0x61, 0x55, 0x1e, 0xa0, 0x1d, 0x84, 0xfe, 0xa5, 0xdb, 0x26, 0x5c, 0x56, 0x4e, 0xf0, 0x2d, 0x4b,
	0xc2, 0xb9, 0x5c, 0xaf, 0x9d, 0xa0, 0xfb, 0xb0, 0xec, 0x87, 0x4d, 0xec, 0xb9, 0xbf, 0x8c, 0xb4,
	0xe6, 0x85, 0xd6, 0x25, 0x7d, 0xb9, 0xe6, 0x70, 0x57, 0xba, 0x94, 0x84, 0x9c, 0x61, 0x4e, 0x30,
	0xe4, 0xf9, 0x67, 0xcd, 0x41, 0xeb, 0x90, 0xa3, 0x0d, 0xe2, 0x11, 0x63, 0xbe, 0x9c, 0xd9, 0xcb,
	0x59, 0xf2, 0x03, 0xdd, 0x82, 0x7c, 0x80, 0x43, 0xe2, 0x31, 0x63, 0x41, 0x72, 0xcb, 0x2f, 0xbe,
	0x4e, 0x19, 0x66, 0x5d, 0x6a, 0x80, 0x60, 0x57, 0x5f, 0x7c, 0x1d, 0x77, 0xd9, 0x4b, 0x3f, 0x34,
	0x0a, 0xf2, 0xa0, 0xe4, 0x17, 0x5f, 0x0f, 0x49, 0x07, 0x87, 0x2d, 0x63, 0x51, 0xae, 0xcb, 0x2f,
	0xb4, 0x04, 0x59, 0xd7, 0x31, 0x8a, 0x42, 0x76, 0xd6, 0x75, 0xd0, 0x43, 0x58, 0xe8, 0xe1, 0xd0,
	0xc5, 0x17, 0x6d, 0x42, 0x8d, 0xa5, 0xf2, 0xcc, 0x5e, 0xe1, 0xa0, 0x54, 0xc1, 0x81, 0x5b, 0x91,
	0x37, 0x51, 0xf9, 0xc9, 0x90, 0x78, 0xea, 0xb1, 0x70, 0x60, 0x8d, 0x98, 0xd1, 0xdb, 0x30, 0xcb,
	0x70, 0x93, 0x1a, 0xcb, 0x62, 0xd3, 0x86, 0xbe, 0xe9, 0x39, 0x6e, 0x2a, 0x7e, 0xc1, 0x82, 0xee,
	0xc3, 0x0a, 0x6d, 0xb9, 0x81, 0x7d, 0x69, 0x37, 0x3c, 0x66, 0x37, 0x5e, 0x92, 0x46, 0xcb, 0x58,
	0x29, 0x67, 0xf6, 0xe6, 0xad, 0x22, 0x5f, 0x7f, 0x7c, 0xec, 0xb1, 0x63, 0xbe, 0x88, 0xde, 0x05,
	0x14, 0x92, 0x4b, 0x12, 0x12, 0xaf, 0x41, 0x6c, 0xdc, 0x66, 0x2e, 0xeb, 0x3a, 0xc4, 0x58, 0x2d,
	0x67, 0xf6, 0x32, 0xd6, 0x6a, 0x44, 0x39, 0x54, 0x04, 0xb4, 0x0b, 0x05, 0x97, 0xda, 0x8e, 0x4b,
	0xb9, 0x45, 0x8e, 0x81, 0x84, 0x48, 0x70, 0xe9, 0x89, 0x5a, 0x29, 0x7d, 0x0c, 0x4b, 0x71, 0x07,
	0xd0, 0x0a, 0xcc, 0xb4, 0xc8, 0x40, 0xa1, 0x8a, 0xff, 0xe4, 0xf7, 0xd0, 0xc3, 0xed, 0xee, 0x10,
	0x53, 0xf2, 0xe3, 0x51, 0xf6, 0x61, 0xa6, 0xf4, 0x11, 0x2c, 0x44, 0x9e, 0xdc, 0x64, 0xa3, 0xf9,
	0xd7, 0x3c, 0x2c, 0xc9, 0xa3, 0x78, 0xea, 0x52, 0x56, 0x63, 0xa4, 0xa3, 0xce, 0x3d, 0x13, 0x9d,
	0xbb, 0x86, 0xf0, 0x6c, 0x22, 0xc2, 0x67, 0xae, 0x44, 0xf8, 0xec, 0x35, 0x10, 0x9e, 0xbb, 0x26,
	0xc2, 0xf3, 0xc9, 0x08, 0xaf, 0xc0, 0xda, 0x18, 0xaf, 0xb0, 0x6b, 0x4e, 0x70, 0xaf, 0xc6, 0xb8,
	0x9f, 0x71, 0x23, 0x0f, 0x60, 0x43, 0xf1, 0x4b, 0x68, 0xda, 0x17, 0x98, 0x31, 0x12, 0x0e, 0x04,
	0xbe, 0x8b, 0x96, 0x12, 0x56, 0x17, 0xb4, 0x23, 0x49, 0x42, 0xef, 0xc1, 0x7a, 0x7c, 0x4f, 0x07,
	0x87, 0x4d, 0xd7, 0x13, 0xd8, 0xcf, 0x59, 0x48, 0xdf, 0xf2, 0x99, 0xa0, 0xa0, 0xa7, 0x70, 0x2f,
	0xbe, 0x63, 0x98, 0x6b, 0xec, 0xc0, 0xef, 0x93, 0xd0, 0xa6, 0x7e, 0x37, 0x6c, 0x10, 0x11, 0x24,
	0xf3, 0xd6, 0xae, 0x2e, 0xe0, 0x54, 0x31, 0x9e, 0x73, 0xbe, 0xba, 0x60, 0x43, 0xcf, 0xe1, 0x7e,
	0xa2, 0xcd, 0x76, 0x9b, 0xf4, 0x48, 0xdb, 0xee, 0x7a, 0xb8, 0x87, 0xdd, 0x36, 0x87, 0x8f, 0x08,
	0xaf, 0x79, 0xeb, 0x5e, 0x82, 0x17, 0x4f, 0x39, 0xef, 0x8b, 0x11, 0x2b, 0xfa, 0x04, 0xb6, 0xae,
	0x90, 0x2a, 0x02, 0x32, 0x6b, 0x19, 0x69, 0x92, 0xd0, 0xc7, 0xb0, 0xd8, 0xc6, 0x94, 0xd9, 0x94,
	0x10, 0xcf, 0xc6, 0x4c, 0x04, 0x2b, 0x8f, 0x4a, 0x99, 0x8a, 0x2b, 0xc3, 0x54, 0x5c, 0x79, 0x3e,
	0xcc, 0xd5, 0x16, 0x70, 0xfe, 0x3a, 0x21, 0xde, 0x21, 0x4b, 0x4a, 0x4c, 0x4b, 0xd3, 0x12, 0xd3,
	0x72, 0x72, 0x62, 0x5a, 0x49, 0x4e, 0x4c, 0xab, 0x29, 0x89, 0x09, 0xa5, 0x24, 0xa6, 0xb5, 0x94,
	0xc4, 0xb4, 0xae, 0x27, 0x26, 0xb3, 0x0f, 0x20, 0x43, 0xe6, 0x09, 0x19, 0xd0, 0xf4, 0x07, 0x60,
	0x13, 0xe6, 0xbc, 0x7e, 0xcb, 0xe6, 0xa1, 0xa8, 0xe2, 0xc6, 0xeb, 0xb7, 0x9e, 0x90, 0x01, 0x27,
	0xe0, 0x20, 0x10, 0x84, 0x19, 0xa5, 0x30, 0x08, 0x38, 0x61, 0x07, 0x0a, 0x4d, 0x7e, 0x90, 0x8a,
	0x28, 0xf3, 0xfe, 0x42, 0x93, 0x78, 0x87, 0x82, 0x6e, 0x3e, 0x82, 0xb5, 0xe3, 0x90, 0x60, 0x46,
	0xa4, 0x7a, 0x8b, 0xfc, 0xa2, 0x4b, 0x28, 0x43, 0xf7, 0x20, 0x2f, 0x6f, 0x48, 0x18, 0x50, 0x38,
	0x28, 0x68, 0x09, 0xce, 0x52, 0x24, 0xf3, 0x01, 0xac, 0x9c, 0x11, 0x16, 0xdf, 0x98, 0x66, 0xba,
	0xf9, 0xfb, 0x2c, 0xac, 0x6a, 0xdc, 0x34, 0xf0, 0x3d, 0x4a, 0xae, 0xa5, 0x67, 0x02, 0x12, 0xb9,
	0x1b, 0x41, 0x22, 0x35, 0x32, 0xf3, 0x37, 0x8f, 0xcc, 0xf5, 0xd4, 0xc8, 0x7c, 0x07, 0xe6, 0xdb,
	0xbe, 0xcc, 0x45, 0xc6, 0x86, 0xb0, 0x6f, 0xa5, 0xa2, 0x2a, 0x83, 0xa7, 0x6a, 0xdd, 0x8a, 0x38,
	0xcc, 0xbf, 0xcf, 0xc0, 0x2a, 0x4f, 0x8e, 0xf1, 0xb3, 0x5b, 0x87, 0x5c, 0xdb, 0xed, 0xb8, 0x4c,
	0x25, 0x4a, 0xf9, 0xc1, 0x21, 0xe3, 0x5f, 0x5e, 0x52, 0xc2, 0xc4, 0x95, 0xcf, 0x58, 0xea, 0x2b,
	0x09, 0xea, 0x33, 0x89, 0x50, 0x8f, 0x10, 0x3d, 0x9b, 0x8c, 0xe8, 0x5c, 0x0a, 0xa2, 0xf3, 0x31,
	0x44, 0x4f, 0x66, 0xe1, 0xb9, 0xa4, 0x2c, 0xcc, 0xb7, 0x13, 0x1c, 0x36, 0x5e, 0x8a, 0xc4, 0xb7,
	0x60, 0xa9, 0x2f, 0xf4, 0x0e, 0xa0, 0x4e, 0xb7, 0xcd, 0xdc, 0x06, 0xbf, 0xc8, 0x66, 0xe8, 0x77,
	0x03, 0x2e, 0x62, 0x41, 0xf0, 0xac, 0x44, 0x94, 0x33, 0x4e, 0xa8, 0x9d, 0x70, 0x6e, 0x4a, 0xc2,
	0xf1, 0x54, 0x0d, 0x92, 0x5b, 0x51, 0x46, 0xb9, 0xfa, 0x03, 0xf5, 0x16, 0x17, 0xc4, 0x5b, 0x5c,
	0x16, 0x10, 0x9a, 0x38, 0xdd, 0xf1, 0x67, 0xf9, 0xf5, 0xdf, 0xb7, 0x0b, 0x40, 0xba, 0x74, 0x85,
	0xe4, 0x5d, 0x28, 0x30, 0x9f, 0xe1, 0xb6, 0xdd, 0xf0, 0xbb, 0xde, 0xf0, 0x0a, 0x41, 0x2c, 0x1d,
	0xf3, 0x15, 0xf4, 0x80, 0x87, 0x3e, 0xed, 0xb6, 0xf9, 0x3d, 0x72, 0x3b, 0xd7, 0x34, 0xa8, 0x0f,
	0x1f, 0x4a, 0x4b, 0xb1, 0x98, 0x15, 0x58, 0x3b, 0x21, 0x6d, 0x32, 0x1e, 0x96, 0xa9, 0xd1, 0xf5,
	0x08, 0xd6, 0x5e, 0x04, 0xce, 0xeb, 0x85, 0xf1, 0x4f, 0x61, 0xad, 0x3e, 0x0c, 0xcc, 0xcf, 0xc3,
	0xe6, 0x34, 0x5d, 0x49, 0xc0, 0xcb, 0x26, 0x01, 0xcf, 0xfc, 0x14, 0xd6, 0x23, 0xc1, 0x2f, 0x28,
	0x09, 0xa7, 0x4a, 0xd6, 0x92, 0x72, 0x56, 0x4f, 0xca, 0xe6, 0x63, 0xd8, 0x88, 0x24, 0xd5, 0x39,
	0x7c, 0xa7, 0x8a, 0x8a, 0x40, 0x9f, 0xd5, 0x40, 0x6f, 0xfe, 0x18, 0x6e, 0x45, 0x72, 0xce, 0x05,
	0xde, 0xa7, 0x0a, 0xda, 0x89, 0xe2, 0x44, 0x39, 0x29, 0xbf, 0xa4, 0x8c, 0x9a, 0x63, 0x3e, 0x81,
	0x4d, 0x3d, 0x81, 0xf2, 0xfc, 0x3d, 0x94, 0xf9, 0x1e, 0xaf, 0x48, 0x04, 0x88, 0x5b, 0x64, 0x40,
	0xd5, 0x15, 0x2c, 0x6b, 0x57, 0x20, 0x98, 0xc1, 0x89, 0x7e, 0x9b, 0x55, 0x58, 0x8f, 0x72, 0xa4,
	0x2e, 0x29, 0xf5, 0xde, 0x6b, 0xb0, 0x31, 0xb6, 0x41, 0xc1, 0xf1, 0xe6, 0xba, 0x9f, 0xc0, 0xa6,
	0x0e, 0xa1, 0xff, 0xcf, 0x91, 0x03, 0xd8, 0xd4, 0xf1, 0x7b, 0x2d, 0x5f, 0xfe, 0x92, 0x85, 0x15,
	0xc9, 0x7e, 0xd8, 0x60, 0x6e, 0x4f, 0xa0, 0x28, 0xfd, 0x5e, 0x6e, 0xc3, 0x3c, 0x27, 0x60, 0xc7,
	0x09, 0x55, 0x88, 0x72, 0xc6, 0x43, 0xc7, 0x09, 0x51, 0x09, 0x16, 0xf8, 0x7b, 0x47, 0xb5, 0xe7,
	0x90, 0xbf, 0x8e, 0x75, 0xfe, 0x1e, 0xde, 0x85, 0x22, 0x7f, 0x41, 0xa9, 0x4d, 0xbc, 0x86, 0xf6,
	0x22, 0x82, 0xd7, 0x6f, 0xd5, 0x4f, 0xbd, 0x06, 0x67, 0x79, 0x03, 0x96, 0xa9, 0x2d, 0x99, 0x5c,
	0x8f, 0x09, 0x26, 0x99, 0xcb, 0x0a, 0xf4, 0x59, 0xbf, 0x55, 0xaf, 0x79, 0x4c, 0x71, 0x5d, 0x8e,
	0x71, 0xc9, 0x6c, 0x56, 0xb8, 0xd4, 0xb8, 0x0c, 0x98, 0x97, 0x65, 0x7f, 0x37, 0x10, 0x79, 0xb6,
	0x68, 0xe5, 0x2f, 0x8f, 0x3d, 0xf6, 0x22, 0x40, 0xbb, 0xb0, 0xe8, 0xa9, 0x96, 0xc0, 0xf1, 0xfb,
	0x9e, 0x7a, 0x8d, 0x16, 0x3c, 0xde, 0x0e, 0x9c, 0xf8, 0x7d, 0x8f, 0x33, 0x60, 0x9d, 0x01, 0x24,
	0x03, 0x1e, 0x32, 0x98, 0x3f, 0x87, 0x0d, 0x75, 0x50, 0x63, 0x51, 0x7f, 0x14, 0xd5, 0xb9, 0x38,
	0x3a, 0x48, 0x75, 0x69, 0x7a, 0xa3, 0x32, 0x3a, 0x65, 0x6b, 0xc5, 0x19, 0x5b, 0x91, 0x17, 0x88,
	0x13, 0xc5, 0xa7, 0x5e, 0xe0, 0x87, 0x50, 0x8a, 0xc0, 0xa8, 0x09, 0x9f, 0xb6, 0x0d, 0xc3, 0x56,
	0xe2, 0x36, 0x85, 0xe4, 0x6f, 0xc9, 0x9b, 0x33, 0xc2, 0x2c, 0xec, 0x39, 0x7e, 0xe7, 0x44, 0xa2,
	0xe4, 0x1a, 0xde, 0x18, 0x93, 0x7b, 0x94, 0x4d, 0x3a, 0xf8, 0x32, 0x31, 0xf0, 0x99, 0xff, 0x9c,
	0x85, 0xc2, 0x49, 0x54, 0x1f, 0x50, 0xde, 0x62, 0x46, 0x63, 0x05, 0x65, 0xf6, 0x55, 0x95, 0xcb,
	0x88, 0x19, 0xdd, 0x01, 0x08, 0x5f, 0xd9, 0x01, 0x6e, 0xb4, 0x08, 0xa3, 0x02, 0xe3, 0x45, 0x6b,
	0x21, 0x7c, 0x75, 0x2e, 0x17, 0xb8, 0xe1, 0xcd, 0xbe, 0x1d, 0x52, 0xea, 0x0a, 0x8c, 0x67, 0xad,
	0x7c, 0xb3, 0x6f, 0x51, 0xea, 0xa2, 0x0d, 0xc8, 0x37, 0xfb, 0x36, 0xf5, 0x42, 0x81, 0xed, 0xac,
	0x95, 0x6b, 0xf6, 0xeb, 0x5e, 0x88, 0x1c, 0x30, 0x46, 0xe2, 0xec, 0x80, 0x84, 0xf6, 0x65, 0xc8,
	0xcf, 0xc0, 0x6b, 0x0c, 0x8c, 0x9c, 0x78, 0x91, 0x1e, 0x68, 0xc7, 0x29, 0x8c, 0xaf, 0x58, 0x43,
	0x6d, 0xe7, 0x24, 0x7c, 0x3c, 0xe4, 0x96, 0x8f, 0xe8, 0x46, 0x98, 0x44, 0x43, 0x9f, 0xc3, 0xea,
	0x98, 0x16, 0x27, 0x34, 0xf2, 0x42, 0xfc, 0x1b, 0x57, 0x8a, 0x3f, 0x09, 0xa5, 0xdc, 0xa5, 0x30,
	0xb6, 0x88, 0x3e, 0x80, 0x3c, 0x09, 0x43, 0x3f, 0xa4, 0xc6, 0x9c, 0x90, 0xb2, 0x3d, 0x21, 0xe5,
	0x54, 0x90, 0xe5, 0x6e, 0xc5, 0x5b, 0xfa, 0x14, 0x4a, 0xe9, 0xb6, 0xeb, 0xaf, 0x7d, 0x31, 0xe1,
	0xb5, 0x2f, 0xea, 0x6d, 0xf0, 0x21, 0xac, 0x25, 0x98, 0x79, 0x23, 0x11, 0xdf, 0x87, 0x82, 0x66,
	0xe3, 0xb4, 0x5a, 0x43, 0xdf, 0x6a, 0xfe, 0x2b, 0xa3, 0x25, 0x78, 0xe1, 0xee, 0xd4, 0x07, 0xab,
	0x04, 0xf3, 0xae, 0xc7, 0x48, 0xd8, 0xc3, 0x6d, 0x95, 0x18, 0xa3, 0x6f, 0x74, 0x0c, 0xcb, 0x94,
	0xe1, 0x90, 0xd9, 0x23, 0x48, 0xce, 0x4c, 0x85, 0xe4, 0x92, 0xd8, 0x12, 0x7d, 0xa3, 0x1f, 0x42,
	0x91, 0x78, 0x8e, 0x26, 0x62, 0x76, 0xaa, 0x88, 0x45, 0xe2, 0x39, 0xd1, 0x97, 0x79, 0x04, 0xb7,
	0xc6, 0x7d, 0x52, 0x71, 0xb5, 0x17, 0xd5, 0x48, 0x19, 0x71, 0xd9, 0x2b, 0xe3, 0x97, 0x1d, 0x15,
	0x48, 0x1f, 0xc1, 0x76, 0x9d, 0x85, 0x04, 0x77, 0x24, 0xf1, 0xb1, 0x1a, 0xb3, 0x4d, 0x7f, 0x65,
	0xfe, 0x9c, 0x81, 0x3b, 0x29, 0x3b, 0x95, 0x11, 0x0f, 0x61, 0xb1, 0x1b, 0xb4, 0x5d, 0xaf, 0x65,
	0x8b, 0xe1, 0x9d, 0x0a, 0x5a, 0x59, 0xae, 0xbd, 0x10, 0x84, 0xe1, 0x9e, 0x4f, 0xbf, 0x63, 0x15,
	0xba, 0xa3, 0x15, 0xf4, 0x03, 0x58, 0xe2, 0xa9, 0x5a, 0xdb, 0x9b, 0xd5, 0xf3, 0x94, 0x22, 0x69,
	0xbb, 0x8b, 0x8e, 0xbe, 0x76, 0x34, 0x07, 0x39, 0xb1, 0x6d, 0xdc, 0xbb, 0xd3, 0x1e, 0xf1, 0xd8,
	0xb5, 0xbc, 0xfb, 0xdb, 0x98, 0x77, 0xda, 0x4e, 0xe5, 0x1d, 0x82, 0x59, 0x36, 0x08, 0x88, 0xda,
	0x27, 0x7e, 0xa3, 0xbb, 0xb0, 0x18, 0xe0, 0x41, 0xdb, 0xc7, 0x8e, 0xfd, 0x25, 0xf5, 0x3d, 0x05,
	0x9b, 0x82, 0x5a, 0xfb, 0x51, 0xfd, 0xf3, 0x67, 0xe8, 0x13, 0x58, 0x0c, 0xba, 0x17, 0x6d, 0x97,
	0xbe, 0x24, 0x0e, 0xef, 0xc1, 0xa6, 0xc3, 0xa6, 0x10, 0xf1, 0x1f, 0x32, 0xb4, 0x05, 0x0b, 0x54,
	0x98, 0x35, 0x1c, 0xdf, 0x2c, 0x58, 0xf3, 0x72, 0xa1, 0x76, 0x62, 0xbe, 0x0f, 0xc6, 0x71, 0x9b,
	0xe0, 0x50, 0x9a, 0xfc, 0xcc, 0xf7, 0x1a, 0x84, 0xde, 0xe8, 0xb1, 0x79, 0x8a, 0x29, 0xb3, 0x5e,
	0xd5, 0xbc, 0x4b, 0x7f, 0xea, 0xb6, 0x3f, 0x64, 0xb4, 0xd7, 0x46, 0xdf, 0xa7, 0x8e, 0x27, 0x35,
	0xac, 0xaa, 0x90, 0x97, 0xec, 0xea, 0x4e, 0x37, 0x2b, 0x1e, 0x55, 0xc8, 0x3c, 0xc3, 0x8c, 0xf4,
	0xf1, 0xc0, 0xfa, 0x99, 0x90, 0xa4, 0xd8, 0x90, 0x09, 0x8b, 0xe1, 0xab, 0x83, 0x28, 0xf3, 0x88,
	0x13, 0x2b, 0x5a, 0xb1, 0x35, 0xf3, 0x3f, 0x59, 0xd8, 0x1c, 0xf5, 0x12, 0x72, 0xe3, 0xeb, 0x75,
	0x83, 0xd7, 0x1c, 0x03, 0x8f, 0xda, 0xb3, 0xd9, 0x6b, 0xb4, 0x67, 0xb9, 0x1b, 0xb5, 0x67, 0xf9,
	0x94, 0xf6, 0xec, 0x91, 0x6a, 0xcf, 0x64, 0xfe, 0x7e, 0x6b, 0xac, 0x3d, 0x8b, 0x39, 0xfd, 0xed,
	0x35, 0x69, 0x9e, 0x6c, 0xd2, 0x86, 0xd2, 0xd5, 0xed, 0xee, 0x80, 0xd6, 0x91, 0x25, 0xf4, 0x68,
	0x0f, 0xc7, 0x7a, 0x34, 0xd9, 0x4b, 0x5e, 0x81, 0x97, 0x28, 0x1f, 0x7d, 0x93, 0x81, 0x95, 0x3a,
	0xa1, 0xae, 0xef, 0x3d, 0x21, 0x83, 0xa9, 0x39, 0xfa, 0x16, 0xa8, 0xc1, 0xcd, 0xd8, 0x18, 0x67,
	0x1d, 0x72, 0x1e, 0x61, 0xb5, 0x13, 0x75, 0x3b, 0xf2, 0x03, 0x6d, 0xc3, 0xc2, 0x97, 0xbe, 0xeb,
	0x89, 0xc0, 0x50, 0x55, 0xe4, 0x68, 0x81, 0xe7, 0x7b, 0x87, 0xf4, 0x24, 0x51, 0x16, 0x91, 0xd1,
	0xb7, 0xf9, 0xc7, 0x0c, 0xac, 0x6a, 0x56, 0xa9, 0x53, 0x30, 0x60, 0x58, 0x0e, 0x0f, 0x8b, 0x97,
	0x61, 0x75, 0x5c, 0x06, 0xbd, 0x7a, 0x1d, 0xe6, 0x01, 0xbd, 0xa0, 0x2d, 0x83, 0x5e, 0x05, 0xab,
	0xea, 0x3a, 0x56, 0x18, 0xef, 0x80, 0x56, 0x4c, 0x4f, 0x96, 0xd7, 0x07, 0x7f, 0xda, 0x80, 0xa2,
	0xca, 0xe8, 0x12, 0x29, 0xa8, 0x0e, 0x79, 0xd9, 0x42, 0x21, 0x43, 0x9c, 0x77, 0xc2, 0x40, 0xaa,
	0x74, 0x6b, 0x22, 0xd3, 0x9c, 0x76, 0x02, 0x36, 0x30, 0x37, 0x7f, 0xfb, 0xef, 0xff, 0x7e, 0x93,
	0x5d, 0x35, 0x17, 0xb5, 0xbf, 0x00, 0xd1, 0x47, 0x99, 0x7d, 0xf4, 0x1c, 0x66, 0xce, 0x08, 0x43,
	0x1b, 0xf1, 0x1b, 0x1c, 0x89, 0x1b, 0x5b, 0x96, 0x47, 0x63, 0xee, 0x08, 0x71, 0x06, 0xba, 0xa5,
	0x8b, 0xab, 0x7e, 0xa5, 0x6e, 0xf1, 0x6b, 0xf4, 0x19, 0xcc, 0x72, 0x58, 0xa1, 0x5b, 0xc9, 0x43,
	0x86, 0xd2, 0xe6, 0xc4, 0xba, 0x12, 0xbc, 0x2e, 0x04, 0x2f, 0xa1, 0x98, 0x9d, 0xe8, 0x0b, 0xc8,
	0xcb, 0x36, 0x49, 0x79, 0x9e, 0xd0, 0xf3, 0xa7, 0x7a, 0xae, 0x4c, 0xdd, 0x4f, 0x33, 0xd5, 0x81,
	0xbc, 0xec, 0xe7, 0x94, 0xec, 0x84, 0xf9, 0x40, 0xaa, 0xec, 0x3d, 0x21, 0xdb, 0x2c, 0xdd, 0x99,
	0x90, 0xed, 0x36, 0x48, 0x65, 0xa8, 0x82, 0x1f, 0x73, 0x00, 0x8b, 0xfa, 0xf0, 0x40, 0xe9, 0x4a,
	0x98, 0x27, 0xa4, 0xea, 0xaa, 0x08, 0x5d, 0x7b, 0xa5, 0x7b, 0xc9, 0x7e, 0x54, 0xf5, 0xa1, 0x02,
	0xd7, 0xf8, 0x25, 0x14, 0x63, 0x53, 0x05, 0x74, 0x3b, 0xae, 0x52, 0x9b, 0x34, 0xa4, 0xea, 0x7c,
	0x4b, 0xe8, 0x2c, 0x97, 0xb6, 0x52, 0x74, 0x76, 0x29, 0x09, 0xb9, 0xae, 0x0e, 0x2c, 0xc5, 0xe7,
	0x0e, 0xa8, 0x14, 0x57, 0xa6, 0x0f, 0x23, 0x52, 0xb5, 0xdd, 0x17, 0xda, 0xee, 0x96, 0xb6, 0x53,
	0xb4, 0x89, 0xd9, 0x84, 0x3c, 0xcc, 0xe5, 0xb1, 0xf1, 0x04, 0xda, 0x8a, 0xeb, 0x8b, 0x0d, 0x2d,
	0x5e, 0xe3, 0xfa, 0xa4, 0x42, 0x39, 0xc2, 0xe0, 0x1a, 0x7b, 0x00, 0x32, 0xda, 0xc4, 0xdc, 0x79,
	0x7b, 0x22, 0xfc, 0xb4, 0xc6, 0x3d, 0x55, 0xdb, 0x81, 0xd0, 0xf6, 0x8e, 0x79, 0x3f, 0x09, 0x2c,
	0x62, 0x62, 0x10, 0x21, 0xa6, 0xca, 0xbf, 0xb8, 0x5e, 0x02, 0x73, 0x67, 0x84, 0x09, 0xa5, 0xb7,
	0xe3, 0xa1, 0xa8, 0x6b, 0x2c, 0x25, 0x91, 0x54, 0x40, 0xdd, 0x13, 0x5a, 0xef, 0xa0, 0xb4, 0x2b,
	0xe4, 0x9a, 0xb8, 0x7b, 0x12, 0xf6, 0x9a, 0x7b, 0x29, 0x43, 0x8e, 0x69, 0xee, 0x95, 0x6e, 0xe2,
	0x5e, 0x13, 0x40, 0x86, 0xb2, 0xa6, 0x37, 0x65, 0x1e, 0x92, 0xaa, 0x57, 0x39, 0xb8, 0x7f, 0xa5,
	0x83, 0xbf, 0x82, 0xf9, 0xe1, 0x0c, 0x40, 0x41, 0x33, 0x71, 0x24, 0x90, 0xaa, 0xe4, 0x63, 0xa1,
	0xe4, 0x7b, 0xe6, 0x77, 0x13, 0x9d, 0x1b, 0x35, 0xdc, 0x23, 0x17, 0x87, 0x33, 0x01, 0x19, 0x1e,
	0x30, 0x1a, 0x12, 0x44, 0x6e, 0xe2, 0x1b, 0x59, 0xf0, 0xb6, 0xb0, 0xe0, 0xde, 0xfe, 0xdd, 0x14,
	0x37, 0x47, 0x36, 0xa0, 0xaf, 0xa1, 0x78, 0x46, 0x98, 0x36, 0x1c, 0xda, 0x8d, 0xe3, 0x63, 0x62,
	0xe6, 0x50, 0x2a, 0xa7, 0x33, 0x28, 0x18, 0x29, 0xf5, 0xe8, 0x1a, 0xea, 0x7f, 0x9d, 0x11, 0x7f,
	0xef, 0x88, 0x4d, 0x04, 0x94, 0xd3, 0x29, 0xc3, 0x85, 0xd2, 0x9d, 0x14, 0xaa, 0x52, 0x5e, 0x15,
	0xca, 0xdf, 0x4e, 0x88, 0x1c, 0xa9, 0xbc, 0x39, 0xae, 0xcd, 0x85, 0xf9, 0x33, 0xc2, 0xe4, 0x60,
	0x61, 0x2c, 0x38, 0xf4, 0xe6, 0xb0, 0xb4, 0x95, 0x48, 0x53, 0x5a, 0xdf, 0x10, 0x5a, 0x77, 0x50,
	0x6a, 0x3a, 0x12, 0xe2, 0x7f, 0x93, 0x81, 0x65, 0xd9, 0x49, 0x44, 0x1d, 0x12, 0xba, 0x2b, 0x93,
	0xd1, 0x15, 0x7d, 0x57, 0xc9, 0xbc, 0x8a, 0x45, 0x19, 0xf0, 0xa6, 0x30, 0x60, 0x17, 0xa5, 0xa5,
	0x27, 0xd1, 0x03, 0xd1, 0xf7, 0x32, 0x9a, 0x0d, 0x51, 0x1f, 0x93, 0x60, 0xc3, 0x78, 0x77, 0x94,
	0x60, 0xc3, 0x44, 0x1b, 0x34, 0xd5, 0x06, 0xc2, 0x77, 0x70, 0x1b, 0x28, 0xac, 0x4e, 0x34, 0x27,
	0x48, 0xde, 0x6b, 0x5a, 0xd3, 0x32, 0xed, 0x21, 0xd8, 0xdf, 0x4d, 0x51, 0xea, 0x90, 0x9e, 0x27,
	0x6a, 0x3a, 0x89, 0xf4, 0x51, 0xb9, 0x39, 0x8e, 0xf4, 0x89, 0x86, 0xa7, 0x34, 0xb5, 0x52, 0x9d,
	0x8a, 0xf4, 0x36, 0xa6, 0x2c, 0x7c, 0xe5, 0x72, 0x6d, 0xbf, 0xcb, 0xc0, 0xed, 0x51, 0xf5, 0x7c,
	0x34, 0x38, 0x8c, 0xf5, 0x10, 0xdb, 0x57, 0x55, 0xf0, 0x5a, 0x05, 0x14, 0xaf, 0xbd, 0xcd, 0x0f,
	0x85, 0xfe, 0x2a, 0x7a, 0x57, 0xfe, 0x6f, 0x9c, 0x91, 0x48, 0x5a, 0xfd, 0x2a, 0xde, 0xba, 0xc4,
	0x6c, 0x71, 0xa1, 0x20, 0x1f, 0xa4, 0xba, 0xc8, 0xa5, 0x1b, 0xea, 0x3d, 0x8c, 0x57, 0xda, 0xaa,
	0x9e, 0x9b, 0x28, 0x75, 0xcd, 0x07, 0x42, 0xe9, 0x9b, 0x66, 0x39, 0x0d, 0xeb, 0x62, 0x47, 0x8b,
	0x0c, 0x1e, 0x65, 0xf6, 0x8f, 0x5a, 0x70, 0xd7, 0xf5, 0x2b, 0x8d, 0x97, 0x6e, 0x18, 0x50, 0x86,
	0x1b, 0x2d, 0x21, 0x13, 0xd3, 0xca, 0xf0, 0x8f, 0xec, 0xfc, 0xfb, 0x48, 0x0d, 0xf7, 0xce, 0xf9,
	0xcd, 0x9e, 0x67, 0xbe, 0xf8, 0xa8, 0xe9, 0xb2, 0x97, 0xdd, 0x8b, 0x4a, 0xc3, 0xef, 0x54, 0x2f,
	0x42, 0xbf, 0x81, 0x71, 0x58, 0x1d, 0x49, 0x78, 0x97, 0x6b, 0x6d, 0xfa, 0xd5, 0xde, 0xfb, 0xd5,
	0xb1, 0xff, 0x18, 0x74, 0x91, 0x17, 0xd8, 0x78, 0xff, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xac,
	0x0d, 0x38, 0x74, 0xc6, 0x24, 0x00, 0x00,
=======
	// 2791 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x3a, 0xcb, 0x72, 0x1b, 0xc7,
	0xb5, 0x17, 0x20, 0x09, 0x92, 0x07, 0x04, 0x1f, 0xcd, 0x17, 0x04, 0x52, 0x24, 0x35, 0xb2, 0x2d,
	0x9a, 0xb2, 0x01, 0x5f, 0xda, 0xbe, 0xd6, 0x55, 0xd9, 0xf7, 0x16, 0x5f, 0xa2, 0x11, 0xc9, 0x32,
	0x33, 0x90, 0x92, 0x94, 0xb3, 0x98, 0x6a, 0x62, 0x9a, 0xd0, 0x18, 0xc0, 0xcc, 0xa4, 0xbb, 0x01,
	0x08, 0x71, 0x5c, 0x95, 0x64, 0x97, 0x64, 0x95, 0xf2, 0x22, 0xfb, 0xec, 0xb3, 0x48, 0x7e, 0x22,
	0x0b, 0xef, 0x92, 0x45, 0x7e, 0x20, 0x1f, 0x92, 0xea, 0x07, 0x06, 0x3d, 0xc0, 0x0c, 0x41, 0x3a,
	0x5e, 0x65, 0xc5, 0xe9, 0x3e, 0xa7, 0xcf, 0xa3, 0xfb, 0xbc, 0x41, 0xd8, 0xc6, 0xac, 0x42, 0x5e,
	0x73, 0x42, 0x7d, 0xdc, 0xaa, 0xe0, 0xd0, 0xab, 0xb8, 0xa4, 0xeb, 0xd5, 0x49, 0x39, 0xa4, 0x01,
	0x0f, 0xd0, 0x14, 0x0e, 0xbd, 0xd2, 0x76, 0x23, 0x08, 0x1a, 0x2d, 0x22, 0xa1, 0xd8, 0xf7, 0x03,
	0x8e, 0xb9, 0x17, 0xf8, 0x4c, 0xa1, 0x94, 0x76, 0x35, 0x54, 0xae, 0x2e, 0x3b, 0x57, 0x15, 0xee,
	0xb5, 0x09, 0xe3, 0xb8, 0x1d, 0x6a, 0x84, 0xad, 0x51, 0x04, 0xd2, 0x0e, 0x79, 0x5f, 0x03, 0x57,
	0xeb, 0x41, 0xbb, 0x1d, 0xf8, 0x15, 0xf5, 0x47, 0x6f, 0xee, 0x8c, 0xca, 0x74, 0x45, 0x71, 0x9b,
	0x3c, 0x0b, 0x1a, 0x1a, 0x9e, 0x6f, 0xf4, 0x2a, 0x8d, 0xde, 0x60, 0xe1, 0xb3, 0xca, 0x40, 0x18,
	0xeb, 0xaf, 0x33, 0x90, 0x3b, 0x95, 0x0a, 0xa0, 0x4d, 0x98, 0x75, 0x49, 0xd7, 0x21, 0x1d, 0xaf,
	0x98, 0xd9, 0xcb, 0xec, 0xcf, 0xdb, 0x39, 0x97, 0x74, 0xcf, 0x5e, 0x56, 0x11, 0x82, 0x69, 0x1f,
	0xb7, 0x49, 0x31, 0x2b, 0x77, 0xe5, 0x37, 0x7a, 0x13, 0x16, 0x71, 0x18, 0xb6, 0xbc, 0xba, 0x54,
	0xcd, 0xf1, 0xdc, 0xe2, 0xd4, 0x5e, 0x66, 0x7f, 0xca, 0x2e, 0x18, 0xbb, 0xd5, 0x53, 0xb4, 0x07,
	0x79, 0x97, 0xb0, 0x3a, 0xf5, 0x42, 0xb1, 0x51, 0x9c, 0x96, 0x14, 0xcc, 0x2d, 0x74, 0x00, 0x2b,
	0xea, 0x02, 0x9d, 0x90, 0x06, 0x57, 0x5e, 0x8b, 0x08, 0x5a, 0x33, 0x12, 0x6f, 0x49, 0x01, 0x2e,
	0xd4, 0x7e, 0xf5, 0x14, 0x3d, 0x80, 0xa5, 0x80, 0x36, 0xb0, 0xef, 0xfd, 0x3c, 0xe2, 0x9a, 0x93,
	0x5c, 0x17, 0xcd, 0xed, 0xaa, 0x2b, 0x54, 0xe9, 0x30, 0x42, 0x05, 0xc2, 0xac, 0x44, 0xc8, 0x89,
	0x65, 0xd5, 0x45, 0x6b, 0x30, 0xc3, 0xea, 0xc4, 0x27, 0xc5, 0xb9, 0xbd, 0xcc, 0xfe, 0x8c, 0xad,
	0x16, 0x68, 0x03, 0x72, 0x21, 0xa6, 0xc4, 0xe7, 0xc5, 0x79, 0x85, 0xad, 0x56, 0x62, 0x9f, 0x71,
	0xcc, 0x3b, 0xac, 0x08, 0x12, 0x5d, 0xaf, 0xc4, 0x3e, 0xee, 0xf0, 0x57, 0x01, 0x2d, 0xe6, 0xd5,
	0x45, 0xa9, 0x95, 0xd8, 0xa7, 0xa4, 0x8d, 0x69, 0xb3, 0xb8, 0xa0, 0xf6, 0xd5, 0x0a, 0x2d, 0x42,
	0xd6, 0x73, 0x8b, 0x05, 0x49, 0x3b, 0xeb, 0xb9, 0xe8, 0x11, 0xcc, 0x77, 0x31, 0xf5, 0xf0, 0x65,
	0x8b, 0xb0, 0xe2, 0xe2, 0xde, 0xd4, 0x7e, 0xfe, 0xb0, 0x54, 0xc6, 0xa1, 0x57, 0x56, 0x2f, 0x51,
	0xfe, 0xd1, 0x00, 0x78, 0xe6, 0x73, 0xda, 0xb7, 0x87, 0xc8, 0xe8, 0x6d, 0x98, 0xe6, 0xb8, 0xc1,
	0x8a, 0x4b, 0xf2, 0xd0, 0xba, 0x79, 0xe8, 0x05, 0x6e, 0x68, 0x7c, 0x89, 0x82, 0x1e, 0xc0, 0x32,
	0x6b, 0x7a, 0xa1, 0x73, 0xe5, 0xd4, 0x7d, 0xee, 0xd4, 0x5f, 0x91, 0x7a, 0xb3, 0xb8, 0xbc, 0x97,
	0xd9, 0x9f, 0xb3, 0x0b, 0x62, 0xff, 0xc9, 0x89, 0xcf, 0x4f, 0xc4, 0x26, 0x7a, 0x17, 0x10, 0x25,
	0x57, 0x84, 0x12, 0xbf, 0x4e, 0x1c, 0xdc, 0xe2, 0x1e, 0xef, 0xb8, 0xa4, 0xb8, 0xb2, 0x97, 0xd9,
	0xcf, 0xd8, 0x2b, 0x11, 0xe4, 0x48, 0x03, 0xd0, 0x2e, 0xe4, 0x3d, 0xe6, 0xb8, 0x1e, 0x13, 0x12,
	0xb9, 0x45, 0x24, 0x49, 0x82, 0xc7, 0x4e, 0xf5, 0x4e, 0xe9, 0x63, 0x58, 0x8c, 0x2b, 0x80, 0x96,
	0x61, 0xaa, 0x49, 0xfa, 0xda, 0xaa, 0xc4, 0xa7, 0x78, 0x87, 0x2e, 0x6e, 0x75, 0x06, 0x36, 0xa5,
	0x16, 0x8f, 0xb3, 0x8f, 0x32, 0xa5, 0x8f, 0x60, 0x3e, 0xd2, 0xe4, 0x36, 0x07, 0xad, 0x3f, 0xe7,
	0x60, 0x51, 0x5d, 0xc5, 0x33, 0x8f, 0xf1, 0x2a, 0x27, 0x6d, 0x7d, 0xef, 0x99, 0xe8, 0xde, 0x0d,
	0x0b, 0xcf, 0x26, 0x5a, 0xf8, 0xd4, 0xb5, 0x16, 0x3e, 0x7d, 0x03, 0x0b, 0x9f, 0xb9, 0xa1, 0x85,
	0xe7, 0x92, 0x2d, 0xbc, 0x0c, 0xab, 0x23, 0xb8, 0x52, 0xae, 0x59, 0x89, 0xbd, 0x12, 0xc3, 0x7e,
	0x2e, 0x84, 0x3c, 0x84, 0x75, 0x8d, 0xaf, 0x4c, 0xd3, 0xb9, 0xc4, 0x9c, 0x13, 0xda, 0x97, 0xf6,
	0x5d, 0xb0, 0x35, 0xb1, 0x9a, 0x84, 0x1d, 0x2b, 0x10, 0x7a, 0x0f, 0xd6, 0xe2, 0x67, 0xda, 0x98,
	0x36, 0x3c, 0x5f, 0xda, 0xfe, 0x8c, 0x8d, 0xcc, 0x23, 0x9f, 0x49, 0x08, 0x7a, 0x06, 0xf7, 0xe3,
	0x27, 0x06, 0xb1, 0xc6, 0x09, 0x83, 0x1e, 0xa1, 0x0e, 0x0b, 0x3a, 0xb4, 0x4e, 0xa4, 0x93, 0xcc,
	0xd9, 0xbb, 0x26, 0x81, 0x33, 0x8d, 0x78, 0x21, 0xf0, 0x6a, 0x12, 0x0d, 0xbd, 0x80, 0x07, 0x89,
	0x32, 0x3b, 0x2d, 0xd2, 0x25, 0x2d, 0xa7, 0xe3, 0xe3, 0x2e, 0xf6, 0x5a, 0xc2, 0x7c, 0xa4, 0x7b,
	0xcd, 0xd9, 0xf7, 0x13, 0xb4, 0x78, 0x26, 0x70, 0x5f, 0x0e, 0x51, 0xd1, 0x27, 0xb0, 0x75, 0x0d,
	0x55, 0xe9, 0x90, 0x59, 0xbb, 0x98, 0x46, 0x09, 0x7d, 0x0c, 0x0b, 0x2d, 0xcc, 0xb8, 0xc3, 0x08,
	0xf1, 0x1d, 0xcc, 0xa5, 0xb3, 0x0a, 0xaf, 0x54, 0xa1, 0xb8, 0x3c, 0x08, 0xc5, 0xe5, 0x17, 0x83,
	0x58, 0x6d, 0x83, 0xc0, 0xaf, 0x11, 0xe2, 0x1f, 0xf1, 0xa4, 0xc0, 0xb4, 0x38, 0x29, 0x30, 0x2d,
	0x25, 0x07, 0xa6, 0xe5, 0xe4, 0xc0, 0xb4, 0x92, 0x12, 0x98, 0x50, 0x4a, 0x60, 0x5a, 0x4d, 0x09,
	0x4c, 0x6b, 0x66, 0x60, 0xb2, 0x7a, 0x00, 0xca, 0x65, 0x9e, 0x92, 0x3e, 0x4b, 0x4f, 0x00, 0x9b,
	0x30, 0xeb, 0xf7, 0x9a, 0x8e, 0x70, 0x45, 0xed, 0x37, 0x7e, 0xaf, 0xf9, 0x94, 0xf4, 0x05, 0x00,
	0x87, 0xa1, 0x04, 0x4c, 0x69, 0x86, 0x61, 0x28, 0x00, 0x3b, 0x90, 0x6f, 0x88, 0x8b, 0xd4, 0x40,
	0x15, 0xf7, 0xe7, 0x1b, 0xc4, 0x3f, 0x92, 0x70, 0xeb, 0x31, 0xac, 0x9e, 0x50, 0x82, 0x39, 0x51,
	0xec, 0x6d, 0xf2, 0xb3, 0x0e, 0x61, 0x1c, 0xdd, 0x87, 0x9c, 0x7a, 0x21, 0x29, 0x40, 0xfe, 0x30,
	0x6f, 0x04, 0x38, 0x5b, 0x83, 0xac, 0x87, 0xb0, 0x7c, 0x4e, 0x78, 0xfc, 0x60, 0x9a, 0xe8, 0xd6,
	0x6f, 0xb3, 0xb0, 0x62, 0x60, 0xb3, 0x30, 0xf0, 0x19, 0xb9, 0x11, 0x9f, 0x31, 0x93, 0x98, 0xb9,
	0x95, 0x49, 0xa4, 0x7a, 0x66, 0xee, 0xf6, 0x9e, 0xb9, 0x96, 0xea, 0x99, 0xef, 0xc0, 0x5c, 0x2b,
	0x50, 0xb1, 0xa8, 0xb8, 0x2e, 0xe5, 0x5b, 0x2e, 0xeb, 0xca, 0xe0, 0x99, 0xde, 0xb7, 0x23, 0x0c,
	0xeb, 0xdb, 0x2c, 0xac, 0x88, 0xe0, 0x18, 0xbf, 0xbb, 0x35, 0x98, 0x69, 0x79, 0x6d, 0x8f, 0xeb,
	0x40, 0xa9, 0x16, 0xc2, 0x64, 0x82, 0xab, 0x2b, 0x46, 0xb8, 0x7c, 0xf2, 0x29, 0x5b, 0xaf, 0x6e,
	0x9a, 0xf8, 0x85, 0x85, 0x12, 0x4c, 0xeb, 0xaf, 0xf4, 0xdb, 0xeb, 0x15, 0x7a, 0x07, 0x50, 0xbb,
	0xd3, 0xe2, 0x5e, 0x5d, 0xdc, 0x6c, 0x83, 0x06, 0x9d, 0x70, 0x98, 0xef, 0x97, 0x23, 0xc8, 0xb9,
	0x00, 0x54, 0x4f, 0x05, 0x36, 0x23, 0x34, 0x39, 0x76, 0x2e, 0x6b, 0xc8, 0x30, 0x78, 0x7e, 0xa0,
	0x93, 0xe3, 0xac, 0x4c, 0x8e, 0x7b, 0xf2, 0x4d, 0xc7, 0xd4, 0x1d, 0xcd, 0x93, 0xdf, 0x3d, 0xe1,
	0x5c, 0x02, 0x32, 0xa9, 0x6b, 0xd3, 0xda, 0x85, 0x3c, 0x0f, 0x38, 0x6e, 0x39, 0xf5, 0xa0, 0xe3,
	0x0f, 0xee, 0x14, 0xe4, 0xd6, 0x89, 0xd8, 0x41, 0x0f, 0x85, 0x2f, 0xb2, 0x4e, 0x4b, 0x5c, 0xac,
	0x90, 0x73, 0xd5, 0xb0, 0xbd, 0x41, 0xe6, 0xb2, 0x35, 0x8a, 0x55, 0x86, 0xd5, 0x53, 0xd2, 0x22,
	0xa3, 0x7e, 0x92, 0x6a, 0xee, 0x8f, 0x61, 0xf5, 0x65, 0xe8, 0x7e, 0x37, 0xbf, 0xfa, 0x31, 0xac,
	0xd6, 0x06, 0x9e, 0xf2, 0x39, 0x6d, 0x4c, 0xe2, 0x95, 0x14, 0xf4, 0xb2, 0x49, 0x41, 0xcf, 0xfa,
	0x14, 0xd6, 0x22, 0xc2, 0x2f, 0x19, 0xa1, 0x13, 0x29, 0x1b, 0x51, 0x32, 0x6b, 0x46, 0x49, 0xeb,
	0x09, 0xac, 0x47, 0x94, 0x6a, 0x22, 0x42, 0x4e, 0x24, 0x15, 0xc5, 0xd5, 0xac, 0x11, 0x57, 0xad,
	0x1f, 0xc2, 0x46, 0x44, 0xe7, 0x42, 0x86, 0xd4, 0x89, 0x84, 0x76, 0xa2, 0x50, 0xac, 0x95, 0x54,
	0x2b, 0x45, 0xa3, 0xea, 0x5a, 0x4f, 0x61, 0xd3, 0x8c, 0x68, 0x22, 0xa0, 0x0e, 0x68, 0xbe, 0x27,
	0x4a, 0x04, 0x69, 0xc4, 0x4d, 0xd2, 0x67, 0xfa, 0x09, 0x96, 0x8c, 0x27, 0x90, 0xc8, 0xe0, 0x46,
	0xdf, 0x56, 0x05, 0xd6, 0xa2, 0xa0, 0x65, 0x52, 0x4a, 0x7d, 0xf7, 0x2a, 0xac, 0x8f, 0x1c, 0xd0,
	0xe6, 0x78, 0x7b, 0xde, 0x4f, 0x61, 0xd3, 0x34, 0xa1, 0x7f, 0x4f, 0x91, 0x43, 0xd8, 0x34, 0xed,
	0xf7, 0x46, 0xba, 0xfc, 0x29, 0x0b, 0xcb, 0x0a, 0xfd, 0xa8, 0xce, 0xbd, 0xae, 0xb4, 0xa2, 0xf4,
	0x77, 0xb9, 0x03, 0x73, 0x02, 0x80, 0x5d, 0x97, 0x6a, 0x17, 0x15, 0x88, 0x47, 0xae, 0x4b, 0x51,
	0x09, 0xe6, 0x45, 0x02, 0x62, 0x46, 0x7e, 0x12, 0xe9, 0xaa, 0x26, 0x12, 0xd4, 0x3d, 0x28, 0x88,
	0x94, 0xc6, 0x1c, 0xe2, 0xd7, 0x8d, 0x14, 0x05, 0x7e, 0xaf, 0x59, 0x3b, 0xf3, 0xeb, 0x02, 0xe5,
	0x0d, 0x58, 0x62, 0x8e, 0x42, 0xf2, 0x7c, 0x2e, 0x91, 0xe6, 0x54, 0x75, 0xc7, 0x9e, 0xf7, 0x9a,
	0xb5, 0xaa, 0xcf, 0x35, 0xd6, 0xd5, 0x08, 0xd6, 0xbc, 0xc2, 0xba, 0x32, 0xb0, 0x8a, 0x30, 0xa7,
	0xea, 0xf0, 0x4e, 0x28, 0x83, 0x5d, 0xc1, 0xce, 0x5d, 0x9d, 0xf8, 0xfc, 0x65, 0x88, 0x76, 0x61,
	0xc1, 0xd7, 0x35, 0xba, 0x1b, 0xf4, 0x7c, 0x9d, 0x1e, 0xe6, 0x7d, 0x51, 0x9f, 0x9f, 0x06, 0x3d,
	0x5f, 0x20, 0x60, 0x13, 0x01, 0x14, 0x02, 0x1e, 0x20, 0x58, 0x3f, 0x85, 0x75, 0x7d, 0x51, 0x23,
	0x5e, 0x7f, 0x1c, 0x15, 0x9e, 0x38, 0xba, 0x48, 0xfd, 0x68, 0x66, 0xe7, 0x30, 0xbc, 0x65, 0x7b,
	0xd9, 0x1d, 0xd9, 0x51, 0x0f, 0x88, 0x13, 0xc9, 0xa7, 0x3e, 0xe0, 0x87, 0x50, 0x8a, 0x8c, 0xd1,
	0x20, 0x3e, 0xe9, 0x18, 0x86, 0xad, 0xc4, 0x63, 0xda, 0x92, 0xbf, 0x27, 0x6d, 0xce, 0x09, 0xb7,
	0xb1, 0xef, 0x06, 0xed, 0x53, 0x65, 0x25, 0x37, 0xd0, 0xa6, 0x38, 0x7e, 0x46, 0xcb, 0x64, 0x1a,
	0x5f, 0x26, 0x66, 0x7c, 0xd6, 0xb7, 0xd3, 0x90, 0x3f, 0x8d, 0x12, 0x36, 0x13, 0x3d, 0x5f, 0xd4,
	0xe7, 0x6b, 0xb1, 0xaf, 0x2b, 0x25, 0x86, 0xc8, 0xe8, 0x2e, 0x00, 0x7d, 0xed, 0x84, 0xb8, 0xde,
	0x24, 0x9c, 0x49, 0x1b, 0x2f, 0xd8, 0xf3, 0xf4, 0xf5, 0x85, 0xda, 0x10, 0x82, 0x37, 0x7a, 0x0e,
	0x65, 0xcc, 0x93, 0x36, 0x9e, 0xb5, 0x73, 0x8d, 0x9e, 0xcd, 0x98, 0x87, 0xd6, 0x21, 0xd7, 0xe8,
	0x39, 0xcc, 0xa7, 0xd2, 0xb6, 0xb3, 0xf6, 0x4c, 0xa3, 0x57, 0xf3, 0x29, 0x72, 0xa1, 0x38, 0x24,
	0xe7, 0x84, 0x84, 0x3a, 0x57, 0x54, 0xdc, 0x81, 0x5f, 0xef, 0x17, 0x67, 0x64, 0x46, 0x7a, 0x68,
	0x5c, 0xa7, 0x14, 0xbe, 0x6c, 0x0f, 0xb8, 0x5d, 0x10, 0xfa, 0x64, 0x80, 0xad, 0x92, 0xe8, 0x3a,
	0x4d, 0x82, 0xa1, 0xcf, 0x61, 0x65, 0x84, 0x8b, 0x4b, 0x8b, 0x39, 0x49, 0xfe, 0x8d, 0x6b, 0xc9,
	0x9f, 0x52, 0x45, 0x77, 0x91, 0xc6, 0x36, 0xd1, 0x07, 0x90, 0x23, 0x94, 0x06, 0x74, 0x90, 0xde,
	0xb7, 0xc7, 0xa8, 0x9c, 0x49, 0xb0, 0x3a, 0xad, 0x71, 0x4b, 0x9f, 0x42, 0x29, 0x5d, 0x76, 0x33,
	0xdb, 0x17, 0x12, 0xb2, 0x7d, 0xc1, 0xec, 0x4b, 0x8f, 0x60, 0x35, 0x41, 0xcc, 0x5b, 0x91, 0xf8,
	0x5f, 0xc8, 0x1b, 0x32, 0x4e, 0xaa, 0x35, 0xcc, 0xa3, 0xd6, 0xdf, 0x32, 0x46, 0x80, 0x97, 0xea,
	0x4e, 0x4c, 0x58, 0x25, 0x98, 0xf3, 0x7c, 0x4e, 0x68, 0x17, 0xb7, 0x74, 0x60, 0x8c, 0xd6, 0xe8,
	0x04, 0x96, 0x18, 0xc7, 0x94, 0x3b, 0x43, 0x93, 0x9c, 0x9a, 0x68, 0x92, 0x8b, 0xf2, 0x48, 0xb4,
	0x46, 0xff, 0x0f, 0x05, 0xe2, 0xbb, 0x06, 0x89, 0xe9, 0x89, 0x24, 0x16, 0x88, 0xef, 0x46, 0x2b,
	0xeb, 0x18, 0x36, 0x46, 0x75, 0xd2, 0x7e, 0xb5, 0x1f, 0xd5, 0x48, 0x19, 0xf9, 0xd8, 0xcb, 0xa3,
	0x8f, 0x1d, 0x15, 0x48, 0x1f, 0xc1, 0x76, 0x8d, 0x53, 0x82, 0xdb, 0x0a, 0xf8, 0x44, 0xcf, 0xbd,
	0x26, 0x67, 0x99, 0x3f, 0x66, 0xe0, 0x6e, 0xca, 0x49, 0x2d, 0xc4, 0x23, 0x58, 0xe8, 0x84, 0x2d,
	0xcf, 0x6f, 0x3a, 0x72, 0x9a, 0xa6, 0x9d, 0x56, 0x95, 0x6b, 0x2f, 0x25, 0x60, 0x70, 0xe6, 0xd3,
	0xff, 0xb2, 0xf3, 0x9d, 0xe1, 0x0e, 0xfa, 0x3f, 0x58, 0x14, 0xa1, 0xda, 0x38, 0x9b, 0x35, 0xe3,
	0x94, 0x06, 0x19, 0xa7, 0x0b, 0xae, 0xb9, 0x77, 0x3c, 0x0b, 0x33, 0xf2, 0xd8, 0xa8, 0x76, 0x67,
	0x5d, 0xe2, 0xf3, 0x1b, 0x69, 0xf7, 0x97, 0x11, 0xed, 0x8c, 0x93, 0x5a, 0x3b, 0x04, 0xd3, 0xbc,
	0x1f, 0x12, 0x7d, 0x4e, 0x7e, 0xa3, 0x7b, 0xb0, 0x10, 0xe2, 0x7e, 0x2b, 0xc0, 0xae, 0xf3, 0x25,
	0x0b, 0x7c, 0x6d, 0x36, 0x79, 0xbd, 0xf7, 0x83, 0xda, 0xe7, 0xcf, 0xd1, 0x27, 0xb0, 0x10, 0x76,
	0x2e, 0x5b, 0x1e, 0x7b, 0x45, 0x5c, 0xd1, 0x14, 0x4d, 0x36, 0x9b, 0x7c, 0x84, 0x7f, 0xc4, 0xd1,
	0x16, 0xcc, 0x33, 0x29, 0xd6, 0x60, 0x9e, 0x32, 0x6f, 0xcf, 0xa9, 0x8d, 0xea, 0xa9, 0xf5, 0x3e,
	0x14, 0x4f, 0x5a, 0x04, 0x53, 0x25, 0xf2, 0xf3, 0xc0, 0xaf, 0x13, 0x76, 0xab, 0x64, 0xf3, 0x0c,
	0x33, 0x6e, 0xbf, 0xae, 0xfa, 0x57, 0xc1, 0xc4, 0x63, 0xbf, 0xcb, 0x18, 0xd9, 0xc6, 0x3c, 0xa7,
	0xaf, 0x27, 0xd5, 0xad, 0x2a, 0x90, 0x53, 0xe8, 0xfa, 0x4d, 0x37, 0xcb, 0x3e, 0xd3, 0x96, 0x79,
	0x8e, 0x39, 0xe9, 0xe1, 0xbe, 0xfd, 0x13, 0x49, 0x49, 0xa3, 0x21, 0x0b, 0x16, 0xe8, 0xeb, 0xc3,
	0x28, 0xf2, 0xc8, 0x1b, 0x2b, 0xd8, 0xb1, 0x3d, 0xeb, 0x1f, 0x59, 0xd8, 0x1c, 0xf6, 0x12, 0xea,
	0xe0, 0x7f, 0x5c, 0x7b, 0xf6, 0x38, 0xd6, 0x9e, 0xbd, 0x35, 0xd2, 0x9e, 0xc5, 0x94, 0xfe, 0xfe,
	0x9a, 0x34, 0x5f, 0x35, 0x69, 0x03, 0xea, 0xfa, 0x75, 0x77, 0xc0, 0xe8, 0xc8, 0x12, 0x7a, 0xb4,
	0x47, 0x23, 0x3d, 0x9a, 0xea, 0x25, 0xaf, 0xb1, 0x97, 0x28, 0x1e, 0x7d, 0x93, 0x81, 0xe5, 0x1a,
	0x61, 0x5e, 0xe0, 0x3f, 0x25, 0xfd, 0x89, 0x31, 0x7a, 0x03, 0xf4, 0x24, 0x65, 0x64, 0xae, 0xb2,
	0x06, 0x33, 0x3e, 0xe1, 0xd5, 0x53, 0xfd, 0x3a, 0x6a, 0x81, 0xb6, 0x61, 0xfe, 0xcb, 0xc0, 0xf3,
	0xa5, 0x63, 0xe8, 0x2a, 0x72, 0xb8, 0x21, 0xe2, 0xbd, 0x4b, 0xba, 0x0a, 0xa8, 0x8a, 0xc8, 0x68,
	0x6d, 0xfd, 0x3e, 0x03, 0x2b, 0x86, 0x54, 0xfa, 0x16, 0x8a, 0x30, 0x28, 0x87, 0x07, 0xc5, 0xcb,
	0xa0, 0x3a, 0xde, 0x03, 0xb3, 0x7a, 0x1d, 0xc4, 0x01, 0xb3, 0xa0, 0xdd, 0x03, 0xb3, 0x0a, 0xd6,
	0xd5, 0x75, 0xac, 0x30, 0xde, 0x01, 0xa3, 0x98, 0x1e, 0x2f, 0xaf, 0x0f, 0xff, 0xb0, 0x0e, 0x05,
	0x1d, 0xd1, 0x95, 0xa5, 0xa0, 0x1a, 0xe4, 0x54, 0x0b, 0x85, 0x8a, 0xf2, 0xbe, 0x13, 0x26, 0x44,
	0xa5, 0x8d, 0xb1, 0x48, 0x73, 0xd6, 0x0e, 0x79, 0xdf, 0xda, 0xfc, 0xf5, 0xdf, 0xff, 0xf9, 0x4d,
	0x76, 0xc5, 0x5a, 0x30, 0x7e, 0x92, 0x61, 0x8f, 0x33, 0x07, 0xe8, 0x05, 0x4c, 0x9d, 0x13, 0x8e,
	0xd6, 0xe3, 0x2f, 0x38, 0x24, 0x37, 0xb2, 0xad, 0xae, 0xc6, 0xda, 0x91, 0xe4, 0x8a, 0x68, 0xc3,
	0x24, 0x57, 0xf9, 0x4a, 0xbf, 0xe2, 0xd7, 0xe8, 0x33, 0x98, 0x16, 0x66, 0x85, 0x36, 0x92, 0x87,
	0x0c, 0xa5, 0xcd, 0xb1, 0x7d, 0x4d, 0x78, 0x4d, 0x12, 0x5e, 0x44, 0x31, 0x39, 0xd1, 0x17, 0x90,
	0x53, 0x6d, 0x92, 0xd6, 0x3c, 0xa1, 0xe7, 0x4f, 0xd5, 0x5c, 0x8b, 0x7a, 0x90, 0x26, 0xaa, 0x0b,
	0x39, 0xd5, 0xcf, 0x69, 0xda, 0x09, 0xf3, 0x81, 0x54, 0xda, 0xfb, 0x92, 0xb6, 0x55, 0xba, 0x3b,
	0x46, 0xdb, 0xab, 0x93, 0xf2, 0x80, 0x85, 0xb8, 0xe6, 0x10, 0x16, 0xcc, 0xe1, 0x81, 0xe6, 0x95,
	0x30, 0x4f, 0x48, 0xe5, 0x55, 0x96, 0xbc, 0xf6, 0x4b, 0xf7, 0x93, 0xf5, 0xa8, 0x98, 0x43, 0x05,
	0xc1, 0xf1, 0x4b, 0x28, 0xc4, 0xa6, 0x0a, 0xe8, 0x4e, 0x9c, 0xa5, 0x31, 0x69, 0x48, 0xe5, 0xf9,
	0x96, 0xe4, 0xb9, 0x57, 0xda, 0x4a, 0xe1, 0xd9, 0x61, 0x84, 0x0a, 0x5e, 0x6d, 0x58, 0x8c, 0xcf,
	0x1d, 0x50, 0x29, 0xce, 0xcc, 0x1c, 0x46, 0xa4, 0x72, 0x7b, 0x20, 0xb9, 0xdd, 0x2b, 0x6d, 0xa7,
	0x70, 0x93, 0xb3, 0x09, 0x75, 0x99, 0x4b, 0x23, 0xe3, 0x09, 0xb4, 0x15, 0xe7, 0x17, 0x1b, 0x5a,
	0x7c, 0x87, 0xe7, 0x53, 0x0c, 0xd5, 0x08, 0x43, 0x70, 0xec, 0x02, 0x28, 0x6f, 0x93, 0x83, 0xe0,
	0xed, 0x31, 0xf7, 0x33, 0x1a, 0xf7, 0x54, 0x6e, 0x87, 0x92, 0xdb, 0x3b, 0xd6, 0x83, 0x24, 0x63,
	0x91, 0x13, 0x83, 0xc8, 0x62, 0x2a, 0x62, 0x25, 0xf8, 0x12, 0x98, 0x3d, 0x27, 0x5c, 0x32, 0xbd,
	0x13, 0x77, 0x45, 0x93, 0x63, 0x29, 0x09, 0xa4, 0x1d, 0xea, 0xbe, 0xe4, 0x7a, 0x17, 0xa5, 0x3d,
	0xa1, 0xe0, 0x24, 0xd4, 0x53, 0x66, 0x6f, 0xa8, 0x97, 0x32, 0xe4, 0x98, 0xa4, 0x5e, 0xe9, 0x36,
	0xea, 0x35, 0x00, 0x94, 0x2b, 0x1b, 0x7c, 0x53, 0xe6, 0x21, 0xa9, 0x7c, 0xb5, 0x82, 0x07, 0xd7,
	0x2a, 0xf8, 0x0b, 0x98, 0x1b, 0xcc, 0x00, 0xb4, 0x69, 0x26, 0x8e, 0x04, 0x52, 0x99, 0x7c, 0x2c,
	0x99, 0xfc, 0x8f, 0xf5, 0xdf, 0x89, 0xca, 0x0d, 0x1b, 0xee, 0xa1, 0x8a, 0x83, 0x99, 0x80, 0x72,
	0x0f, 0x18, 0x0e, 0x09, 0x22, 0x35, 0xf1, 0xad, 0x24, 0x78, 0x5b, 0x4a, 0x70, 0xff, 0xe0, 0x5e,
	0x8a, 0x9a, 0x43, 0x19, 0xd0, 0xd7, 0x50, 0x38, 0x27, 0xdc, 0x18, 0x0e, 0xed, 0xc6, 0xed, 0x63,
	0x6c, 0xe6, 0x50, 0xda, 0x4b, 0x47, 0xd0, 0x66, 0xa4, 0xd9, 0xa3, 0x1b, 0xb0, 0xff, 0x65, 0x46,
	0xfe, 0x00, 0x11, 0x9b, 0x08, 0x68, 0xa5, 0x53, 0x86, 0x0b, 0xa5, 0xbb, 0x29, 0x50, 0xcd, 0xbc,
	0x22, 0x99, 0xbf, 0x9d, 0xe0, 0x39, 0x8a, 0x79, 0x63, 0x94, 0x9b, 0x07, 0x73, 0xe7, 0x84, 0xab,
	0xc1, 0xc2, 0x88, 0x73, 0x98, 0xcd, 0x61, 0x69, 0x2b, 0x11, 0xa6, 0xb9, 0xbe, 0x21, 0xb9, 0xee,
	0xa0, 0xd4, 0x70, 0x24, 0xc9, 0xff, 0x2a, 0x03, 0x4b, 0xaa, 0x93, 0x88, 0x3a, 0x24, 0x74, 0x4f,
	0x05, 0xa3, 0x6b, 0xfa, 0xae, 0x92, 0x75, 0x1d, 0x8a, 0x16, 0xe0, 0x4d, 0x29, 0xc0, 0x2e, 0x4a,
	0x0b, 0x4f, 0xb2, 0x07, 0x62, 0xef, 0x65, 0x0c, 0x19, 0xa2, 0x3e, 0x26, 0x41, 0x86, 0xd1, 0xee,
	0x28, 0x41, 0x86, 0xb1, 0x36, 0x68, 0xa2, 0x0c, 0x44, 0x9c, 0x10, 0x32, 0x30, 0x58, 0x19, 0x6b,
	0x4e, 0x90, 0x7a, 0xd7, 0xb4, 0xa6, 0x65, 0x52, 0x22, 0x38, 0xd8, 0x4d, 0x61, 0xea, 0x92, 0xae,
	0x2f, 0x6b, 0x3a, 0x65, 0xe9, 0xc3, 0x72, 0x73, 0xd4, 0xd2, 0xc7, 0x1a, 0x9e, 0xd2, 0xc4, 0x4a,
	0x75, 0xa2, 0xa5, 0xb7, 0x30, 0xe3, 0xf4, 0xb5, 0x27, 0xb8, 0xfd, 0x26, 0x03, 0x77, 0x86, 0xd5,
	0xf3, 0x71, 0xff, 0x28, 0xd6, 0x43, 0x6c, 0x5f, 0x57, 0xc1, 0x1b, 0x15, 0x50, 0xbc, 0xf6, 0xb6,
	0x3e, 0x94, 0xfc, 0x2b, 0xe8, 0x5d, 0xf5, 0xef, 0x31, 0x43, 0x92, 0xac, 0xf2, 0x55, 0xbc, 0x75,
	0x89, 0xc9, 0xe2, 0x41, 0x5e, 0x25, 0xa4, 0x9a, 0x8c, 0xa5, 0xeb, 0x3a, 0x1f, 0xc6, 0x2b, 0x6d,
	0x5d, 0xcf, 0x8d, 0x95, 0xba, 0xd6, 0x43, 0xc9, 0xf4, 0x4d, 0x6b, 0x2f, 0xcd, 0xd6, 0xe5, 0x89,
	0x26, 0xe9, 0x3f, 0xce, 0x1c, 0x1c, 0x37, 0xe1, 0x9e, 0x17, 0x94, 0xeb, 0xaf, 0x3c, 0x1a, 0x32,
	0x8e, 0xeb, 0x4d, 0x49, 0x13, 0xb3, 0xf2, 0xe0, 0x57, 0x6f, 0xb1, 0x3e, 0xd6, 0xc3, 0xbd, 0x0b,
	0xf1, 0xb2, 0x17, 0x99, 0x2f, 0x3e, 0x6a, 0x78, 0xfc, 0x55, 0xe7, 0xb2, 0x5c, 0x0f, 0xda, 0x95,
	0x4b, 0x1a, 0xd4, 0x31, 0xa6, 0x95, 0x21, 0x85, 0x77, 0x05, 0xd7, 0x46, 0x50, 0xe9, 0xbe, 0x5f,
	0x19, 0xf9, 0x4f, 0x9d, 0xcb, 0x9c, 0xb4, 0x8d, 0xf7, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0x8f,
	0x08, 0x91, 0x22, 0x57, 0x24, 0x00, 0x00,
>>>>>>> 6cc6b2daf97682506a855dc9f40c2af6c5e29280
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	// Create creates the given device.
	Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get returns the device matching the given DevEUI.
	Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
	// List returns the available devices.
	List(ctx context.Context, in *ListDeviceRequest, opts ...grpc.CallOption) (*ListDeviceResponse, error)
	// Delete deletes the device matching the given DevEUI.
	Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Update updates the device matching the given DevEUI.
	Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SetDeviceOrg 设置设备归属组织
	SetDeviceOrg(ctx context.Context, in *SetDeviceOrgRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SetDeviceOrg 设置设备归属用户
	SetDeviceUser(ctx context.Context, in *SetDeviceUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SetDeviceOrg 设置设备归属场景
	SetDeviceScene(ctx context.Context, in *SetDeviceSceneRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SetDeviceParent 设置设备归属父节点
	SetDeviceParent(ctx context.Context, in *SetDeviceParentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateKeys creates the given device-keys.
	CreateKeys(ctx context.Context, in *CreateDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetKeys 返回给定 DevEUI 的设备密钥
	GetKeys(ctx context.Context, in *GetDeviceKeysRequest, opts ...grpc.CallOption) (*GetDeviceKeysResponse, error)
	// UpdateKeys updates the device-keys.
	UpdateKeys(ctx context.Context, in *UpdateDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// DeleteKeys deletes the device-keys for the given DevEUI.
	DeleteKeys(ctx context.Context, in *DeleteDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Activate (re)activates the device with the given parameters (for ABP or for importing OTAA activations).
	Activate(ctx context.Context, in *ActivateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Deactivate de-activates the device.
	Deactivate(ctx context.Context, in *DeactivateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetActivation 返回设备的当前激活详细信息 (OTAA and ABP).
	GetActivation(ctx context.Context, in *GetDeviceActivationRequest, opts ...grpc.CallOption) (*GetDeviceActivationResponse, error)
	// GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.
	GetRandomDevAddr(ctx context.Context, in *GetRandomDevAddrRequest, opts ...grpc.CallOption) (*GetRandomDevAddrResponse, error)
	// GetStats returns the device stats.
	GetStats(ctx context.Context, in *GetDeviceStatsRequest, opts ...grpc.CallOption) (*GetDeviceStatsResponse, error)
	// StreamFrameLogs streams the uplink and downlink frame-logs for the given DevEUI.
	//   - These are the raw LoRaWAN frames and this endpoint is intended for debugging only.
	//   - This endpoint does not work from a web-browser.
	StreamFrameLogs(ctx context.Context, in *StreamDeviceFrameLogsRequest, opts ...grpc.CallOption) (DeviceService_StreamFrameLogsClient, error)
	// StreamEventLogs stream the device events (uplink payloads, ACKs, joins, errors).
	//   - This endpoint is intended for debugging only.
	//   - This endpoint does not work from a web-browser.
	StreamEventLogs(ctx context.Context, in *StreamDeviceEventLogsRequest, opts ...grpc.CallOption) (DeviceService_StreamEventLogsClient, error)
	// ClearDeviceNonces deletes the device older activation records for the given DevEUI.
	//   - These are clear older DevNonce records from device activation records in Network Server
	//   - These clears all DevNonce records but keeps latest 20 records for maintain device activation status
	ClearDeviceNonces(ctx context.Context, in *ClearDeviceNoncesRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetLastRxInfo returns the LastRxInfo for the given DevEUI.
	GetLastRxInfo(ctx context.Context, in *GetDeviceLastRxInfoRequest, opts ...grpc.CallOption) (*GetDeviceLastRxInfoResponse, error)
	// ListLastRxByApplicationID lists the devices by the given application ID, sorted by the name of the device.
	ListLastRxByApplicationID(ctx context.Context, in *ListDeviceLastRxRequest, opts ...grpc.CallOption) (*ListLastRxResponse, error)
	//CreateSKeys Sesion key creat the device (for LoRaWAN MAC version  1.0).
	CreateSKeys(ctx context.Context, in *SesionKeyRequest, opts ...grpc.CallOption) (*SesionKeyResponse, error)
}

type deviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeviceServiceClient(cc grpc.ClientConnInterface) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) Create(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) List(ctx context.Context, in *ListDeviceRequest, opts ...grpc.CallOption) (*ListDeviceResponse, error) {
	out := new(ListDeviceResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Update(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) SetDeviceOrg(ctx context.Context, in *SetDeviceOrgRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/SetDeviceOrg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) SetDeviceUser(ctx context.Context, in *SetDeviceUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/SetDeviceUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) SetDeviceScene(ctx context.Context, in *SetDeviceSceneRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/SetDeviceScene", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) SetDeviceParent(ctx context.Context, in *SetDeviceParentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/SetDeviceParent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) CreateKeys(ctx context.Context, in *CreateDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/CreateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetKeys(ctx context.Context, in *GetDeviceKeysRequest, opts ...grpc.CallOption) (*GetDeviceKeysResponse, error) {
	out := new(GetDeviceKeysResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/GetKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) UpdateKeys(ctx context.Context, in *UpdateDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/UpdateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) DeleteKeys(ctx context.Context, in *DeleteDeviceKeysRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/DeleteKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Activate(ctx context.Context, in *ActivateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Activate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Deactivate(ctx context.Context, in *DeactivateDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Deactivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetActivation(ctx context.Context, in *GetDeviceActivationRequest, opts ...grpc.CallOption) (*GetDeviceActivationResponse, error) {
	out := new(GetDeviceActivationResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/GetActivation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetRandomDevAddr(ctx context.Context, in *GetRandomDevAddrRequest, opts ...grpc.CallOption) (*GetRandomDevAddrResponse, error) {
	out := new(GetRandomDevAddrResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/GetRandomDevAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetStats(ctx context.Context, in *GetDeviceStatsRequest, opts ...grpc.CallOption) (*GetDeviceStatsResponse, error) {
	out := new(GetDeviceStatsResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) StreamFrameLogs(ctx context.Context, in *StreamDeviceFrameLogsRequest, opts ...grpc.CallOption) (DeviceService_StreamFrameLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeviceService_serviceDesc.Streams[0], "/api.DeviceService/StreamFrameLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceServiceStreamFrameLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeviceService_StreamFrameLogsClient interface {
	Recv() (*StreamDeviceFrameLogsResponse, error)
	grpc.ClientStream
}

type deviceServiceStreamFrameLogsClient struct {
	grpc.ClientStream
}

func (x *deviceServiceStreamFrameLogsClient) Recv() (*StreamDeviceFrameLogsResponse, error) {
	m := new(StreamDeviceFrameLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deviceServiceClient) StreamEventLogs(ctx context.Context, in *StreamDeviceEventLogsRequest, opts ...grpc.CallOption) (DeviceService_StreamEventLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeviceService_serviceDesc.Streams[1], "/api.DeviceService/StreamEventLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceServiceStreamEventLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeviceService_StreamEventLogsClient interface {
	Recv() (*StreamDeviceEventLogsResponse, error)
	grpc.ClientStream
}

type deviceServiceStreamEventLogsClient struct {
	grpc.ClientStream
}

func (x *deviceServiceStreamEventLogsClient) Recv() (*StreamDeviceEventLogsResponse, error) {
	m := new(StreamDeviceEventLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deviceServiceClient) ClearDeviceNonces(ctx context.Context, in *ClearDeviceNoncesRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DeviceService/ClearDeviceNonces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) GetLastRxInfo(ctx context.Context, in *GetDeviceLastRxInfoRequest, opts ...grpc.CallOption) (*GetDeviceLastRxInfoResponse, error) {
	out := new(GetDeviceLastRxInfoResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/GetLastRxInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) ListLastRxByApplicationID(ctx context.Context, in *ListDeviceLastRxRequest, opts ...grpc.CallOption) (*ListLastRxResponse, error) {
	out := new(ListLastRxResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/ListLastRxByApplicationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) CreateSKeys(ctx context.Context, in *SesionKeyRequest, opts ...grpc.CallOption) (*SesionKeyResponse, error) {
	out := new(SesionKeyResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/CreateSKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	// Create creates the given device.
	Create(context.Context, *CreateDeviceRequest) (*empty.Empty, error)
	// Get returns the device matching the given DevEUI.
	Get(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
	// List returns the available devices.
	List(context.Context, *ListDeviceRequest) (*ListDeviceResponse, error)
	// Delete deletes the device matching the given DevEUI.
	Delete(context.Context, *DeleteDeviceRequest) (*empty.Empty, error)
	// Update updates the device matching the given DevEUI.
	Update(context.Context, *UpdateDeviceRequest) (*empty.Empty, error)
	// SetDeviceOrg 设置设备归属组织
	SetDeviceOrg(context.Context, *SetDeviceOrgRequest) (*empty.Empty, error)
	// SetDeviceOrg 设置设备归属用户
	SetDeviceUser(context.Context, *SetDeviceUserRequest) (*empty.Empty, error)
	// SetDeviceOrg 设置设备归属场景
	SetDeviceScene(context.Context, *SetDeviceSceneRequest) (*empty.Empty, error)
	// SetDeviceParent 设置设备归属父节点
	SetDeviceParent(context.Context, *SetDeviceParentRequest) (*empty.Empty, error)
	// CreateKeys creates the given device-keys.
	CreateKeys(context.Context, *CreateDeviceKeysRequest) (*empty.Empty, error)
	// GetKeys 返回给定 DevEUI 的设备密钥
	GetKeys(context.Context, *GetDeviceKeysRequest) (*GetDeviceKeysResponse, error)
	// UpdateKeys updates the device-keys.
	UpdateKeys(context.Context, *UpdateDeviceKeysRequest) (*empty.Empty, error)
	// DeleteKeys deletes the device-keys for the given DevEUI.
	DeleteKeys(context.Context, *DeleteDeviceKeysRequest) (*empty.Empty, error)
	// Activate (re)activates the device with the given parameters (for ABP or for importing OTAA activations).
	Activate(context.Context, *ActivateDeviceRequest) (*empty.Empty, error)
	// Deactivate de-activates the device.
	Deactivate(context.Context, *DeactivateDeviceRequest) (*empty.Empty, error)
	// GetActivation 返回设备的当前激活详细信息 (OTAA and ABP).
	GetActivation(context.Context, *GetDeviceActivationRequest) (*GetDeviceActivationResponse, error)
	// GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.
	GetRandomDevAddr(context.Context, *GetRandomDevAddrRequest) (*GetRandomDevAddrResponse, error)
	// GetStats returns the device stats.
	GetStats(context.Context, *GetDeviceStatsRequest) (*GetDeviceStatsResponse, error)
	// StreamFrameLogs streams the uplink and downlink frame-logs for the given DevEUI.
	//   - These are the raw LoRaWAN frames and this endpoint is intended for debugging only.
	//   - This endpoint does not work from a web-browser.
	StreamFrameLogs(*StreamDeviceFrameLogsRequest, DeviceService_StreamFrameLogsServer) error
	// StreamEventLogs stream the device events (uplink payloads, ACKs, joins, errors).
	//   - This endpoint is intended for debugging only.
	//   - This endpoint does not work from a web-browser.
	StreamEventLogs(*StreamDeviceEventLogsRequest, DeviceService_StreamEventLogsServer) error
	// ClearDeviceNonces deletes the device older activation records for the given DevEUI.
	//   - These are clear older DevNonce records from device activation records in Network Server
	//   - These clears all DevNonce records but keeps latest 20 records for maintain device activation status
	ClearDeviceNonces(context.Context, *ClearDeviceNoncesRequest) (*empty.Empty, error)
	// GetLastRxInfo returns the LastRxInfo for the given DevEUI.
	GetLastRxInfo(context.Context, *GetDeviceLastRxInfoRequest) (*GetDeviceLastRxInfoResponse, error)
	// ListLastRxByApplicationID lists the devices by the given application ID, sorted by the name of the device.
	ListLastRxByApplicationID(context.Context, *ListDeviceLastRxRequest) (*ListLastRxResponse, error)
	//CreateSKeys Sesion key creat the device (for LoRaWAN MAC version  1.0).
	CreateSKeys(context.Context, *SesionKeyRequest) (*SesionKeyResponse, error)
}

// UnimplementedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServiceServer struct {
}

func (*UnimplementedDeviceServiceServer) Create(ctx context.Context, req *CreateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDeviceServiceServer) Get(ctx context.Context, req *GetDeviceRequest) (*GetDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDeviceServiceServer) List(ctx context.Context, req *ListDeviceRequest) (*ListDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedDeviceServiceServer) Delete(ctx context.Context, req *DeleteDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedDeviceServiceServer) Update(ctx context.Context, req *UpdateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDeviceServiceServer) SetDeviceOrg(ctx context.Context, req *SetDeviceOrgRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceOrg not implemented")
}
func (*UnimplementedDeviceServiceServer) SetDeviceUser(ctx context.Context, req *SetDeviceUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceUser not implemented")
}
func (*UnimplementedDeviceServiceServer) SetDeviceScene(ctx context.Context, req *SetDeviceSceneRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceScene not implemented")
}
func (*UnimplementedDeviceServiceServer) SetDeviceParent(ctx context.Context, req *SetDeviceParentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceParent not implemented")
}
func (*UnimplementedDeviceServiceServer) CreateKeys(ctx context.Context, req *CreateDeviceKeysRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) GetKeys(ctx context.Context, req *GetDeviceKeysRequest) (*GetDeviceKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) UpdateKeys(ctx context.Context, req *UpdateDeviceKeysRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) DeleteKeys(ctx context.Context, req *DeleteDeviceKeysRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKeys not implemented")
}
func (*UnimplementedDeviceServiceServer) Activate(ctx context.Context, req *ActivateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Activate not implemented")
}
func (*UnimplementedDeviceServiceServer) Deactivate(ctx context.Context, req *DeactivateDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deactivate not implemented")
}
func (*UnimplementedDeviceServiceServer) GetActivation(ctx context.Context, req *GetDeviceActivationRequest) (*GetDeviceActivationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivation not implemented")
}
func (*UnimplementedDeviceServiceServer) GetRandomDevAddr(ctx context.Context, req *GetRandomDevAddrRequest) (*GetRandomDevAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomDevAddr not implemented")
}
func (*UnimplementedDeviceServiceServer) GetStats(ctx context.Context, req *GetDeviceStatsRequest) (*GetDeviceStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStats not implemented")
}
func (*UnimplementedDeviceServiceServer) StreamFrameLogs(req *StreamDeviceFrameLogsRequest, srv DeviceService_StreamFrameLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamFrameLogs not implemented")
}
func (*UnimplementedDeviceServiceServer) StreamEventLogs(req *StreamDeviceEventLogsRequest, srv DeviceService_StreamEventLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamEventLogs not implemented")
}
func (*UnimplementedDeviceServiceServer) ClearDeviceNonces(ctx context.Context, req *ClearDeviceNoncesRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearDeviceNonces not implemented")
}
func (*UnimplementedDeviceServiceServer) GetLastRxInfo(ctx context.Context, req *GetDeviceLastRxInfoRequest) (*GetDeviceLastRxInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastRxInfo not implemented")
}
func (*UnimplementedDeviceServiceServer) ListLastRxByApplicationID(ctx context.Context, req *ListDeviceLastRxRequest) (*ListLastRxResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLastRxByApplicationID not implemented")
}
func (*UnimplementedDeviceServiceServer) CreateSKeys(ctx context.Context, req *SesionKeyRequest) (*SesionKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSKeys not implemented")
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Create(ctx, req.(*CreateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Get(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).List(ctx, req.(*ListDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Delete(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Update(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_SetDeviceOrg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceOrgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).SetDeviceOrg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/SetDeviceOrg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).SetDeviceOrg(ctx, req.(*SetDeviceOrgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_SetDeviceUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).SetDeviceUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/SetDeviceUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).SetDeviceUser(ctx, req.(*SetDeviceUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_SetDeviceScene_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceSceneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).SetDeviceScene(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/SetDeviceScene",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).SetDeviceScene(ctx, req.(*SetDeviceSceneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_SetDeviceParent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceParentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).SetDeviceParent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/SetDeviceParent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).SetDeviceParent(ctx, req.(*SetDeviceParentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_CreateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).CreateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/CreateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).CreateKeys(ctx, req.(*CreateDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/GetKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetKeys(ctx, req.(*GetDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_UpdateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).UpdateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/UpdateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).UpdateKeys(ctx, req.(*UpdateDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_DeleteKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).DeleteKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/DeleteKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).DeleteKeys(ctx, req.(*DeleteDeviceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Activate(ctx, req.(*ActivateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Deactivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Deactivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Deactivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Deactivate(ctx, req.(*DeactivateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetActivation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetActivation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/GetActivation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetActivation(ctx, req.(*GetDeviceActivationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetRandomDevAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRandomDevAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetRandomDevAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/GetRandomDevAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetRandomDevAddr(ctx, req.(*GetRandomDevAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetStats(ctx, req.(*GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_StreamFrameLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamDeviceFrameLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceServiceServer).StreamFrameLogs(m, &deviceServiceStreamFrameLogsServer{stream})
}

type DeviceService_StreamFrameLogsServer interface {
	Send(*StreamDeviceFrameLogsResponse) error
	grpc.ServerStream
}

type deviceServiceStreamFrameLogsServer struct {
	grpc.ServerStream
}

func (x *deviceServiceStreamFrameLogsServer) Send(m *StreamDeviceFrameLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DeviceService_StreamEventLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamDeviceEventLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeviceServiceServer).StreamEventLogs(m, &deviceServiceStreamEventLogsServer{stream})
}

type DeviceService_StreamEventLogsServer interface {
	Send(*StreamDeviceEventLogsResponse) error
	grpc.ServerStream
}

type deviceServiceStreamEventLogsServer struct {
	grpc.ServerStream
}

func (x *deviceServiceStreamEventLogsServer) Send(m *StreamDeviceEventLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DeviceService_ClearDeviceNonces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearDeviceNoncesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).ClearDeviceNonces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/ClearDeviceNonces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).ClearDeviceNonces(ctx, req.(*ClearDeviceNoncesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_GetLastRxInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceLastRxInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetLastRxInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/GetLastRxInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetLastRxInfo(ctx, req.(*GetDeviceLastRxInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_ListLastRxByApplicationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceLastRxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).ListLastRxByApplicationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/ListLastRxByApplicationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).ListLastRxByApplicationID(ctx, req.(*ListDeviceLastRxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_CreateSKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SesionKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).CreateSKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/CreateSKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).CreateSKeys(ctx, req.(*SesionKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DeviceService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DeviceService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _DeviceService_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DeviceService_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DeviceService_Update_Handler,
		},
		{
			MethodName: "SetDeviceOrg",
			Handler:    _DeviceService_SetDeviceOrg_Handler,
		},
		{
			MethodName: "SetDeviceUser",
			Handler:    _DeviceService_SetDeviceUser_Handler,
		},
		{
			MethodName: "SetDeviceScene",
			Handler:    _DeviceService_SetDeviceScene_Handler,
		},
		{
			MethodName: "SetDeviceParent",
			Handler:    _DeviceService_SetDeviceParent_Handler,
		},
		{
			MethodName: "CreateKeys",
			Handler:    _DeviceService_CreateKeys_Handler,
		},
		{
			MethodName: "GetKeys",
			Handler:    _DeviceService_GetKeys_Handler,
		},
		{
			MethodName: "UpdateKeys",
			Handler:    _DeviceService_UpdateKeys_Handler,
		},
		{
			MethodName: "DeleteKeys",
			Handler:    _DeviceService_DeleteKeys_Handler,
		},
		{
			MethodName: "Activate",
			Handler:    _DeviceService_Activate_Handler,
		},
		{
			MethodName: "Deactivate",
			Handler:    _DeviceService_Deactivate_Handler,
		},
		{
			MethodName: "GetActivation",
			Handler:    _DeviceService_GetActivation_Handler,
		},
		{
			MethodName: "GetRandomDevAddr",
			Handler:    _DeviceService_GetRandomDevAddr_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _DeviceService_GetStats_Handler,
		},
		{
			MethodName: "ClearDeviceNonces",
			Handler:    _DeviceService_ClearDeviceNonces_Handler,
		},
		{
			MethodName: "GetLastRxInfo",
			Handler:    _DeviceService_GetLastRxInfo_Handler,
		},
		{
			MethodName: "ListLastRxByApplicationID",
			Handler:    _DeviceService_ListLastRxByApplicationID_Handler,
		},
		{
			MethodName: "CreateSKeys",
			Handler:    _DeviceService_CreateSKeys_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamFrameLogs",
			Handler:       _DeviceService_StreamFrameLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamEventLogs",
			Handler:       _DeviceService_StreamEventLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "as/external/api/device.proto",
}
