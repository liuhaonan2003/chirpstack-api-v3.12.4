// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/reportDay.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportDay struct {
	Id                      int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReportDetailIds         string   `protobuf:"bytes,2,opt,name=report_detail_ids,json=reportDetailIds,proto3" json:"report_detail_ids,omitempty"`
	GwMac                   string   `protobuf:"bytes,3,opt,name=gw_mac,json=gwMac,proto3" json:"gw_mac,omitempty"`
	DevId                   string   `protobuf:"bytes,4,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	DevEui                  string   `protobuf:"bytes,5,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	Amount                  float64  `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	ReportTime              int64    `protobuf:"varint,7,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`
	Year                    int32    `protobuf:"varint,8,opt,name=year,proto3" json:"year,omitempty"`
	Month                   int32    `protobuf:"varint,9,opt,name=month,proto3" json:"month,omitempty"`
	Day                     int32    `protobuf:"varint,10,opt,name=day,proto3" json:"day,omitempty"`
	ReportGwDayId           int64    `protobuf:"varint,11,opt,name=report_gw_day_id,json=reportGwDayId,proto3" json:"report_gw_day_id,omitempty"`
	ReportWeekId            int64    `protobuf:"varint,12,opt,name=report_week_id,json=reportWeekId,proto3" json:"report_week_id,omitempty"`
	ReportMonthId           int64    `protobuf:"varint,13,opt,name=report_month_id,json=reportMonthId,proto3" json:"report_month_id,omitempty"`
	ReportOrganizationDayId int64    `protobuf:"varint,14,opt,name=report_organization_day_id,json=reportOrganizationDayId,proto3" json:"report_organization_day_id,omitempty"`
	ReportCheckDayId        int64    `protobuf:"varint,15,opt,name=report_check_day_id,json=reportCheckDayId,proto3" json:"report_check_day_id,omitempty"`
	SourceId                int64    `protobuf:"varint,16,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Parent                  int64    `protobuf:"varint,17,opt,name=parent,proto3" json:"parent,omitempty"`
	OrganizationId          int64    `protobuf:"varint,18,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId                  int64    `protobuf:"varint,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scene                   int32    `protobuf:"varint,20,opt,name=scene,proto3" json:"scene,omitempty"`
	Status                  int32    `protobuf:"varint,21,opt,name=status,proto3" json:"status,omitempty"`
	Author                  string   `protobuf:"bytes,22,opt,name=author,proto3" json:"author,omitempty"`
	Remark                  string   `protobuf:"bytes,25,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ReportDay) Reset()         { *m = ReportDay{} }
func (m *ReportDay) String() string { return proto.CompactTextString(m) }
func (*ReportDay) ProtoMessage()    {}
func (*ReportDay) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{0}
}

func (m *ReportDay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportDay.Unmarshal(m, b)
}
func (m *ReportDay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportDay.Marshal(b, m, deterministic)
}
func (m *ReportDay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportDay.Merge(m, src)
}
func (m *ReportDay) XXX_Size() int {
	return xxx_messageInfo_ReportDay.Size(m)
}
func (m *ReportDay) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportDay.DiscardUnknown(m)
}

var xxx_messageInfo_ReportDay proto.InternalMessageInfo

func (m *ReportDay) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReportDay) GetReportDetailIds() string {
	if m != nil {
		return m.ReportDetailIds
	}
	return ""
}

func (m *ReportDay) GetGwMac() string {
	if m != nil {
		return m.GwMac
	}
	return ""
}

func (m *ReportDay) GetDevId() string {
	if m != nil {
		return m.DevId
	}
	return ""
}

func (m *ReportDay) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *ReportDay) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ReportDay) GetReportTime() int64 {
	if m != nil {
		return m.ReportTime
	}
	return 0
}

func (m *ReportDay) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *ReportDay) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *ReportDay) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *ReportDay) GetReportGwDayId() int64 {
	if m != nil {
		return m.ReportGwDayId
	}
	return 0
}

func (m *ReportDay) GetReportWeekId() int64 {
	if m != nil {
		return m.ReportWeekId
	}
	return 0
}

func (m *ReportDay) GetReportMonthId() int64 {
	if m != nil {
		return m.ReportMonthId
	}
	return 0
}

func (m *ReportDay) GetReportOrganizationDayId() int64 {
	if m != nil {
		return m.ReportOrganizationDayId
	}
	return 0
}

func (m *ReportDay) GetReportCheckDayId() int64 {
	if m != nil {
		return m.ReportCheckDayId
	}
	return 0
}

func (m *ReportDay) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *ReportDay) GetParent() int64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *ReportDay) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ReportDay) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReportDay) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

func (m *ReportDay) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReportDay) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ReportDay) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type ReportDayListItem struct {
	// User ID.
	// Will be set automatically on create.
	Id                      int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReportDetailIds         string  `protobuf:"bytes,2,opt,name=report_detail_ids,json=reportDetailIds,proto3" json:"report_detail_ids,omitempty"`
	GwMac                   string  `protobuf:"bytes,3,opt,name=gw_mac,json=gwMac,proto3" json:"gw_mac,omitempty"`
	DevId                   string  `protobuf:"bytes,4,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	DevEui                  string  `protobuf:"bytes,5,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	Amount                  float64 `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	ReportTime              int64   `protobuf:"varint,7,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`
	Year                    int32   `protobuf:"varint,8,opt,name=year,proto3" json:"year,omitempty"`
	Month                   int32   `protobuf:"varint,9,opt,name=month,proto3" json:"month,omitempty"`
	Day                     int32   `protobuf:"varint,10,opt,name=day,proto3" json:"day,omitempty"`
	ReportGwDayId           int64   `protobuf:"varint,11,opt,name=report_gw_day_id,json=reportGwDayId,proto3" json:"report_gw_day_id,omitempty"`
	ReportWeekId            int64   `protobuf:"varint,12,opt,name=report_week_id,json=reportWeekId,proto3" json:"report_week_id,omitempty"`
	ReportMonthId           int64   `protobuf:"varint,13,opt,name=report_month_id,json=reportMonthId,proto3" json:"report_month_id,omitempty"`
	ReportOrganizationDayId int64   `protobuf:"varint,14,opt,name=report_organization_day_id,json=reportOrganizationDayId,proto3" json:"report_organization_day_id,omitempty"`
	ReportCheckDayId        int64   `protobuf:"varint,15,opt,name=report_check_day_id,json=reportCheckDayId,proto3" json:"report_check_day_id,omitempty"`
	SourceId                int64   `protobuf:"varint,16,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Parent                  int64   `protobuf:"varint,17,opt,name=parent,proto3" json:"parent,omitempty"`
	OrganizationId          int64   `protobuf:"varint,18,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId                  int64   `protobuf:"varint,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scene                   int32   `protobuf:"varint,20,opt,name=scene,proto3" json:"scene,omitempty"`
	Status                  int32   `protobuf:"varint,21,opt,name=status,proto3" json:"status,omitempty"`
	Author                  string  `protobuf:"bytes,22,opt,name=author,proto3" json:"author,omitempty"`
	Remark                  string  `protobuf:"bytes,25,opt,name=remark,proto3" json:"remark,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReportDayListItem) Reset()         { *m = ReportDayListItem{} }
func (m *ReportDayListItem) String() string { return proto.CompactTextString(m) }
func (*ReportDayListItem) ProtoMessage()    {}
func (*ReportDayListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{1}
}

func (m *ReportDayListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportDayListItem.Unmarshal(m, b)
}
func (m *ReportDayListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportDayListItem.Marshal(b, m, deterministic)
}
func (m *ReportDayListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportDayListItem.Merge(m, src)
}
func (m *ReportDayListItem) XXX_Size() int {
	return xxx_messageInfo_ReportDayListItem.Size(m)
}
func (m *ReportDayListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportDayListItem.DiscardUnknown(m)
}

var xxx_messageInfo_ReportDayListItem proto.InternalMessageInfo

func (m *ReportDayListItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReportDayListItem) GetReportDetailIds() string {
	if m != nil {
		return m.ReportDetailIds
	}
	return ""
}

func (m *ReportDayListItem) GetGwMac() string {
	if m != nil {
		return m.GwMac
	}
	return ""
}

func (m *ReportDayListItem) GetDevId() string {
	if m != nil {
		return m.DevId
	}
	return ""
}

func (m *ReportDayListItem) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *ReportDayListItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ReportDayListItem) GetReportTime() int64 {
	if m != nil {
		return m.ReportTime
	}
	return 0
}

func (m *ReportDayListItem) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *ReportDayListItem) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *ReportDayListItem) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *ReportDayListItem) GetReportGwDayId() int64 {
	if m != nil {
		return m.ReportGwDayId
	}
	return 0
}

func (m *ReportDayListItem) GetReportWeekId() int64 {
	if m != nil {
		return m.ReportWeekId
	}
	return 0
}

func (m *ReportDayListItem) GetReportMonthId() int64 {
	if m != nil {
		return m.ReportMonthId
	}
	return 0
}

func (m *ReportDayListItem) GetReportOrganizationDayId() int64 {
	if m != nil {
		return m.ReportOrganizationDayId
	}
	return 0
}

func (m *ReportDayListItem) GetReportCheckDayId() int64 {
	if m != nil {
		return m.ReportCheckDayId
	}
	return 0
}

func (m *ReportDayListItem) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *ReportDayListItem) GetParent() int64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *ReportDayListItem) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ReportDayListItem) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReportDayListItem) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

func (m *ReportDayListItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReportDayListItem) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ReportDayListItem) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReportDayListItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ReportDayListItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateReportDayRequest struct {
	// Test object to create.
	ReportDay            *ReportDay `protobuf:"bytes,1,opt,name=reportDay,proto3" json:"reportDay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateReportDayRequest) Reset()         { *m = CreateReportDayRequest{} }
func (m *CreateReportDayRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReportDayRequest) ProtoMessage()    {}
func (*CreateReportDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{2}
}

func (m *CreateReportDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReportDayRequest.Unmarshal(m, b)
}
func (m *CreateReportDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReportDayRequest.Marshal(b, m, deterministic)
}
func (m *CreateReportDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReportDayRequest.Merge(m, src)
}
func (m *CreateReportDayRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReportDayRequest.Size(m)
}
func (m *CreateReportDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReportDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReportDayRequest proto.InternalMessageInfo

func (m *CreateReportDayRequest) GetReportDay() *ReportDay {
	if m != nil {
		return m.ReportDay
	}
	return nil
}

type CreateReportDayResponse struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReportDayResponse) Reset()         { *m = CreateReportDayResponse{} }
func (m *CreateReportDayResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReportDayResponse) ProtoMessage()    {}
func (*CreateReportDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{3}
}

func (m *CreateReportDayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReportDayResponse.Unmarshal(m, b)
}
func (m *CreateReportDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReportDayResponse.Marshal(b, m, deterministic)
}
func (m *CreateReportDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReportDayResponse.Merge(m, src)
}
func (m *CreateReportDayResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReportDayResponse.Size(m)
}
func (m *CreateReportDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReportDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReportDayResponse proto.InternalMessageInfo

func (m *CreateReportDayResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetReportDayRequest struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReportDayRequest) Reset()         { *m = GetReportDayRequest{} }
func (m *GetReportDayRequest) String() string { return proto.CompactTextString(m) }
func (*GetReportDayRequest) ProtoMessage()    {}
func (*GetReportDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{4}
}

func (m *GetReportDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportDayRequest.Unmarshal(m, b)
}
func (m *GetReportDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportDayRequest.Marshal(b, m, deterministic)
}
func (m *GetReportDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportDayRequest.Merge(m, src)
}
func (m *GetReportDayRequest) XXX_Size() int {
	return xxx_messageInfo_GetReportDayRequest.Size(m)
}
func (m *GetReportDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportDayRequest proto.InternalMessageInfo

func (m *GetReportDayRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetReportDayResponse struct {
	// Test object.
	ReportDay *ReportDay `protobuf:"bytes,1,opt,name=reportDay,proto3" json:"reportDay,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetReportDayResponse) Reset()         { *m = GetReportDayResponse{} }
func (m *GetReportDayResponse) String() string { return proto.CompactTextString(m) }
func (*GetReportDayResponse) ProtoMessage()    {}
func (*GetReportDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{5}
}

func (m *GetReportDayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportDayResponse.Unmarshal(m, b)
}
func (m *GetReportDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportDayResponse.Marshal(b, m, deterministic)
}
func (m *GetReportDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportDayResponse.Merge(m, src)
}
func (m *GetReportDayResponse) XXX_Size() int {
	return xxx_messageInfo_GetReportDayResponse.Size(m)
}
func (m *GetReportDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportDayResponse proto.InternalMessageInfo

func (m *GetReportDayResponse) GetReportDay() *ReportDay {
	if m != nil {
		return m.ReportDay
	}
	return nil
}

func (m *GetReportDayResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetReportDayResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type UpdateReportDayRequest struct {
	// Test object to update.
	ReportDay            *ReportDay `protobuf:"bytes,1,opt,name=reportDay,proto3" json:"reportDay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateReportDayRequest) Reset()         { *m = UpdateReportDayRequest{} }
func (m *UpdateReportDayRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateReportDayRequest) ProtoMessage()    {}
func (*UpdateReportDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{6}
}

func (m *UpdateReportDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReportDayRequest.Unmarshal(m, b)
}
func (m *UpdateReportDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReportDayRequest.Marshal(b, m, deterministic)
}
func (m *UpdateReportDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReportDayRequest.Merge(m, src)
}
func (m *UpdateReportDayRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateReportDayRequest.Size(m)
}
func (m *UpdateReportDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReportDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReportDayRequest proto.InternalMessageInfo

func (m *UpdateReportDayRequest) GetReportDay() *ReportDay {
	if m != nil {
		return m.ReportDay
	}
	return nil
}

type DeleteReportDayRequest struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReportDayRequest) Reset()         { *m = DeleteReportDayRequest{} }
func (m *DeleteReportDayRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReportDayRequest) ProtoMessage()    {}
func (*DeleteReportDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{7}
}

func (m *DeleteReportDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReportDayRequest.Unmarshal(m, b)
}
func (m *DeleteReportDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReportDayRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReportDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReportDayRequest.Merge(m, src)
}
func (m *DeleteReportDayRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReportDayRequest.Size(m)
}
func (m *DeleteReportDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReportDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReportDayRequest proto.InternalMessageInfo

func (m *DeleteReportDayRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListReportDayRequest struct {
	// Max number of items to return.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReportDayRequest) Reset()         { *m = ListReportDayRequest{} }
func (m *ListReportDayRequest) String() string { return proto.CompactTextString(m) }
func (*ListReportDayRequest) ProtoMessage()    {}
func (*ListReportDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{8}
}

func (m *ListReportDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReportDayRequest.Unmarshal(m, b)
}
func (m *ListReportDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReportDayRequest.Marshal(b, m, deterministic)
}
func (m *ListReportDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReportDayRequest.Merge(m, src)
}
func (m *ListReportDayRequest) XXX_Size() int {
	return xxx_messageInfo_ListReportDayRequest.Size(m)
}
func (m *ListReportDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReportDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReportDayRequest proto.InternalMessageInfo

func (m *ListReportDayRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListReportDayRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListReportDayResponse struct {
	// Total number of test.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Test within the result-set.
	Result               []*ReportDayListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListReportDayResponse) Reset()         { *m = ListReportDayResponse{} }
func (m *ListReportDayResponse) String() string { return proto.CompactTextString(m) }
func (*ListReportDayResponse) ProtoMessage()    {}
func (*ListReportDayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_822db561e54ee36f, []int{9}
}

func (m *ListReportDayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReportDayResponse.Unmarshal(m, b)
}
func (m *ListReportDayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReportDayResponse.Marshal(b, m, deterministic)
}
func (m *ListReportDayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReportDayResponse.Merge(m, src)
}
func (m *ListReportDayResponse) XXX_Size() int {
	return xxx_messageInfo_ListReportDayResponse.Size(m)
}
func (m *ListReportDayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReportDayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReportDayResponse proto.InternalMessageInfo

func (m *ListReportDayResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListReportDayResponse) GetResult() []*ReportDayListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*ReportDay)(nil), "api.ReportDay")
	proto.RegisterType((*ReportDayListItem)(nil), "api.ReportDayListItem")
	proto.RegisterType((*CreateReportDayRequest)(nil), "api.CreateReportDayRequest")
	proto.RegisterType((*CreateReportDayResponse)(nil), "api.CreateReportDayResponse")
	proto.RegisterType((*GetReportDayRequest)(nil), "api.GetReportDayRequest")
	proto.RegisterType((*GetReportDayResponse)(nil), "api.GetReportDayResponse")
	proto.RegisterType((*UpdateReportDayRequest)(nil), "api.UpdateReportDayRequest")
	proto.RegisterType((*DeleteReportDayRequest)(nil), "api.DeleteReportDayRequest")
	proto.RegisterType((*ListReportDayRequest)(nil), "api.ListReportDayRequest")
	proto.RegisterType((*ListReportDayResponse)(nil), "api.ListReportDayResponse")
}

func init() {
	proto.RegisterFile("as/external/api/reportDay.proto", fileDescriptor_822db561e54ee36f)
}

var fileDescriptor_822db561e54ee36f = []byte{
	// 951 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xd6, 0xda, 0xb1, 0x5b, 0x1f, 0xb7, 0x4e, 0x32, 0x71, 0xec, 0xe9, 0x26, 0x22, 0xc6, 0xfc,
	0xd4, 0x8d, 0xc8, 0x5a, 0x4a, 0x2f, 0x10, 0x70, 0xd5, 0x26, 0x25, 0xb2, 0x44, 0x45, 0x65, 0xca,
	0x8f, 0xe0, 0xc2, 0x9a, 0xec, 0x4c, 0xec, 0x91, 0xbd, 0x3b, 0xcb, 0xce, 0x6c, 0x8c, 0x41, 0xbd,
	0xe1, 0x15, 0x78, 0x1a, 0xe0, 0x31, 0x78, 0x05, 0x2e, 0x79, 0x08, 0x34, 0x3f, 0x76, 0x92, 0xf5,
	0x22, 0x54, 0xb8, 0xaa, 0x94, 0x3b, 0x9f, 0x6f, 0xbe, 0xf3, 0x9d, 0x33, 0xe7, 0x9c, 0x3d, 0x1e,
	0x38, 0x20, 0xb2, 0xcf, 0x7e, 0x50, 0x2c, 0x8d, 0xc9, 0xac, 0x4f, 0x12, 0xde, 0x4f, 0x59, 0x22,
	0x52, 0x75, 0x4a, 0x16, 0x41, 0x92, 0x0a, 0x25, 0x50, 0x99, 0x24, 0xdc, 0xdf, 0x1f, 0x0b, 0x31,
	0x9e, 0x31, 0x43, 0x20, 0x71, 0x2c, 0x14, 0x51, 0x5c, 0xc4, 0xd2, 0x52, 0xfc, 0x03, 0x77, 0x6a,
	0xac, 0xf3, 0xec, 0xa2, 0xaf, 0x78, 0xc4, 0xa4, 0x22, 0x51, 0xe2, 0x08, 0x7b, 0x79, 0x02, 0x8b,
	0x12, 0xe5, 0x02, 0x74, 0x7f, 0xaf, 0x40, 0x6d, 0xb8, 0x0c, 0x8a, 0x1a, 0x50, 0xe2, 0x14, 0x7b,
	0x1d, 0xaf, 0x57, 0x1e, 0x96, 0x38, 0x45, 0x87, 0xb0, 0x6d, 0x33, 0x1a, 0x51, 0xa6, 0x08, 0x9f,
	0x8d, 0x38, 0x95, 0xb8, 0xd4, 0xf1, 0x7a, 0xb5, 0xe1, 0xa6, 0x4b, 0xd5, 0xe0, 0x03, 0x2a, 0xd1,
	0x2e, 0x54, 0xc7, 0xf3, 0x51, 0x44, 0x42, 0x5c, 0x36, 0x84, 0xca, 0x78, 0xfe, 0x9c, 0x84, 0x1a,
	0xa6, 0xec, 0x72, 0xc4, 0x29, 0xde, 0xb0, 0x30, 0x65, 0x97, 0x03, 0x8a, 0xda, 0x70, 0x47, 0xc3,
	0x2c, 0xe3, 0xb8, 0x62, 0x70, 0xcd, 0x7a, 0x96, 0x71, 0xd4, 0x82, 0x2a, 0x89, 0x44, 0x16, 0x2b,
	0x5c, 0xed, 0x78, 0x3d, 0x6f, 0xe8, 0x2c, 0x74, 0x00, 0x75, 0x97, 0x8a, 0xbe, 0x1f, 0xbe, 0x63,
	0x72, 0x04, 0x0b, 0xbd, 0xe4, 0x11, 0x43, 0x08, 0x36, 0x16, 0x8c, 0xa4, 0xf8, 0x6e, 0xc7, 0xeb,
	0x55, 0x86, 0xe6, 0x37, 0x6a, 0x42, 0x25, 0x12, 0xb1, 0x9a, 0xe0, 0x9a, 0x01, 0xad, 0x81, 0xb6,
	0xa0, 0x4c, 0xc9, 0x02, 0x83, 0xc1, 0xf4, 0x4f, 0xf4, 0x10, 0xb6, 0x9c, 0xf8, 0x78, 0x3e, 0xa2,
	0x64, 0xa1, 0xd3, 0xad, 0x9b, 0x08, 0xf7, 0x2d, 0x7e, 0x36, 0x3f, 0x25, 0x8b, 0x01, 0x45, 0xef,
	0x42, 0xc3, 0x11, 0xe7, 0x8c, 0x4d, 0x35, 0xed, 0x9e, 0xa1, 0xdd, 0xb3, 0xe8, 0xd7, 0x8c, 0x4d,
	0x07, 0x14, 0xbd, 0x0f, 0xae, 0x3a, 0x23, 0x13, 0x50, 0xd3, 0xee, 0x5f, 0x57, 0x7b, 0xae, 0xd1,
	0x01, 0x45, 0x9f, 0x80, 0xef, 0x78, 0x22, 0x1d, 0x93, 0x98, 0xff, 0x68, 0x1a, 0xbb, 0x4c, 0xa0,
	0x61, 0x5c, 0xda, 0x96, 0xf1, 0xf9, 0x35, 0x82, 0x4d, 0xe5, 0x08, 0x76, 0x9c, 0x73, 0x38, 0x61,
	0xe1, 0x74, 0xe9, 0xb5, 0x69, 0xbc, 0xdc, 0x75, 0x4e, 0xf4, 0x89, 0xa5, 0xef, 0x41, 0x4d, 0x8a,
	0x2c, 0x0d, 0x99, 0x26, 0x6d, 0x19, 0xd2, 0x5d, 0x0b, 0x0c, 0xa8, 0x2e, 0x7a, 0x42, 0x52, 0x16,
	0x2b, 0xbc, 0x6d, 0x4e, 0x9c, 0x85, 0x1e, 0xc2, 0xe6, 0x8d, 0xcc, 0x38, 0xc5, 0xc8, 0x10, 0x1a,
	0xd7, 0x61, 0xdb, 0xce, 0x4c, 0xb2, 0x54, 0x13, 0x76, 0xac, 0x82, 0x36, 0x07, 0x54, 0x77, 0x40,
	0x86, 0x2c, 0x66, 0xb8, 0x69, 0x3b, 0x60, 0x0c, 0x1d, 0x4f, 0x2a, 0xa2, 0x32, 0x89, 0x77, 0x0d,
	0xec, 0x2c, 0xd3, 0xfc, 0x4c, 0x4d, 0x44, 0x8a, 0x5b, 0x76, 0x28, 0xac, 0xa5, 0xf1, 0x94, 0x45,
	0x24, 0x9d, 0xe2, 0x07, 0x16, 0xb7, 0x56, 0xf7, 0xd7, 0x2a, 0x6c, 0xaf, 0xa6, 0xf7, 0x33, 0x2e,
	0xd5, 0x40, 0xb1, 0xe8, 0x76, 0x8a, 0x6f, 0xa7, 0xf8, 0x4d, 0x9a, 0x62, 0xf4, 0x11, 0x40, 0x98,
	0x32, 0xa2, 0x18, 0x1d, 0x11, 0x85, 0xdb, 0x1d, 0xaf, 0x57, 0x3f, 0xf6, 0x03, 0xbb, 0xb5, 0x83,
	0xe5, 0xd6, 0x0e, 0x5e, 0x2e, 0xd7, 0xfa, 0xb0, 0xe6, 0xd8, 0x4f, 0x94, 0x76, 0xcd, 0x12, 0xba,
	0x74, 0xc5, 0xff, 0xee, 0xea, 0xd8, 0x4f, 0x54, 0xf7, 0x53, 0x68, 0x9d, 0x18, 0x9d, 0xd5, 0x07,
	0x34, 0x64, 0xdf, 0x67, 0x4c, 0x2a, 0xf4, 0x01, 0xd4, 0x56, 0xff, 0x43, 0xe6, 0x33, 0xaa, 0x1f,
	0x37, 0x02, 0x92, 0xf0, 0xe0, 0x8a, 0x79, 0x45, 0xe8, 0x3e, 0x82, 0xf6, 0x9a, 0x8e, 0x4c, 0x44,
	0x2c, 0x59, 0xfe, 0x43, 0xec, 0xbe, 0x07, 0x3b, 0x67, 0x4c, 0xad, 0xc5, 0xcb, 0xd3, 0x7e, 0xf3,
	0xa0, 0x79, 0x93, 0xe7, 0xf4, 0x5e, 0x2b, 0xb1, 0x5c, 0x59, 0x4b, 0xff, 0xbd, 0xac, 0xe5, 0xd7,
	0x2c, 0xeb, 0x97, 0xc6, 0xf8, 0x9f, 0x65, 0xed, 0x41, 0xeb, 0x94, 0xcd, 0x58, 0x81, 0x4e, 0xbe,
	0x5c, 0xa7, 0xd0, 0xd4, 0xab, 0x6f, 0x8d, 0xd7, 0x84, 0xca, 0x8c, 0x47, 0x5c, 0x39, 0xaa, 0x35,
	0xf4, 0x10, 0x8a, 0x8b, 0x0b, 0xc9, 0x6c, 0x45, 0xca, 0x43, 0x67, 0x75, 0x27, 0xb0, 0x9b, 0x53,
	0x71, 0x45, 0x3f, 0x80, 0xba, 0x12, 0x8a, 0xcc, 0x46, 0xa1, 0xd9, 0x67, 0x56, 0x0c, 0x0c, 0x74,
	0x62, 0x76, 0x5a, 0xa0, 0xc7, 0x5a, 0x66, 0x33, 0xad, 0x58, 0xee, 0xd5, 0x8f, 0x5b, 0x37, 0x2f,
	0xb5, 0x5c, 0xcb, 0x43, 0xc7, 0x3a, 0xfe, 0xab, 0x0c, 0x5b, 0xab, 0xd3, 0x2f, 0x58, 0x7a, 0xc9,
	0x43, 0x86, 0x46, 0x50, 0xb5, 0x53, 0x84, 0xf6, 0x8c, 0x7b, 0xf1, 0x68, 0xfa, 0xfb, 0xc5, 0x87,
	0x36, 0xd5, 0xae, 0xff, 0xf3, 0x1f, 0x7f, 0xfe, 0x52, 0x6a, 0x76, 0x37, 0xaf, 0xbd, 0xa5, 0x8e,
	0x28, 0x59, 0x7c, 0xec, 0x1d, 0xa2, 0x6f, 0xa0, 0x7c, 0xc6, 0x14, 0xc2, 0x46, 0xa0, 0x60, 0x0a,
	0xfd, 0x07, 0x05, 0x27, 0x4e, 0x77, 0xdf, 0xe8, 0xb6, 0x50, 0x33, 0xa7, 0xdb, 0xff, 0x89, 0xd3,
	0x57, 0x68, 0x02, 0x55, 0xdb, 0x71, 0x97, 0x7a, 0x71, 0xfb, 0xfd, 0xd6, 0xda, 0xfc, 0x3c, 0xd3,
	0xef, 0xb0, 0xee, 0x23, 0x23, 0xfe, 0x8e, 0xff, 0xd6, 0x9a, 0xf8, 0xd5, 0x63, 0x90, 0xd3, 0x57,
	0xfa, 0x0e, 0xdf, 0x41, 0xd5, 0xce, 0x84, 0x8b, 0x54, 0x3c, 0x20, 0xff, 0x18, 0xc9, 0x5d, 0xe3,
	0xb0, 0xf8, 0x1a, 0x5f, 0xc1, 0x86, 0x6e, 0x15, 0xb2, 0x75, 0x28, 0x9a, 0x28, 0xdf, 0x2f, 0x3a,
	0x72, 0x35, 0x6a, 0x1b, 0xf1, 0x6d, 0x94, 0xaf, 0xfd, 0xd3, 0x18, 0xde, 0xe6, 0x22, 0x08, 0x27,
	0x3c, 0x4d, 0xa4, 0x22, 0xe1, 0xd4, 0x68, 0x10, 0x19, 0x2c, 0xdf, 0xbd, 0xda, 0x7e, 0xda, 0x58,
	0x09, 0xbe, 0xd0, 0x39, 0xbf, 0xf0, 0xbe, 0xfd, 0x70, 0xcc, 0xd5, 0x24, 0x3b, 0x0f, 0x42, 0x11,
	0xf5, 0xcf, 0x53, 0x11, 0x12, 0x92, 0xf6, 0xaf, 0x44, 0x8e, 0x74, 0x90, 0xb1, 0xe8, 0x5f, 0x3e,
	0xee, 0xe7, 0x9e, 0xd0, 0xe7, 0x55, 0x73, 0xeb, 0xc7, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf7,
	0x2d, 0x49, 0xf3, 0x5c, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReportDayServiceClient is the client API for ReportDayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportDayServiceClient interface {
	// Create creates report-day.
	Create(ctx context.Context, in *CreateReportDayRequest, opts ...grpc.CallOption) (*CreateReportDayResponse, error)
	// Get returns the report-day matching the given id.
	Get(ctx context.Context, in *GetReportDayRequest, opts ...grpc.CallOption) (*GetReportDayResponse, error)
	// Update updates the given report-day.
	Update(ctx context.Context, in *UpdateReportDayRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete deletes the report-day matching the given id.
	Delete(ctx context.Context, in *DeleteReportDayRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List lists the available report-Day.
	List(ctx context.Context, in *ListReportDayRequest, opts ...grpc.CallOption) (*ListReportDayResponse, error)
}

type reportDayServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewReportDayServiceClient(cc grpc.ClientConnInterface) ReportDayServiceClient {
	return &reportDayServiceClient{cc}
}

func (c *reportDayServiceClient) Create(ctx context.Context, in *CreateReportDayRequest, opts ...grpc.CallOption) (*CreateReportDayResponse, error) {
	out := new(CreateReportDayResponse)
	err := c.cc.Invoke(ctx, "/api.ReportDayService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportDayServiceClient) Get(ctx context.Context, in *GetReportDayRequest, opts ...grpc.CallOption) (*GetReportDayResponse, error) {
	out := new(GetReportDayResponse)
	err := c.cc.Invoke(ctx, "/api.ReportDayService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportDayServiceClient) Update(ctx context.Context, in *UpdateReportDayRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.ReportDayService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportDayServiceClient) Delete(ctx context.Context, in *DeleteReportDayRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.ReportDayService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportDayServiceClient) List(ctx context.Context, in *ListReportDayRequest, opts ...grpc.CallOption) (*ListReportDayResponse, error) {
	out := new(ListReportDayResponse)
	err := c.cc.Invoke(ctx, "/api.ReportDayService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportDayServiceServer is the server API for ReportDayService service.
type ReportDayServiceServer interface {
	// Create creates report-day.
	Create(context.Context, *CreateReportDayRequest) (*CreateReportDayResponse, error)
	// Get returns the report-day matching the given id.
	Get(context.Context, *GetReportDayRequest) (*GetReportDayResponse, error)
	// Update updates the given report-day.
	Update(context.Context, *UpdateReportDayRequest) (*empty.Empty, error)
	// Delete deletes the report-day matching the given id.
	Delete(context.Context, *DeleteReportDayRequest) (*empty.Empty, error)
	// List lists the available report-Day.
	List(context.Context, *ListReportDayRequest) (*ListReportDayResponse, error)
}

// UnimplementedReportDayServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReportDayServiceServer struct {
}

func (*UnimplementedReportDayServiceServer) Create(ctx context.Context, req *CreateReportDayRequest) (*CreateReportDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedReportDayServiceServer) Get(ctx context.Context, req *GetReportDayRequest) (*GetReportDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedReportDayServiceServer) Update(ctx context.Context, req *UpdateReportDayRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedReportDayServiceServer) Delete(ctx context.Context, req *DeleteReportDayRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedReportDayServiceServer) List(ctx context.Context, req *ListReportDayRequest) (*ListReportDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterReportDayServiceServer(s *grpc.Server, srv ReportDayServiceServer) {
	s.RegisterService(&_ReportDayService_serviceDesc, srv)
}

func _ReportDayService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReportDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportDayServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportDayService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportDayServiceServer).Create(ctx, req.(*CreateReportDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportDayService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportDayServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportDayService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportDayServiceServer).Get(ctx, req.(*GetReportDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportDayService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReportDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportDayServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportDayService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportDayServiceServer).Update(ctx, req.(*UpdateReportDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportDayService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReportDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportDayServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportDayService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportDayServiceServer).Delete(ctx, req.(*DeleteReportDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportDayService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReportDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportDayServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReportDayService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportDayServiceServer).List(ctx, req.(*ListReportDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReportDayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ReportDayService",
	HandlerType: (*ReportDayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ReportDayService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ReportDayService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ReportDayService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ReportDayService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ReportDayService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/reportDay.proto",
}
