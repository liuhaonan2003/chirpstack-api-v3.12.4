// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/test.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Test struct {
	// Test ID.
	// Will be set automatically on create.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional remark to store with the test.
	Remark               string   `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{0}
}

func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Test) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type TestListItem struct {
	// User ID.
	// Will be set automatically on create.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// remark of the test.
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TestListItem) Reset()         { *m = TestListItem{} }
func (m *TestListItem) String() string { return proto.CompactTextString(m) }
func (*TestListItem) ProtoMessage()    {}
func (*TestListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{1}
}

func (m *TestListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestListItem.Unmarshal(m, b)
}
func (m *TestListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestListItem.Marshal(b, m, deterministic)
}
func (m *TestListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestListItem.Merge(m, src)
}
func (m *TestListItem) XXX_Size() int {
	return xxx_messageInfo_TestListItem.Size(m)
}
func (m *TestListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TestListItem.DiscardUnknown(m)
}

var xxx_messageInfo_TestListItem proto.InternalMessageInfo

func (m *TestListItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestListItem) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *TestListItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TestListItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateTestRequest struct {
	// Test object to create.
	Test                 *Test    `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTestRequest) Reset()         { *m = CreateTestRequest{} }
func (m *CreateTestRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTestRequest) ProtoMessage()    {}
func (*CreateTestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{2}
}

func (m *CreateTestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTestRequest.Unmarshal(m, b)
}
func (m *CreateTestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTestRequest.Marshal(b, m, deterministic)
}
func (m *CreateTestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTestRequest.Merge(m, src)
}
func (m *CreateTestRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTestRequest.Size(m)
}
func (m *CreateTestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTestRequest proto.InternalMessageInfo

func (m *CreateTestRequest) GetTest() *Test {
	if m != nil {
		return m.Test
	}
	return nil
}

type CreateTestResponse struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTestResponse) Reset()         { *m = CreateTestResponse{} }
func (m *CreateTestResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTestResponse) ProtoMessage()    {}
func (*CreateTestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{3}
}

func (m *CreateTestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTestResponse.Unmarshal(m, b)
}
func (m *CreateTestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTestResponse.Marshal(b, m, deterministic)
}
func (m *CreateTestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTestResponse.Merge(m, src)
}
func (m *CreateTestResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTestResponse.Size(m)
}
func (m *CreateTestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTestResponse proto.InternalMessageInfo

func (m *CreateTestResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetTestRequest struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTestRequest) Reset()         { *m = GetTestRequest{} }
func (m *GetTestRequest) String() string { return proto.CompactTextString(m) }
func (*GetTestRequest) ProtoMessage()    {}
func (*GetTestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{4}
}

func (m *GetTestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTestRequest.Unmarshal(m, b)
}
func (m *GetTestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTestRequest.Marshal(b, m, deterministic)
}
func (m *GetTestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTestRequest.Merge(m, src)
}
func (m *GetTestRequest) XXX_Size() int {
	return xxx_messageInfo_GetTestRequest.Size(m)
}
func (m *GetTestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTestRequest proto.InternalMessageInfo

func (m *GetTestRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetTestResponse struct {
	// Test object.
	Test *Test `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetTestResponse) Reset()         { *m = GetTestResponse{} }
func (m *GetTestResponse) String() string { return proto.CompactTextString(m) }
func (*GetTestResponse) ProtoMessage()    {}
func (*GetTestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{5}
}

func (m *GetTestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTestResponse.Unmarshal(m, b)
}
func (m *GetTestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTestResponse.Marshal(b, m, deterministic)
}
func (m *GetTestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTestResponse.Merge(m, src)
}
func (m *GetTestResponse) XXX_Size() int {
	return xxx_messageInfo_GetTestResponse.Size(m)
}
func (m *GetTestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTestResponse proto.InternalMessageInfo

func (m *GetTestResponse) GetTest() *Test {
	if m != nil {
		return m.Test
	}
	return nil
}

func (m *GetTestResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetTestResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type UpdateTestRequest struct {
	// Test object to update.
	Test                 *Test    `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTestRequest) Reset()         { *m = UpdateTestRequest{} }
func (m *UpdateTestRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTestRequest) ProtoMessage()    {}
func (*UpdateTestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{6}
}

func (m *UpdateTestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTestRequest.Unmarshal(m, b)
}
func (m *UpdateTestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTestRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTestRequest.Merge(m, src)
}
func (m *UpdateTestRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTestRequest.Size(m)
}
func (m *UpdateTestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTestRequest proto.InternalMessageInfo

func (m *UpdateTestRequest) GetTest() *Test {
	if m != nil {
		return m.Test
	}
	return nil
}

type DeleteTestRequest struct {
	// Test ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTestRequest) Reset()         { *m = DeleteTestRequest{} }
func (m *DeleteTestRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTestRequest) ProtoMessage()    {}
func (*DeleteTestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{7}
}

func (m *DeleteTestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTestRequest.Unmarshal(m, b)
}
func (m *DeleteTestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTestRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTestRequest.Merge(m, src)
}
func (m *DeleteTestRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTestRequest.Size(m)
}
func (m *DeleteTestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTestRequest proto.InternalMessageInfo

func (m *DeleteTestRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListTestRequest struct {
	// Max number of items to return.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTestRequest) Reset()         { *m = ListTestRequest{} }
func (m *ListTestRequest) String() string { return proto.CompactTextString(m) }
func (*ListTestRequest) ProtoMessage()    {}
func (*ListTestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{8}
}

func (m *ListTestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTestRequest.Unmarshal(m, b)
}
func (m *ListTestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTestRequest.Marshal(b, m, deterministic)
}
func (m *ListTestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTestRequest.Merge(m, src)
}
func (m *ListTestRequest) XXX_Size() int {
	return xxx_messageInfo_ListTestRequest.Size(m)
}
func (m *ListTestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTestRequest proto.InternalMessageInfo

func (m *ListTestRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListTestRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListTestResponse struct {
	// Total number of test.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Test within the result-set.
	Result               []*TestListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListTestResponse) Reset()         { *m = ListTestResponse{} }
func (m *ListTestResponse) String() string { return proto.CompactTextString(m) }
func (*ListTestResponse) ProtoMessage()    {}
func (*ListTestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f142baa99c14365, []int{9}
}

func (m *ListTestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTestResponse.Unmarshal(m, b)
}
func (m *ListTestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTestResponse.Marshal(b, m, deterministic)
}
func (m *ListTestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTestResponse.Merge(m, src)
}
func (m *ListTestResponse) XXX_Size() int {
	return xxx_messageInfo_ListTestResponse.Size(m)
}
func (m *ListTestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTestResponse proto.InternalMessageInfo

func (m *ListTestResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListTestResponse) GetResult() []*TestListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Test)(nil), "api.Test")
	proto.RegisterType((*TestListItem)(nil), "api.TestListItem")
	proto.RegisterType((*CreateTestRequest)(nil), "api.CreateTestRequest")
	proto.RegisterType((*CreateTestResponse)(nil), "api.CreateTestResponse")
	proto.RegisterType((*GetTestRequest)(nil), "api.GetTestRequest")
	proto.RegisterType((*GetTestResponse)(nil), "api.GetTestResponse")
	proto.RegisterType((*UpdateTestRequest)(nil), "api.UpdateTestRequest")
	proto.RegisterType((*DeleteTestRequest)(nil), "api.DeleteTestRequest")
	proto.RegisterType((*ListTestRequest)(nil), "api.ListTestRequest")
	proto.RegisterType((*ListTestResponse)(nil), "api.ListTestResponse")
}

func init() {
	proto.RegisterFile("as/external/api/test.proto", fileDescriptor_3f142baa99c14365)
}

var fileDescriptor_3f142baa99c14365 = []byte{
	// 599 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0xe3, 0x10, 0x29, 0x37, 0x28, 0x6d, 0xa6, 0x25, 0x44, 0xe6, 0xd1, 0x60, 0x58, 0x84,
	0x4a, 0xd8, 0x52, 0xba, 0x40, 0xb0, 0x41, 0x6d, 0x81, 0x82, 0x84, 0x44, 0x65, 0x8a, 0x84, 0x58,
	0x50, 0x4d, 0xec, 0x69, 0x3a, 0xaa, 0xed, 0x31, 0x9e, 0xeb, 0x0a, 0x84, 0xba, 0xe1, 0x17, 0xd8,
	0xb2, 0x66, 0xc5, 0xdf, 0xf0, 0x0b, 0x7c, 0x08, 0x9a, 0xf1, 0x38, 0x4d, 0x1c, 0xf1, 0x28, 0xcb,
	0x7b, 0xef, 0x39, 0xc7, 0xe7, 0x3e, 0x3c, 0xe0, 0x50, 0xe9, 0xb3, 0x0f, 0xc8, 0xf2, 0x94, 0xc6,
	0x3e, 0xcd, 0xb8, 0x8f, 0x4c, 0xa2, 0x97, 0xe5, 0x02, 0x05, 0xb1, 0x69, 0xc6, 0x9d, 0xeb, 0x53,
	0x21, 0xa6, 0x31, 0xd3, 0x35, 0x9a, 0xa6, 0x02, 0x29, 0x72, 0x91, 0xca, 0x12, 0xe2, 0x6c, 0x98,
	0xaa, 0x8e, 0x26, 0xc5, 0x91, 0x8f, 0x3c, 0x61, 0x12, 0x69, 0x92, 0x19, 0xc0, 0xb5, 0x3a, 0x80,
	0x25, 0x19, 0x7e, 0x2c, 0x8b, 0xae, 0x07, 0xcd, 0x03, 0x26, 0x91, 0x74, 0xa1, 0xc1, 0xa3, 0x81,
	0x35, 0xb4, 0x46, 0x76, 0xd0, 0xe0, 0x11, 0xe9, 0x43, 0x2b, 0x67, 0x09, 0xcd, 0x4f, 0x06, 0x8d,
	0xa1, 0x35, 0x6a, 0x07, 0x26, 0x72, 0xbf, 0x5b, 0x70, 0x59, 0x11, 0x5e, 0x70, 0x89, 0xcf, 0x91,
	0x25, 0xff, 0x4a, 0x24, 0x0f, 0x00, 0xc2, 0x9c, 0x51, 0x64, 0xd1, 0x21, 0xc5, 0x81, 0x3d, 0xb4,
	0x46, 0x9d, 0xb1, 0xe3, 0x95, 0xd6, 0xbc, 0xca, 0x9a, 0x77, 0x50, 0x79, 0x0f, 0xda, 0x06, 0xbd,
	0x8d, 0x8a, 0x5a, 0x64, 0x51, 0x45, 0x6d, 0xfe, 0x9d, 0x6a, 0xd0, 0xdb, 0xe8, 0x8e, 0xa1, 0xb7,
	0xab, 0x75, 0x94, 0xe7, 0x80, 0xbd, 0x2f, 0x54, 0xaf, 0x37, 0xa0, 0xa9, 0x46, 0xac, 0x4d, 0x77,
	0xc6, 0x6d, 0x8f, 0x66, 0xdc, 0xd3, 0x75, 0x9d, 0x76, 0xef, 0x00, 0x99, 0xe7, 0xc8, 0x4c, 0xa4,
	0x92, 0xd5, 0xfb, 0x74, 0x87, 0xd0, 0xdd, 0x63, 0x38, 0x2f, 0x5b, 0x47, 0x7c, 0xb3, 0x60, 0x65,
	0x06, 0x31, 0x2a, 0x7f, 0xfe, 0x74, 0x6d, 0x48, 0x8d, 0xff, 0x1f, 0x92, 0x7d, 0xc1, 0x21, 0xbd,
	0xd6, 0xc1, 0x05, 0x86, 0x74, 0x1b, 0x7a, 0x8f, 0x59, 0xcc, 0x16, 0x39, 0xf5, 0x09, 0x3c, 0x82,
	0x15, 0x75, 0x27, 0xf3, 0x90, 0x75, 0xb8, 0x14, 0xf3, 0x84, 0xa3, 0x41, 0x95, 0x81, 0x3a, 0x1a,
	0x71, 0x74, 0x24, 0x59, 0xd9, 0xb3, 0x1d, 0x98, 0xc8, 0x7d, 0x07, 0xab, 0xe7, 0x02, 0x66, 0x84,
	0x1b, 0xd0, 0x41, 0x81, 0x34, 0x3e, 0x0c, 0x45, 0x91, 0x56, 0x3a, 0xa0, 0x53, 0xbb, 0x2a, 0x43,
	0xee, 0xaa, 0x0b, 0x94, 0x45, 0xac, 0xc4, 0xec, 0x51, 0x67, 0xdc, 0x9b, 0x79, 0xaf, 0x8e, 0x36,
	0x30, 0x80, 0xf1, 0x57, 0x1b, 0x3a, 0xaa, 0xf0, 0x8a, 0xe5, 0xa7, 0x3c, 0x64, 0xe4, 0x25, 0xb4,
	0xca, 0xd5, 0x93, 0xbe, 0x26, 0x2d, 0xdd, 0x8e, 0x73, 0x75, 0x29, 0x5f, 0xda, 0x72, 0xd7, 0x3f,
	0xff, 0xf8, 0xf9, 0xa5, 0xd1, 0x75, 0xdb, 0xb3, 0x5f, 0xf8, 0xa1, 0xb5, 0x49, 0x9e, 0x81, 0xbd,
	0xc7, 0x90, 0xac, 0x69, 0xd6, 0xe2, 0xbd, 0x38, 0xeb, 0x8b, 0x49, 0xa3, 0xd3, 0xd7, 0x3a, 0xab,
	0xa4, 0x3b, 0xd3, 0xf1, 0x3f, 0xf1, 0xe8, 0x8c, 0xbc, 0x81, 0x56, 0xb9, 0x24, 0x63, 0x6d, 0x69,
	0x63, 0x4e, 0x7f, 0x69, 0xdb, 0x4f, 0xd4, 0x8f, 0xee, 0xde, 0xd4, 0x8a, 0x03, 0x67, 0x6d, 0x4e,
	0x51, 0x3f, 0x31, 0x3c, 0x3a, 0x53, 0x1e, 0xf7, 0xa1, 0x55, 0xae, 0xd2, 0x28, 0x2f, 0xed, 0xf5,
	0xb7, 0xca, 0xc6, 0xeb, 0x66, 0xdd, 0xeb, 0x53, 0x68, 0xaa, 0x51, 0x93, 0xb2, 0xc3, 0xda, 0x09,
	0x38, 0x57, 0x6a, 0x59, 0xd3, 0x78, 0x4f, 0x8b, 0x75, 0xc8, 0xf9, 0x00, 0x77, 0x38, 0xdc, 0xe2,
	0xc2, 0x0b, 0x8f, 0x79, 0x9e, 0x49, 0xa4, 0xe1, 0x89, 0x26, 0x52, 0xe9, 0x55, 0xaf, 0xa5, 0x8a,
	0x77, 0xda, 0x4a, 0x65, 0x5f, 0x19, 0xdb, 0xb7, 0xde, 0xde, 0x9f, 0x72, 0x3c, 0x2e, 0x26, 0x5e,
	0x28, 0x12, 0x7f, 0x92, 0x8b, 0x90, 0xd2, 0xdc, 0x3f, 0xe7, 0xdf, 0x53, 0xca, 0x53, 0xe1, 0x9f,
	0x6e, 0xf9, 0xb5, 0x37, 0x77, 0xd2, 0xd2, 0xad, 0x6d, 0xfd, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x01,
	0x2c, 0xc6, 0x79, 0x8d, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	// Create creates test.
	Create(ctx context.Context, in *CreateTestRequest, opts ...grpc.CallOption) (*CreateTestResponse, error)
	// Get returns the test matching the given id.
	Get(ctx context.Context, in *GetTestRequest, opts ...grpc.CallOption) (*GetTestResponse, error)
	// Update updates the given test.
	Update(ctx context.Context, in *UpdateTestRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete deletes the test matching the given id.
	Delete(ctx context.Context, in *DeleteTestRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List lists the available test.
	List(ctx context.Context, in *ListTestRequest, opts ...grpc.CallOption) (*ListTestResponse, error)
}

type testServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTestServiceClient(cc grpc.ClientConnInterface) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) Create(ctx context.Context, in *CreateTestRequest, opts ...grpc.CallOption) (*CreateTestResponse, error) {
	out := new(CreateTestResponse)
	err := c.cc.Invoke(ctx, "/api.TestService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServiceClient) Get(ctx context.Context, in *GetTestRequest, opts ...grpc.CallOption) (*GetTestResponse, error) {
	out := new(GetTestResponse)
	err := c.cc.Invoke(ctx, "/api.TestService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServiceClient) Update(ctx context.Context, in *UpdateTestRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.TestService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServiceClient) Delete(ctx context.Context, in *DeleteTestRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.TestService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServiceClient) List(ctx context.Context, in *ListTestRequest, opts ...grpc.CallOption) (*ListTestResponse, error) {
	out := new(ListTestResponse)
	err := c.cc.Invoke(ctx, "/api.TestService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	// Create creates test.
	Create(context.Context, *CreateTestRequest) (*CreateTestResponse, error)
	// Get returns the test matching the given id.
	Get(context.Context, *GetTestRequest) (*GetTestResponse, error)
	// Update updates the given test.
	Update(context.Context, *UpdateTestRequest) (*empty.Empty, error)
	// Delete deletes the test matching the given id.
	Delete(context.Context, *DeleteTestRequest) (*empty.Empty, error)
	// List lists the available test.
	List(context.Context, *ListTestRequest) (*ListTestResponse, error)
}

// UnimplementedTestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestServiceServer struct {
}

func (*UnimplementedTestServiceServer) Create(ctx context.Context, req *CreateTestRequest) (*CreateTestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTestServiceServer) Get(ctx context.Context, req *GetTestRequest) (*GetTestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTestServiceServer) Update(ctx context.Context, req *UpdateTestRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTestServiceServer) Delete(ctx context.Context, req *DeleteTestRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTestServiceServer) List(ctx context.Context, req *ListTestRequest) (*ListTestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TestService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).Create(ctx, req.(*CreateTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TestService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).Get(ctx, req.(*GetTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TestService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).Update(ctx, req.(*UpdateTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TestService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).Delete(ctx, req.(*DeleteTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TestService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).List(ctx, req.(*ListTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _TestService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TestService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TestService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TestService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _TestService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/test.proto",
}
